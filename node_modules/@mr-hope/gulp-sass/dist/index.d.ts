import { Exception, StringOptions, LegacyException, LegacyStringOptions } from 'sass';
import { Transform } from 'stream';
import { RawSourceMap } from 'source-map-js';

interface SassError extends Exception {
    messageFormatted?: string;
    messageOriginal?: string;
    relativePath?: string;
}
declare type SassOptions = StringOptions<"sync">;
interface GulpSass {
    (pluginOptions?: StringOptions<"sync">): Transform;
    logError(error: SassError): void;
}
declare const sass: GulpSass;
declare type SassAsyncOptions = StringOptions<"async">;
interface GulpSassAsync {
    (pluginOptions?: StringOptions<"async">, sync?: boolean): Transform;
    logError(error: SassError): void;
}
declare const sassAsync: GulpSassAsync;

interface LegacySassMap extends RawSourceMap {
    sourceRoot: string;
    file: string;
}
interface LegacySassError extends LegacyException {
    messageFormatted?: string;
    messageOriginal?: string;
    relativePath?: string;
}
declare type LegacySassOptions = Omit<LegacyStringOptions<"sync">, "data" | "file">;
interface LegacyGulpSass {
    (pluginOptions?: LegacySassOptions): Transform;
    logError(error: LegacySassError): void;
}
declare const legacy: LegacyGulpSass;
declare type LegacySassAsyncOptions = Omit<LegacyStringOptions<"async">, "data" | "file">;
interface LegacyGulpSassAsync {
    (pluginOptions?: LegacySassAsyncOptions, sync?: boolean): Transform;
    logError(error: LegacySassError): void;
}
declare const legacyAsync: LegacyGulpSassAsync;

export { GulpSass, GulpSassAsync, LegacyGulpSass, LegacyGulpSassAsync, LegacySassAsyncOptions, LegacySassError, LegacySassMap, LegacySassOptions, SassAsyncOptions, SassError, SassOptions, legacy, legacyAsync, sass, sassAsync };
//# sourceMappingURL=index.d.ts.map
