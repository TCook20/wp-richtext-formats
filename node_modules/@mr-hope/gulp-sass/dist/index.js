"use strict";var e=require("path"),t=require("url"),s=require("sass"),r=require("stream"),a=require("chalk"),n=require("plugin-error"),i=require("replace-ext"),o=require("strip-ansi"),c=require("vinyl-sourcemaps-apply");const u=(s,r)=>{if(r.sourceMap){const a=r.sourceMap,n=s.relative;a.sources=a.sources.map((r=>r.startsWith("data:")?s.relative:e.relative(e.dirname(s.path),t.fileURLToPath(r)))),a.file=i(n,".css"),c(s,a)}return s.contents=Buffer.from(r.css),s.path=i(s.path,".css"),s.stat&&(s.stat.atime=s.stat.mtime=s.stat.ctime=new Date),s},l=(t={},c)=>new r.Transform({objectMode:!0,transform(r,l,p){const m={...t};if(r.isNull())return p(null,r);if(r.isStream())return p(new n("gulp-sass","Streaming not supported"));if(r.isBuffer()){if(0===e.basename(r.path).indexOf("_"))return p();if(!r.contents.length)return r.path=i(r.path,".css"),p(null,r);const t=r.contents.toString();".sass"===e.extname(r.path)&&(m.syntax="indented"),m.loadPaths||(m.loadPaths=[]),m.loadPaths.unshift(e.dirname(r.path)),r.sourceMap&&(m.sourceMap=!0);const l=t=>{const s=t.span?.url?.pathname?t.span.url.pathname:r.path,i=e.relative(process.cwd(),s),c=[a.underline(i),t.sassMessage].join("\n");return t.messageFormatted=c,t.messageOriginal=t.message,t.message=o(c),t.relativePath=i,p(new n("gulp-sass",t))};if(c)try{return p(null,u(r,s.compileString(t,m)))}catch(e){return l(e)}s.compileStringAsync(t,m).then((e=>p(null,u(r,e)))).catch((e=>l(e)))}}});function p(e){const t=new n("sass",e.messageFormatted||e.message).toString();process.stderr.write(`${t}\n`),this.emit("end")}const m=e=>l(e,!0);m.logError=p;const h=e=>l(e,!1);h.logError=p;const d=(t,s)=>{if(s.map){const r=JSON.parse(s.map.toString()),a=r.file.replace(/^stdout$/,"stdin"),n=t.relative,o=e.dirname(n);let u;o&&(u=r.sources.indexOf(a)),r.sources=r.sources.map(((t,s)=>s===u?t:e.join(o,t))),r.sources=r.sources.filter((e=>e&&"stdin"!==e)),r.file=i(n,".css"),c(t,r)}return t.contents=s.css,t.path=i(t.path,".css"),t.stat&&(t.stat.atime=t.stat.mtime=t.stat.ctime=new Date),t},f=(t={},c)=>new r.Transform({objectMode:!0,transform(r,u,l){const p={...t};if(r.isNull())return l(null,r);if(r.isStream())return l(new n("gulp-sass","Streaming not supported"));if(r.isBuffer()){if(0===e.basename(r.path).indexOf("_"))return l();if(!r.contents.length)return r.path=i(r.path,".css"),l(null,r);p.data=r.contents.toString(),p.file=r.path,".sass"===e.extname(r.path)&&(p.indentedSyntax=!0),p.includePaths||(p.includePaths=[]),p.includePaths.unshift(e.dirname(r.path)),r.sourceMap&&(p.sourceMap=r.path,p.omitSourceMapUrl=!0,p.sourceMapContents=!0);const t=t=>{const s=("stdin"===t.file?r.path:t.file)||r.path,i=e.relative(process.cwd(),s),c=[a.underline(i),t.formatted].join("\n");return t.messageFormatted=c,t.messageOriginal=t.message,t.message=o(c),t.relativePath=i,l(new n("gulp-sass",t))};if(c)try{return l(null,d(r,s.renderSync(p)))}catch(e){return t(e)}return s.render(p,((e,s)=>e?t(e):l(null,d(r,s))))}}});function g(e){const t=new n("sass",e.messageFormatted||"").toString();process.stderr.write(`${t}\n`),this.emit("end")}const S=e=>f(e,!0);S.logError=g;const w=e=>f(e,!1);w.logError=g,exports.legacy=S,exports.legacyAsync=w,exports.sass=m,exports.sassAsync=h;
//# sourceMappingURL=index.js.map
