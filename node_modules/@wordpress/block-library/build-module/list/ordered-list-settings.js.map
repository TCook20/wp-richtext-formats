{"version":3,"names":["__","InspectorControls","TextControl","PanelBody","ToggleControl","SelectControl","OrderedListSettings","setAttributes","reversed","start","type","createElement","title","__nextHasNoMarginBottom","label","onChange","value","int","parseInt","isNaN","undefined","Number","isInteger","toString","step","options","newValue","checked"],"sources":["@wordpress/block-library/src/list/ordered-list-settings.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n\tTextControl,\n\tPanelBody,\n\tToggleControl,\n\tSelectControl,\n} from '@wordpress/components';\n\nconst OrderedListSettings = ( { setAttributes, reversed, start, type } ) => (\n\t<InspectorControls>\n\t\t<PanelBody title={ __( 'Ordered list settings' ) }>\n\t\t\t<TextControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Start value' ) }\n\t\t\t\ttype=\"number\"\n\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\tconst int = parseInt( value, 10 );\n\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t// It should be possible to unset the value,\n\t\t\t\t\t\t// e.g. with an empty string.\n\t\t\t\t\t\tstart: isNaN( int ) ? undefined : int,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tvalue={ Number.isInteger( start ) ? start.toString( 10 ) : '' }\n\t\t\t\tstep=\"1\"\n\t\t\t/>\n\t\t\t<SelectControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Numbering style' ) }\n\t\t\t\toptions={ [\n\t\t\t\t\t{ value: '1', label: __( 'Numbers' ) },\n\t\t\t\t\t{ value: 'A', label: __( 'Uppercase letters' ) },\n\t\t\t\t\t{ value: 'a', label: __( 'Lowercase letters' ) },\n\t\t\t\t\t{ value: 'I', label: __( 'Uppercase Roman numerals' ) },\n\t\t\t\t\t{ value: 'i', label: __( 'Lowercase Roman numerals' ) },\n\t\t\t\t] }\n\t\t\t\tvalue={ type }\n\t\t\t\tonChange={ ( newValue ) => setAttributes( { type: newValue } ) }\n\t\t\t/>\n\t\t\t<ToggleControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Reverse list numbering' ) }\n\t\t\t\tchecked={ reversed || false }\n\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t// Unset the attribute if not reversed.\n\t\t\t\t\t\treversed: value || undefined,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t/>\n\t\t</PanelBody>\n\t</InspectorControls>\n);\n\nexport default OrderedListSettings;\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SACCC,WAAW,EACXC,SAAS,EACTC,aAAa,EACbC,aAAa,QACP,uBAAuB;AAE9B,MAAMC,mBAAmB,GAAGA,CAAE;EAAEC,aAAa;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAK,CAAC,KACrEC,aAAA,CAACV,iBAAiB,QACjBU,aAAA,CAACR,SAAS;EAACS,KAAK,EAAGZ,EAAE,CAAE,uBAAwB;AAAG,GACjDW,aAAA,CAACT,WAAW;EACXW,uBAAuB;EACvBC,KAAK,EAAGd,EAAE,CAAE,aAAc,CAAG;EAC7BU,IAAI,EAAC,QAAQ;EACbK,QAAQ,EAAKC,KAAK,IAAM;IACvB,MAAMC,GAAG,GAAGC,QAAQ,CAAEF,KAAK,EAAE,EAAG,CAAC;IAEjCT,aAAa,CAAE;MACd;MACA;MACAE,KAAK,EAAEU,KAAK,CAAEF,GAAI,CAAC,GAAGG,SAAS,GAAGH;IACnC,CAAE,CAAC;EACJ,CAAG;EACHD,KAAK,EAAGK,MAAM,CAACC,SAAS,CAAEb,KAAM,CAAC,GAAGA,KAAK,CAACc,QAAQ,CAAE,EAAG,CAAC,GAAG,EAAI;EAC/DC,IAAI,EAAC;AAAG,CACR,CAAC,EACFb,aAAA,CAACN,aAAa;EACbQ,uBAAuB;EACvBC,KAAK,EAAGd,EAAE,CAAE,iBAAkB,CAAG;EACjCyB,OAAO,EAAG,CACT;IAAET,KAAK,EAAE,GAAG;IAAEF,KAAK,EAAEd,EAAE,CAAE,SAAU;EAAE,CAAC,EACtC;IAAEgB,KAAK,EAAE,GAAG;IAAEF,KAAK,EAAEd,EAAE,CAAE,mBAAoB;EAAE,CAAC,EAChD;IAAEgB,KAAK,EAAE,GAAG;IAAEF,KAAK,EAAEd,EAAE,CAAE,mBAAoB;EAAE,CAAC,EAChD;IAAEgB,KAAK,EAAE,GAAG;IAAEF,KAAK,EAAEd,EAAE,CAAE,0BAA2B;EAAE,CAAC,EACvD;IAAEgB,KAAK,EAAE,GAAG;IAAEF,KAAK,EAAEd,EAAE,CAAE,0BAA2B;EAAE,CAAC,CACrD;EACHgB,KAAK,EAAGN,IAAM;EACdK,QAAQ,EAAKW,QAAQ,IAAMnB,aAAa,CAAE;IAAEG,IAAI,EAAEgB;EAAS,CAAE;AAAG,CAChE,CAAC,EACFf,aAAA,CAACP,aAAa;EACbS,uBAAuB;EACvBC,KAAK,EAAGd,EAAE,CAAE,wBAAyB,CAAG;EACxC2B,OAAO,EAAGnB,QAAQ,IAAI,KAAO;EAC7BO,QAAQ,EAAKC,KAAK,IAAM;IACvBT,aAAa,CAAE;MACd;MACAC,QAAQ,EAAEQ,KAAK,IAAII;IACpB,CAAE,CAAC;EACJ;AAAG,CACH,CACS,CACO,CACnB;AAED,eAAed,mBAAmB"}