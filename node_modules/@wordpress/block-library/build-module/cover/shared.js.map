{"version":3,"names":["FastAverageColor","colord","getBlobTypeByURL","isBlobURL","applyFilters","POSITION_CLASSNAMES","center","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","COVER_MIN_HEIGHT","COVER_MAX_HEIGHT","COVER_DEFAULT_HEIGHT","DEFAULT_FOCAL_POINT","x","y","ALLOWED_MEDIA_TYPES","mediaPosition","Math","round","dimRatioToClass","ratio","undefined","attributesFromMedia","setAttributes","dimRatio","media","isDark","url","id","type","mediaType","media_type","alt","backgroundType","focalPoint","hasParallax","isContentPositionCenter","contentPosition","getPositionClassName","compositeSourceOver","source","dest","r","a","g","b","retrieveFastAverageColor","fastAverageColor","getCoverIsDark","overlayColor","overlay","alpha","toRgb","imgCrossOrigin","value","getColorAsync","defaultColor","silent","process","env","NODE_ENV","crossOrigin","composite","error","background"],"sources":["@wordpress/block-library/src/cover/shared.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { FastAverageColor } from 'fast-average-color';\nimport { colord } from 'colord';\n\n/**\n * WordPress dependencies\n */\nimport { getBlobTypeByURL, isBlobURL } from '@wordpress/blob';\nimport { applyFilters } from '@wordpress/hooks';\n\nconst POSITION_CLASSNAMES = {\n\t'top left': 'is-position-top-left',\n\t'top center': 'is-position-top-center',\n\t'top right': 'is-position-top-right',\n\t'center left': 'is-position-center-left',\n\t'center center': 'is-position-center-center',\n\tcenter: 'is-position-center-center',\n\t'center right': 'is-position-center-right',\n\t'bottom left': 'is-position-bottom-left',\n\t'bottom center': 'is-position-bottom-center',\n\t'bottom right': 'is-position-bottom-right',\n};\n\nexport const IMAGE_BACKGROUND_TYPE = 'image';\nexport const VIDEO_BACKGROUND_TYPE = 'video';\nexport const COVER_MIN_HEIGHT = 50;\nexport const COVER_MAX_HEIGHT = 1000;\nexport const COVER_DEFAULT_HEIGHT = 300;\nexport const DEFAULT_FOCAL_POINT = { x: 0.5, y: 0.5 };\nexport const ALLOWED_MEDIA_TYPES = [ 'image', 'video' ];\n\nexport function mediaPosition( { x, y } = DEFAULT_FOCAL_POINT ) {\n\treturn `${ Math.round( x * 100 ) }% ${ Math.round( y * 100 ) }%`;\n}\n\nexport function dimRatioToClass( ratio ) {\n\treturn ratio === 50 || ! ratio === undefined\n\t\t? null\n\t\t: 'has-background-dim-' + 10 * Math.round( ratio / 10 );\n}\n\nexport function attributesFromMedia( setAttributes, dimRatio ) {\n\treturn ( media, isDark ) => {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tsetAttributes( { url: undefined, id: undefined, isDark } );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isBlobURL( media.url ) ) {\n\t\t\tmedia.type = getBlobTypeByURL( media.url );\n\t\t}\n\n\t\tlet mediaType;\n\t\t// For media selections originated from a file upload.\n\t\tif ( media.media_type ) {\n\t\t\tif ( media.media_type === IMAGE_BACKGROUND_TYPE ) {\n\t\t\t\tmediaType = IMAGE_BACKGROUND_TYPE;\n\t\t\t} else {\n\t\t\t\t// only images and videos are accepted so if the media_type is not an image we can assume it is a video.\n\t\t\t\t// Videos contain the media type of 'file' in the object returned from the rest api.\n\t\t\t\tmediaType = VIDEO_BACKGROUND_TYPE;\n\t\t\t}\n\t\t} else {\n\t\t\t// For media selections originated from existing files in the media library.\n\t\t\tif (\n\t\t\t\tmedia.type !== IMAGE_BACKGROUND_TYPE &&\n\t\t\t\tmedia.type !== VIDEO_BACKGROUND_TYPE\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmediaType = media.type;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\tisDark,\n\t\t\tdimRatio: dimRatio === 100 ? 50 : dimRatio,\n\t\t\turl: media.url,\n\t\t\tid: media.id,\n\t\t\talt: media?.alt,\n\t\t\tbackgroundType: mediaType,\n\t\t\tfocalPoint: undefined,\n\t\t\t...( mediaType === VIDEO_BACKGROUND_TYPE\n\t\t\t\t? { hasParallax: undefined }\n\t\t\t\t: {} ),\n\t\t} );\n\t};\n}\n\n/**\n * Checks of the contentPosition is the center (default) position.\n *\n * @param {string} contentPosition The current content position.\n * @return {boolean} Whether the contentPosition is center.\n */\nexport function isContentPositionCenter( contentPosition ) {\n\treturn (\n\t\t! contentPosition ||\n\t\tcontentPosition === 'center center' ||\n\t\tcontentPosition === 'center'\n\t);\n}\n\n/**\n * Retrieves the className for the current contentPosition.\n * The default position (center) will not have a className.\n *\n * @param {string} contentPosition The current content position.\n * @return {string} The className assigned to the contentPosition.\n */\nexport function getPositionClassName( contentPosition ) {\n\t/*\n\t * Only render a className if the contentPosition is not center (the default).\n\t */\n\tif ( isContentPositionCenter( contentPosition ) ) return '';\n\n\treturn POSITION_CLASSNAMES[ contentPosition ];\n}\n\n/**\n * Performs a Porter Duff composite source over operation on two rgba colors.\n *\n * @see https://www.w3.org/TR/compositing-1/#porterduffcompositingoperators_srcover\n *\n * @param {import('colord').RgbaColor} source Source color.\n * @param {import('colord').RgbaColor} dest   Destination color.\n * @return {import('colord').RgbaColor} Composite color.\n */\nfunction compositeSourceOver( source, dest ) {\n\treturn {\n\t\tr: source.r * source.a + dest.r * dest.a * ( 1 - source.a ),\n\t\tg: source.g * source.a + dest.g * dest.a * ( 1 - source.a ),\n\t\tb: source.b * source.a + dest.b * dest.a * ( 1 - source.a ),\n\t\ta: source.a + dest.a * ( 1 - source.a ),\n\t};\n}\n\nfunction retrieveFastAverageColor() {\n\tif ( ! retrieveFastAverageColor.fastAverageColor ) {\n\t\tretrieveFastAverageColor.fastAverageColor = new FastAverageColor();\n\t}\n\treturn retrieveFastAverageColor.fastAverageColor;\n}\n\n/**\n * This method evaluates if the cover block's background is dark or not and this boolean\n * can then be applied to the relevant attribute to help ensure that text is visible by default.\n * This needs to be recalculated in all of the following Cover block scenarios:\n * - When an overlay image is added, changed or removed\n * - When the featured image is selected as the overlay image, or removed from the overlay\n * - When the overlay color is changed\n * - When the overlay color is removed\n * - When the dimRatio is changed\n *\n * See the comments below for more details about which aspects take priority when\n * calculating the relative darkness of the Cover.\n *\n * @param {string} url\n * @param {number} dimRatio\n * @param {string} overlayColor\n * @return {Promise<boolean>} True if cover should be considered to be dark.\n */\nexport async function getCoverIsDark( url, dimRatio = 50, overlayColor ) {\n\tconst overlay = colord( overlayColor )\n\t\t.alpha( dimRatio / 100 )\n\t\t.toRgb();\n\n\tif ( url ) {\n\t\ttry {\n\t\t\tconst imgCrossOrigin = applyFilters(\n\t\t\t\t'media.crossOrigin',\n\t\t\t\tundefined,\n\t\t\t\turl\n\t\t\t);\n\t\t\tconst {\n\t\t\t\tvalue: [ r, g, b, a ],\n\t\t\t} = await retrieveFastAverageColor().getColorAsync( url, {\n\t\t\t\t// Previously the default color was white, but that changed\n\t\t\t\t// in v6.0.0 so it has to be manually set now.\n\t\t\t\tdefaultColor: [ 255, 255, 255, 255 ],\n\t\t\t\t// Errors that come up don't reject the promise, so error\n\t\t\t\t// logging has to be silenced with this option.\n\t\t\t\tsilent: process.env.NODE_ENV === 'production',\n\t\t\t\tcrossOrigin: imgCrossOrigin,\n\t\t\t} );\n\t\t\t// FAC uses 0-255 for alpha, but colord expects 0-1.\n\t\t\tconst media = { r, g, b, a: a / 255 };\n\t\t\tconst composite = compositeSourceOver( overlay, media );\n\t\t\treturn colord( composite ).isDark();\n\t\t} catch ( error ) {\n\t\t\t// If there's an error, just assume the image is dark.\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// Assume a white background because it isn't easy to get the actual\n\t// parent background color.\n\tconst background = { r: 255, g: 255, b: 255, a: 1 };\n\tconst composite = compositeSourceOver( overlay, background );\n\treturn colord( composite ).isDark();\n}\n"],"mappings":"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"}