{"version":3,"names":["Flex","FlexItem","PanelBody","ToggleControl","SelectControl","RangeControl","__experimentalUnitControl","UnitControl","__experimentalUseCustomUnits","useCustomUnits","__experimentalParseQuantityAndUnitFromRawValue","parseQuantityAndUnitFromRawValue","Disabled","withSelect","__","InspectorControls","useBlockProps","useSetting","ServerSideRender","store","coreStore","MIN_TAGS","MAX_TAGS","MIN_FONT_SIZE","MAX_FONT_SIZE","TagCloudEdit","attributes","setAttributes","taxonomies","taxonomy","showTagCounts","numberOfTags","smallestFontSize","largestFontSize","units","availableUnits","getTaxonomyOptions","selectOption","label","value","disabled","taxonomyOptions","filter","tax","show_cloud","map","item","slug","name","onFontSizeChange","fontSizeLabel","newValue","quantity","newUnit","Number","isFinite","updateObj","Object","entries","forEach","attribute","currentValue","currentQuantity","currentUnit","inspectorControls","createElement","title","__nextHasNoMarginBottom","options","onChange","selectedTaxonomy","checked","__next40pxDefaultSize","min","max","required","isBlock","Fragment","skipBlockSupportAttributes","block","select","getTaxonomies","per_page"],"sources":["@wordpress/block-library/src/tag-cloud/edit.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tFlex,\n\tFlexItem,\n\tPanelBody,\n\tToggleControl,\n\tSelectControl,\n\tRangeControl,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalUseCustomUnits as useCustomUnits,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n\tDisabled,\n} from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tInspectorControls,\n\tuseBlockProps,\n\tuseSetting,\n} from '@wordpress/block-editor';\nimport ServerSideRender from '@wordpress/server-side-render';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Minimum number of tags a user can show using this block.\n *\n * @type {number}\n */\nconst MIN_TAGS = 1;\n\n/**\n * Maximum number of tags a user can show using this block.\n *\n * @type {number}\n */\nconst MAX_TAGS = 100;\n\nconst MIN_FONT_SIZE = 0.1;\nconst MAX_FONT_SIZE = 100;\n\nfunction TagCloudEdit( { attributes, setAttributes, taxonomies } ) {\n\tconst {\n\t\ttaxonomy,\n\t\tshowTagCounts,\n\t\tnumberOfTags,\n\t\tsmallestFontSize,\n\t\tlargestFontSize,\n\t} = attributes;\n\n\tconst units = useCustomUnits( {\n\t\tavailableUnits: useSetting( 'spacing.units' ) || [\n\t\t\t'%',\n\t\t\t'px',\n\t\t\t'em',\n\t\t\t'rem',\n\t\t],\n\t} );\n\n\tconst getTaxonomyOptions = () => {\n\t\tconst selectOption = {\n\t\t\tlabel: __( '- Select -' ),\n\t\t\tvalue: '',\n\t\t\tdisabled: true,\n\t\t};\n\t\tconst taxonomyOptions = ( taxonomies ?? [] )\n\t\t\t.filter( ( tax ) => !! tax.show_cloud )\n\t\t\t.map( ( item ) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: item.slug,\n\t\t\t\t\tlabel: item.name,\n\t\t\t\t};\n\t\t\t} );\n\n\t\treturn [ selectOption, ...taxonomyOptions ];\n\t};\n\n\tconst onFontSizeChange = ( fontSizeLabel, newValue ) => {\n\t\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\t\tconst [ quantity, newUnit ] =\n\t\t\tparseQuantityAndUnitFromRawValue( newValue );\n\t\tif ( ! Number.isFinite( quantity ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst updateObj = { [ fontSizeLabel ]: newValue };\n\t\t// We need to keep in sync the `unit` changes to both `smallestFontSize`\n\t\t// and `largestFontSize` attributes.\n\t\tObject.entries( {\n\t\t\tsmallestFontSize,\n\t\t\tlargestFontSize,\n\t\t} ).forEach( ( [ attribute, currentValue ] ) => {\n\t\t\tconst [ currentQuantity, currentUnit ] =\n\t\t\t\tparseQuantityAndUnitFromRawValue( currentValue );\n\t\t\t// Only add an update if the other font size attribute has a different unit.\n\t\t\tif ( attribute !== fontSizeLabel && currentUnit !== newUnit ) {\n\t\t\t\tupdateObj[ attribute ] = `${ currentQuantity }${ newUnit }`;\n\t\t\t}\n\t\t} );\n\t\tsetAttributes( updateObj );\n\t};\n\n\tconst inspectorControls = (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t<SelectControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Taxonomy' ) }\n\t\t\t\t\toptions={ getTaxonomyOptions() }\n\t\t\t\t\tvalue={ taxonomy }\n\t\t\t\t\tonChange={ ( selectedTaxonomy ) =>\n\t\t\t\t\t\tsetAttributes( { taxonomy: selectedTaxonomy } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Show post counts' ) }\n\t\t\t\t\tchecked={ showTagCounts }\n\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\tsetAttributes( { showTagCounts: ! showTagCounts } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\tlabel={ __( 'Number of tags' ) }\n\t\t\t\t\tvalue={ numberOfTags }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { numberOfTags: value } )\n\t\t\t\t\t}\n\t\t\t\t\tmin={ MIN_TAGS }\n\t\t\t\t\tmax={ MAX_TAGS }\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<Flex>\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\tlabel={ __( 'Smallest size' ) }\n\t\t\t\t\t\t\tvalue={ smallestFontSize }\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\tonFontSizeChange( 'smallestFontSize', value );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\t\tmin={ MIN_FONT_SIZE }\n\t\t\t\t\t\t\tmax={ MAX_FONT_SIZE }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\tlabel={ __( 'Largest size' ) }\n\t\t\t\t\t\t\tvalue={ largestFontSize }\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\tonFontSizeChange( 'largestFontSize', value );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\t\tmin={ MIN_FONT_SIZE }\n\t\t\t\t\t\t\tmax={ MAX_FONT_SIZE }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t</Flex>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ inspectorControls }\n\t\t\t<div { ...useBlockProps() }>\n\t\t\t\t<Disabled>\n\t\t\t\t\t<ServerSideRender\n\t\t\t\t\t\tskipBlockSupportAttributes\n\t\t\t\t\t\tblock=\"core/tag-cloud\"\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t/>\n\t\t\t\t</Disabled>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default withSelect( ( select ) => {\n\treturn {\n\t\ttaxonomies: select( coreStore ).getTaxonomies( { per_page: -1 } ),\n\t};\n} )( TagCloudEdit );\n"],"mappings":"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"}