{"version":3,"names":["classnames","getColorClassName","getColorObjectByAttributeValues","RichText","store","blockEditorStore","useBlockProps","select","create","replace","toHTMLString","__UNSTABLE_LINE_SEPARATOR","SOLID_COLOR_CLASS","blockAttributes","value","type","source","selector","multiline","citation","default","mainColor","customMainColor","textColor","customTextColor","parseBorderColor","styleString","matches","match","multilineToInline","html","multilineTag","RegExp","v5","attributes","__experimentalRole","textAlign","save","shouldShowCitation","isEmpty","createElement","className","Content","tagName","migrate","v4","isSolidColorStyle","includes","figureClasses","figureStyles","backgroundClass","backgroundColor","undefined","borderColor","blockquoteTextColorClass","blockquoteClasses","blockquoteStyles","color","style","border","background","text","v3","figureStyle","attribute","v2","figureClass","_select$getSettings$c","colors","getSettings","colorObject","blockquoteStyle","v1","v0","align"],"sources":["@wordpress/block-library/src/pullquote/deprecated.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetColorClassName,\n\tgetColorObjectByAttributeValues,\n\tRichText,\n\tstore as blockEditorStore,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { select } from '@wordpress/data';\nimport {\n\tcreate,\n\treplace,\n\ttoHTMLString,\n\t__UNSTABLE_LINE_SEPARATOR,\n} from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport { SOLID_COLOR_CLASS } from './shared';\n\nconst blockAttributes = {\n\tvalue: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'blockquote',\n\t\tmultiline: 'p',\n\t},\n\tcitation: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'cite',\n\t\tdefault: '',\n\t},\n\tmainColor: {\n\t\ttype: 'string',\n\t},\n\tcustomMainColor: {\n\t\ttype: 'string',\n\t},\n\ttextColor: {\n\t\ttype: 'string',\n\t},\n\tcustomTextColor: {\n\t\ttype: 'string',\n\t},\n};\n\nfunction parseBorderColor( styleString ) {\n\tif ( ! styleString ) {\n\t\treturn;\n\t}\n\tconst matches = styleString.match( /border-color:([^;]+)[;]?/ );\n\tif ( matches && matches[ 1 ] ) {\n\t\treturn matches[ 1 ];\n\t}\n}\n\nfunction multilineToInline( value ) {\n\treturn toHTMLString( {\n\t\tvalue: replace(\n\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\tnew RegExp( __UNSTABLE_LINE_SEPARATOR, 'g' ),\n\t\t\t'\\n'\n\t\t),\n\t} );\n}\n\nconst v5 = {\n\tattributes: {\n\t\tvalue: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'blockquote',\n\t\t\tmultiline: 'p',\n\t\t\t__experimentalRole: 'content',\n\t\t},\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'cite',\n\t\t\tdefault: '',\n\t\t\t__experimentalRole: 'content',\n\t\t},\n\t\ttextAlign: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tsave( { attributes } ) {\n\t\tconst { textAlign, citation, value } = attributes;\n\t\tconst shouldShowCitation = ! RichText.isEmpty( citation );\n\n\t\treturn (\n\t\t\t<figure\n\t\t\t\t{ ...useBlockProps.save( {\n\t\t\t\t\tclassName: classnames( {\n\t\t\t\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t\t\t} ),\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ shouldShowCitation && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( { value, ...attributes } ) {\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\n// TODO: this is ripe for a bit of a clean up according to the example in https://developer.wordpress.org/block-editor/reference-guides/block-api/block-deprecation/#example\n\nconst v4 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t},\n\tsave( { attributes } ) {\n\t\tconst {\n\t\t\tmainColor,\n\t\t\tcustomMainColor,\n\t\t\tcustomTextColor,\n\t\t\ttextColor,\n\t\t\tvalue,\n\t\t\tcitation,\n\t\t\tclassName,\n\t\t} = attributes;\n\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\n\t\tlet figureClasses, figureStyles;\n\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tconst backgroundClass = getColorClassName(\n\t\t\t\t'background-color',\n\t\t\t\tmainColor\n\t\t\t);\n\n\t\t\tfigureClasses = classnames( {\n\t\t\t\t'has-background': backgroundClass || customMainColor,\n\t\t\t\t[ backgroundClass ]: backgroundClass,\n\t\t\t} );\n\n\t\t\tfigureStyles = {\n\t\t\t\tbackgroundColor: backgroundClass ? undefined : customMainColor,\n\t\t\t};\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName(\n\t\t\t'color',\n\t\t\ttextColor\n\t\t);\n\t\tconst blockquoteClasses = classnames( {\n\t\t\t'has-text-color': textColor || customTextColor,\n\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t} );\n\n\t\tconst blockquoteStyles = blockquoteTextColorClass\n\t\t\t? undefined\n\t\t\t: { color: customTextColor };\n\n\t\treturn (\n\t\t\t<figure\n\t\t\t\t{ ...useBlockProps.save( {\n\t\t\t\t\tclassName: figureClasses,\n\t\t\t\t\tstyle: figureStyles,\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<blockquote\n\t\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\t\tstyle={ blockquoteStyles }\n\t\t\t\t>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( {\n\t\tvalue,\n\t\tclassName,\n\t\tmainColor,\n\t\tcustomMainColor,\n\t\tcustomTextColor,\n\t\t...attributes\n\t} ) {\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\t\tlet style;\n\n\t\tif ( customMainColor ) {\n\t\t\tif ( ! isSolidColorStyle ) {\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tborder: {\n\t\t\t\t\t\tcolor: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tbackground: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\n\t\tif ( customTextColor && style ) {\n\t\t\tstyle.color = {\n\t\t\t\t...style.color,\n\t\t\t\ttext: customTextColor,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\tclassName,\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\n\t\t\tstyle,\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v3 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t\t// figureStyle is an attribute that never existed.\n\t\t// We are using it as a way to access the styles previously applied to the figure.\n\t\tfigureStyle: {\n\t\t\tsource: 'attribute',\n\t\t\tselector: 'figure',\n\t\t\tattribute: 'style',\n\t\t},\n\t},\n\tsave( { attributes } ) {\n\t\tconst {\n\t\t\tmainColor,\n\t\t\tcustomMainColor,\n\t\t\ttextColor,\n\t\t\tcustomTextColor,\n\t\t\tvalue,\n\t\t\tcitation,\n\t\t\tclassName,\n\t\t\tfigureStyle,\n\t\t} = attributes;\n\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\n\t\tlet figureClasses, figureStyles;\n\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tconst backgroundClass = getColorClassName(\n\t\t\t\t'background-color',\n\t\t\t\tmainColor\n\t\t\t);\n\n\t\t\tfigureClasses = classnames( {\n\t\t\t\t'has-background': backgroundClass || customMainColor,\n\t\t\t\t[ backgroundClass ]: backgroundClass,\n\t\t\t} );\n\n\t\t\tfigureStyles = {\n\t\t\t\tbackgroundColor: backgroundClass ? undefined : customMainColor,\n\t\t\t};\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t\t// If normal style and a named color are being used, we need to retrieve the color value to set the style,\n\t\t\t// as there is no expectation that themes create classes that set border colors.\n\t\t} else if ( mainColor ) {\n\t\t\t// Previously here we queried the color settings to know the color value\n\t\t\t// of a named color. This made the save function impure and the block was refactored,\n\t\t\t// because meanwhile a change in the editor made it impossible to query color settings in the save function.\n\t\t\t// Here instead of querying the color settings to know the color value, we retrieve the value\n\t\t\t// directly from the style previously serialized.\n\t\t\tconst borderColor = parseBorderColor( figureStyle );\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName(\n\t\t\t'color',\n\t\t\ttextColor\n\t\t);\n\t\tconst blockquoteClasses =\n\t\t\t( textColor || customTextColor ) &&\n\t\t\tclassnames( 'has-text-color', {\n\t\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t\t} );\n\n\t\tconst blockquoteStyles = blockquoteTextColorClass\n\t\t\t? undefined\n\t\t\t: { color: customTextColor };\n\n\t\treturn (\n\t\t\t<figure className={ figureClasses } style={ figureStyles }>\n\t\t\t\t<blockquote\n\t\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\t\tstyle={ blockquoteStyles }\n\t\t\t\t>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( {\n\t\tvalue,\n\t\tclassName,\n\t\tfigureStyle,\n\t\tmainColor,\n\t\tcustomMainColor,\n\t\tcustomTextColor,\n\t\t...attributes\n\t} ) {\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\t\tlet style;\n\n\t\tif ( customMainColor ) {\n\t\t\tif ( ! isSolidColorStyle ) {\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tborder: {\n\t\t\t\t\t\tcolor: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tbackground: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\n\t\tif ( customTextColor && style ) {\n\t\t\tstyle.color = {\n\t\t\t\t...style.color,\n\t\t\t\ttext: customTextColor,\n\t\t\t};\n\t\t}\n\t\t// If is the default style, and a main color is set,\n\t\t// migrate the main color value into a custom border color.\n\t\t// The custom border color value is retrieved by parsing the figure styles.\n\t\tif ( ! isSolidColorStyle && mainColor && figureStyle ) {\n\t\t\tconst borderColor = parseBorderColor( figureStyle );\n\t\t\tif ( borderColor ) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: multilineToInline( value ),\n\t\t\t\t\t...attributes,\n\t\t\t\t\tclassName,\n\t\t\t\t\t// Block supports: Set style.border.color if a deprecated block has `mainColor`, inline border CSS and is not a solid color style.\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\tcolor: borderColor,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\tclassName,\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\n\t\t\tstyle,\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v2 = {\n\tattributes: blockAttributes,\n\tsave( { attributes } ) {\n\t\tconst {\n\t\t\tmainColor,\n\t\t\tcustomMainColor,\n\t\t\ttextColor,\n\t\t\tcustomTextColor,\n\t\t\tvalue,\n\t\t\tcitation,\n\t\t\tclassName,\n\t\t} = attributes;\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\n\t\tlet figureClass, figureStyles;\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tfigureClass = getColorClassName( 'background-color', mainColor );\n\t\t\tif ( ! figureClass ) {\n\t\t\t\tfigureStyles = {\n\t\t\t\t\tbackgroundColor: customMainColor,\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t\t// Is normal style and a named color is being used, we need to retrieve the color value to set the style,\n\t\t\t// as there is no expectation that themes create classes that set border colors.\n\t\t} else if ( mainColor ) {\n\t\t\tconst colors =\n\t\t\t\tselect( blockEditorStore ).getSettings().colors ?? [];\n\t\t\tconst colorObject = getColorObjectByAttributeValues(\n\t\t\t\tcolors,\n\t\t\t\tmainColor\n\t\t\t);\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: colorObject.color,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName(\n\t\t\t'color',\n\t\t\ttextColor\n\t\t);\n\t\tconst blockquoteClasses =\n\t\t\ttextColor || customTextColor\n\t\t\t\t? classnames( 'has-text-color', {\n\t\t\t\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t\t\t  } )\n\t\t\t\t: undefined;\n\t\tconst blockquoteStyle = blockquoteTextColorClass\n\t\t\t? undefined\n\t\t\t: { color: customTextColor };\n\t\treturn (\n\t\t\t<figure className={ figureClass } style={ figureStyles }>\n\t\t\t\t<blockquote\n\t\t\t\t\tclassName={ blockquoteClasses }\n\t\t\t\t\tstyle={ blockquoteStyle }\n\t\t\t\t>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t\t) }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\tmigrate( {\n\t\tvalue,\n\t\tclassName,\n\t\tmainColor,\n\t\tcustomMainColor,\n\t\tcustomTextColor,\n\t\t...attributes\n\t} ) {\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\n\t\tlet style = {};\n\n\t\tif ( customMainColor ) {\n\t\t\tif ( ! isSolidColorStyle ) {\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tborder: {\n\t\t\t\t\t\tcolor: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\n\t\t\t\tstyle = {\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tbackground: customMainColor,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\n\t\tif ( customTextColor && style ) {\n\t\t\tstyle.color = {\n\t\t\t\t...style.color,\n\t\t\t\ttext: customTextColor,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\tclassName,\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\n\t\t\tstyle,\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v1 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t},\n\tsave( { attributes } ) {\n\t\tconst { value, citation } = attributes;\n\t\treturn (\n\t\t\t<blockquote>\n\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n\tmigrate( { value, ...attributes } ) {\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\nconst v0 = {\n\tattributes: {\n\t\t...blockAttributes,\n\t\tcitation: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'footer',\n\t\t},\n\t\talign: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'none',\n\t\t},\n\t},\n\n\tsave( { attributes } ) {\n\t\tconst { value, citation, align } = attributes;\n\n\t\treturn (\n\t\t\t<blockquote className={ `align${ align }` }>\n\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\n\t\t\t\t\t<RichText.Content tagName=\"footer\" value={ citation } />\n\t\t\t\t) }\n\t\t\t</blockquote>\n\t\t);\n\t},\n\tmigrate( { value, ...attributes } ) {\n\t\treturn {\n\t\t\tvalue: multilineToInline( value ),\n\t\t\t...attributes,\n\t\t};\n\t},\n};\n\n/**\n * New deprecations need to be placed first\n * for them to have higher priority.\n *\n * Old deprecations may need to be updated as well.\n *\n * See block-deprecation.md\n */\nexport default [ v5, v4, v3, v2, v1, v0 ];\n"],"mappings":"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"}