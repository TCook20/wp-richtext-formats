{"version":3,"names":["store","coreStore","useResourcePermissions","useEntityRecords","useSelect","PRELOADED_NAVIGATION_MENUS_QUERY","useNavigationMenu","ref","permissions","navigationMenu","isNavigationMenuResolved","isNavigationMenuMissing","select","selectExistingMenu","canCreate","canUpdate","canDelete","isResolving","hasResolved","records","navigationMenus","isResolvingNavigationMenus","hasResolvedNavigationMenus","canSwitchNavigationMenu","length","canUserCreateNavigationMenu","isResolvingCanUserCreateNavigationMenu","hasResolvedCanUserCreateNavigationMenu","canUserUpdateNavigationMenu","hasResolvedCanUserUpdateNavigationMenu","undefined","canUserDeleteNavigationMenu","hasResolvedCanUserDeleteNavigationMenu","getEntityRecord","getEditedEntityRecord","hasFinishedResolution","args","editedNavigationMenu","hasResolvedNavigationMenu","isNavigationMenuPublishedOrDraft","status"],"sources":["@wordpress/block-library/src/navigation/use-navigation-menu.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tstore as coreStore,\n\tuseResourcePermissions,\n\tuseEntityRecords,\n} from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { PRELOADED_NAVIGATION_MENUS_QUERY } from './constants';\n\nexport default function useNavigationMenu( ref ) {\n\tconst permissions = useResourcePermissions( 'navigation', ref );\n\n\tconst {\n\t\tnavigationMenu,\n\t\tisNavigationMenuResolved,\n\t\tisNavigationMenuMissing,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\treturn selectExistingMenu( select, ref );\n\t\t},\n\t\t[ ref ]\n\t);\n\n\tconst { canCreate, canUpdate, canDelete, isResolving, hasResolved } =\n\t\tpermissions;\n\n\tconst {\n\t\trecords: navigationMenus,\n\t\tisResolving: isResolvingNavigationMenus,\n\t\thasResolved: hasResolvedNavigationMenus,\n\t} = useEntityRecords(\n\t\t'postType',\n\t\t`wp_navigation`,\n\t\tPRELOADED_NAVIGATION_MENUS_QUERY\n\t);\n\n\tconst canSwitchNavigationMenu = ref\n\t\t? navigationMenus?.length > 1\n\t\t: navigationMenus?.length > 0;\n\n\treturn {\n\t\tnavigationMenu,\n\t\tisNavigationMenuResolved,\n\t\tisNavigationMenuMissing,\n\t\tnavigationMenus,\n\t\tisResolvingNavigationMenus,\n\t\thasResolvedNavigationMenus,\n\t\tcanSwitchNavigationMenu,\n\t\tcanUserCreateNavigationMenu: canCreate,\n\t\tisResolvingCanUserCreateNavigationMenu: isResolving,\n\t\thasResolvedCanUserCreateNavigationMenu: hasResolved,\n\t\tcanUserUpdateNavigationMenu: canUpdate,\n\t\thasResolvedCanUserUpdateNavigationMenu: ref ? hasResolved : undefined,\n\t\tcanUserDeleteNavigationMenu: canDelete,\n\t\thasResolvedCanUserDeleteNavigationMenu: ref ? hasResolved : undefined,\n\t};\n}\n\nfunction selectExistingMenu( select, ref ) {\n\tif ( ! ref ) {\n\t\treturn {\n\t\t\tisNavigationMenuResolved: false,\n\t\t\tisNavigationMenuMissing: true,\n\t\t};\n\t}\n\n\tconst { getEntityRecord, getEditedEntityRecord, hasFinishedResolution } =\n\t\tselect( coreStore );\n\n\tconst args = [ 'postType', 'wp_navigation', ref ];\n\tconst navigationMenu = getEntityRecord( ...args );\n\tconst editedNavigationMenu = getEditedEntityRecord( ...args );\n\tconst hasResolvedNavigationMenu = hasFinishedResolution(\n\t\t'getEditedEntityRecord',\n\t\targs\n\t);\n\n\t// Only published Navigation posts are considered valid.\n\t// Draft Navigation posts are valid only on the editor,\n\t// requiring a post update to publish to show in frontend.\n\t// To achieve that, index.php must reflect this validation only for published.\n\tconst isNavigationMenuPublishedOrDraft =\n\t\teditedNavigationMenu.status === 'publish' ||\n\t\teditedNavigationMenu.status === 'draft';\n\n\treturn {\n\t\tisNavigationMenuResolved: hasResolvedNavigationMenu,\n\t\tisNavigationMenuMissing:\n\t\t\thasResolvedNavigationMenu &&\n\t\t\t( ! navigationMenu || ! isNavigationMenuPublishedOrDraft ),\n\n\t\t// getEditedEntityRecord will return the post regardless of status.\n\t\t// Therefore if the found post is not published then we should ignore it.\n\t\tnavigationMenu: isNavigationMenuPublishedOrDraft\n\t\t\t? editedNavigationMenu\n\t\t\t: null,\n\t};\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,KAAK,IAAIC,SAAS,EAClBC,sBAAsB,EACtBC,gBAAgB,QACV,sBAAsB;AAC7B,SAASC,SAAS,QAAQ,iBAAiB;;AAE3C;AACA;AACA;AACA,SAASC,gCAAgC,QAAQ,aAAa;AAE9D,eAAe,SAASC,iBAAiBA,CAAEC,GAAG,EAAG;EAChD,MAAMC,WAAW,GAAGN,sBAAsB,CAAE,YAAY,EAAEK,GAAI,CAAC;EAE/D,MAAM;IACLE,cAAc;IACdC,wBAAwB;IACxBC;EACD,CAAC,GAAGP,SAAS,CACVQ,MAAM,IAAM;IACb,OAAOC,kBAAkB,CAAED,MAAM,EAAEL,GAAI,CAAC;EACzC,CAAC,EACD,CAAEA,GAAG,CACN,CAAC;EAED,MAAM;IAAEO,SAAS;IAAEC,SAAS;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAClEV,WAAW;EAEZ,MAAM;IACLW,OAAO,EAAEC,eAAe;IACxBH,WAAW,EAAEI,0BAA0B;IACvCH,WAAW,EAAEI;EACd,CAAC,GAAGnB,gBAAgB,CACnB,UAAU,EACT,eAAc,EACfE,gCACD,CAAC;EAED,MAAMkB,uBAAuB,GAAGhB,GAAG,GAChCa,eAAe,EAAEI,MAAM,GAAG,CAAC,GAC3BJ,eAAe,EAAEI,MAAM,GAAG,CAAC;EAE9B,OAAO;IACNf,cAAc;IACdC,wBAAwB;IACxBC,uBAAuB;IACvBS,eAAe;IACfC,0BAA0B;IAC1BC,0BAA0B;IAC1BC,uBAAuB;IACvBE,2BAA2B,EAAEX,SAAS;IACtCY,sCAAsC,EAAET,WAAW;IACnDU,sCAAsC,EAAET,WAAW;IACnDU,2BAA2B,EAAEb,SAAS;IACtCc,sCAAsC,EAAEtB,GAAG,GAAGW,WAAW,GAAGY,SAAS;IACrEC,2BAA2B,EAAEf,SAAS;IACtCgB,sCAAsC,EAAEzB,GAAG,GAAGW,WAAW,GAAGY;EAC7D,CAAC;AACF;AAEA,SAASjB,kBAAkBA,CAAED,MAAM,EAAEL,GAAG,EAAG;EAC1C,IAAK,CAAEA,GAAG,EAAG;IACZ,OAAO;MACNG,wBAAwB,EAAE,KAAK;MAC/BC,uBAAuB,EAAE;IAC1B,CAAC;EACF;EAEA,MAAM;IAAEsB,eAAe;IAAEC,qBAAqB;IAAEC;EAAsB,CAAC,GACtEvB,MAAM,CAAEX,SAAU,CAAC;EAEpB,MAAMmC,IAAI,GAAG,CAAE,UAAU,EAAE,eAAe,EAAE7B,GAAG,CAAE;EACjD,MAAME,cAAc,GAAGwB,eAAe,CAAE,GAAGG,IAAK,CAAC;EACjD,MAAMC,oBAAoB,GAAGH,qBAAqB,CAAE,GAAGE,IAAK,CAAC;EAC7D,MAAME,yBAAyB,GAAGH,qBAAqB,CACtD,uBAAuB,EACvBC,IACD,CAAC;;EAED;EACA;EACA;EACA;EACA,MAAMG,gCAAgC,GACrCF,oBAAoB,CAACG,MAAM,KAAK,SAAS,IACzCH,oBAAoB,CAACG,MAAM,KAAK,OAAO;EAExC,OAAO;IACN9B,wBAAwB,EAAE4B,yBAAyB;IACnD3B,uBAAuB,EACtB2B,yBAAyB,KACvB,CAAE7B,cAAc,IAAI,CAAE8B,gCAAgC,CAAE;IAE3D;IACA;IACA9B,cAAc,EAAE8B,gCAAgC,GAC7CF,oBAAoB,GACpB;EACJ,CAAC;AACF"}