{"version":3,"names":["classnames","__","Notice","PanelBody","RangeControl","ToggleControl","InspectorControls","useInnerBlocksProps","BlockControls","BlockVerticalAlignmentToolbar","__experimentalBlockVariationPicker","useBlockProps","store","blockEditorStore","withDispatch","useDispatch","useSelect","createBlock","createBlocksFromInnerBlocksTemplate","blocksStore","hasExplicitPercentColumnWidths","getMappedColumnWidths","getRedistributedColumnWidths","toWidthPrecision","ALLOWED_BLOCKS","ColumnsEditContainer","attributes","setAttributes","updateAlignment","updateColumns","clientId","isStackedOnMobile","verticalAlignment","templateLock","count","canInsertColumnBlock","minCount","select","canInsertBlockType","canRemoveBlock","getBlocks","getBlockCount","innerBlocks","preventRemovalBlockIndexes","reduce","acc","block","index","push","Math","max","classes","blockProps","className","innerBlocksProps","allowedBlocks","orientation","renderAppender","createElement","Fragment","onChange","value","__nextHasNoMarginBottom","__next40pxDefaultSize","label","min","status","isDismissible","checked","ColumnsEditContainerWrapper","dispatch","ownProps","registry","updateBlockAttributes","getBlockOrder","innerBlockClientIds","forEach","innerBlockClientId","previousColumns","newColumns","replaceInnerBlocks","hasExplicitWidths","isAddingColumn","newColumnWidth","widths","Array","from","length","map","width","slice","Placeholder","name","blockType","defaultVariation","variations","getBlockVariations","getBlockType","getDefaultBlockVariation","icon","src","title","onSelect","nextVariation","allowSkip","ColumnsEdit","props","hasInnerBlocks","Component"],"sources":["@wordpress/block-library/src/columns/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tNotice,\n\tPanelBody,\n\tRangeControl,\n\tToggleControl,\n} from '@wordpress/components';\n\nimport {\n\tInspectorControls,\n\tuseInnerBlocksProps,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\t__experimentalBlockVariationPicker,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { withDispatch, useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tcreateBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\thasExplicitPercentColumnWidths,\n\tgetMappedColumnWidths,\n\tgetRedistributedColumnWidths,\n\ttoWidthPrecision,\n} from './utils';\n\n/**\n * Allowed blocks constant is passed to InnerBlocks precisely as specified here.\n * The contents of the array should never change.\n * The array should contain the name of each block that is allowed.\n * In columns block, the only block we allow is 'core/column'.\n *\n * @constant\n * @type {string[]}\n */\nconst ALLOWED_BLOCKS = [ 'core/column' ];\n\nfunction ColumnsEditContainer( {\n\tattributes,\n\tsetAttributes,\n\tupdateAlignment,\n\tupdateColumns,\n\tclientId,\n} ) {\n\tconst { isStackedOnMobile, verticalAlignment, templateLock } = attributes;\n\n\tconst { count, canInsertColumnBlock, minCount } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tcanRemoveBlock,\n\t\t\t\tgetBlocks,\n\t\t\t\tgetBlockCount,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst innerBlocks = getBlocks( clientId );\n\n\t\t\t// Get the indexes of columns for which removal is prevented.\n\t\t\t// The highest index will be used to determine the minimum column count.\n\t\t\tconst preventRemovalBlockIndexes = innerBlocks.reduce(\n\t\t\t\t( acc, block, index ) => {\n\t\t\t\t\tif ( ! canRemoveBlock( block.clientId ) ) {\n\t\t\t\t\t\tacc.push( index );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tcount: getBlockCount( clientId ),\n\t\t\t\tcanInsertColumnBlock: canInsertBlockType(\n\t\t\t\t\t'core/column',\n\t\t\t\t\tclientId\n\t\t\t\t),\n\t\t\t\tminCount: Math.max( ...preventRemovalBlockIndexes ) + 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst classes = classnames( {\n\t\t[ `are-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t\t[ `is-not-stacked-on-mobile` ]: ! isStackedOnMobile,\n\t} );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classes,\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tallowedBlocks: ALLOWED_BLOCKS,\n\t\torientation: 'horizontal',\n\t\trenderAppender: false,\n\t\ttemplateLock,\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t{ canInsertColumnBlock && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\t\tvalue={ count }\n\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\tupdateColumns(\n\t\t\t\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\t\t\t\tMath.max( minCount, value )\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmin={ Math.max( 1, minCount ) }\n\t\t\t\t\t\t\t\tmax={ Math.max( 6, count ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ count > 6 && (\n\t\t\t\t\t\t\t\t<Notice\n\t\t\t\t\t\t\t\t\tstatus=\"warning\"\n\t\t\t\t\t\t\t\t\tisDismissible={ false }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'This column count exceeds the recommended amount and may cause visual breakage.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</Notice>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Stack on mobile' ) }\n\t\t\t\t\t\tchecked={ isStackedOnMobile }\n\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tisStackedOnMobile: ! isStackedOnMobile,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n\nconst ColumnsEditContainerWrapper = withDispatch(\n\t( dispatch, ownProps, registry ) => ( {\n\t\t/**\n\t\t * Update all child Column blocks with a new vertical alignment setting\n\t\t * based on whatever alignment is passed in. This allows change to parent\n\t\t * to overide anything set on a individual column basis.\n\t\t *\n\t\t * @param {string} verticalAlignment the vertical alignment setting\n\t\t */\n\t\tupdateAlignment( verticalAlignment ) {\n\t\t\tconst { clientId, setAttributes } = ownProps;\n\t\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\n\t\t\tconst { getBlockOrder } = registry.select( blockEditorStore );\n\n\t\t\t// Update own alignment.\n\t\t\tsetAttributes( { verticalAlignment } );\n\n\t\t\t// Update all child Column Blocks to match.\n\t\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\t\t\tinnerBlockClientIds.forEach( ( innerBlockClientId ) => {\n\t\t\t\tupdateBlockAttributes( innerBlockClientId, {\n\t\t\t\t\tverticalAlignment,\n\t\t\t\t} );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Updates the column count, including necessary revisions to child Column\n\t\t * blocks to grant required or redistribute available space.\n\t\t *\n\t\t * @param {number} previousColumns Previous column count.\n\t\t * @param {number} newColumns      New column count.\n\t\t */\n\t\tupdateColumns( previousColumns, newColumns ) {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { replaceInnerBlocks } = dispatch( blockEditorStore );\n\t\t\tconst { getBlocks } = registry.select( blockEditorStore );\n\n\t\t\tlet innerBlocks = getBlocks( clientId );\n\t\t\tconst hasExplicitWidths =\n\t\t\t\thasExplicitPercentColumnWidths( innerBlocks );\n\n\t\t\t// Redistribute available width for existing inner blocks.\n\t\t\tconst isAddingColumn = newColumns > previousColumns;\n\n\t\t\tif ( isAddingColumn && hasExplicitWidths ) {\n\t\t\t\t// If adding a new column, assign width to the new column equal to\n\t\t\t\t// as if it were `1 / columns` of the total available space.\n\t\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\n\n\t\t\t\t// Redistribute in consideration of pending block insertion as\n\t\t\t\t// constraining the available working width.\n\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t100 - newColumnWidth\n\t\t\t\t);\n\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\n\t\t\t\t\t...Array.from( {\n\t\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t\t} ).map( () => {\n\t\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\t\twidth: `${ newColumnWidth }%`,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else if ( isAddingColumn ) {\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...innerBlocks,\n\t\t\t\t\t...Array.from( {\n\t\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t\t} ).map( () => {\n\t\t\t\t\t\treturn createBlock( 'core/column' );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else if ( newColumns < previousColumns ) {\n\t\t\t\t// The removed column will be the last of the inner blocks.\n\t\t\t\tinnerBlocks = innerBlocks.slice(\n\t\t\t\t\t0,\n\t\t\t\t\t-( previousColumns - newColumns )\n\t\t\t\t);\n\t\t\t\tif ( hasExplicitWidths ) {\n\t\t\t\t\t// Redistribute as if block is already removed.\n\t\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t\t100\n\t\t\t\t\t);\n\n\t\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treplaceInnerBlocks( clientId, innerBlocks );\n\t\t},\n\t} )\n)( ColumnsEditContainer );\n\nfunction Placeholder( { clientId, name, setAttributes } ) {\n\tconst { blockType, defaultVariation, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockVariations,\n\t\t\t\tgetBlockType,\n\t\t\t\tgetDefaultBlockVariation,\n\t\t\t} = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\tdefaultVariation: getDefaultBlockVariation( name, 'block' ),\n\t\t\t\tvariations: getBlockVariations( name, 'block' ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\tconst { replaceInnerBlocks } = useDispatch( blockEditorStore );\n\tconst blockProps = useBlockProps();\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<__experimentalBlockVariationPicker\n\t\t\t\ticon={ blockType?.icon?.src }\n\t\t\t\tlabel={ blockType?.title }\n\t\t\t\tvariations={ variations }\n\t\t\t\tonSelect={ ( nextVariation = defaultVariation ) => {\n\t\t\t\t\tif ( nextVariation.attributes ) {\n\t\t\t\t\t\tsetAttributes( nextVariation.attributes );\n\t\t\t\t\t}\n\t\t\t\t\tif ( nextVariation.innerBlocks ) {\n\t\t\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate(\n\t\t\t\t\t\t\t\tnextVariation.innerBlocks\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\tallowSkip\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst ColumnsEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocks( clientId ).length > 0,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks\n\t\t? ColumnsEditContainerWrapper\n\t\t: Placeholder;\n\n\treturn <Component { ...props } />;\n};\n\nexport default ColumnsEdit;\n"],"mappings":"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"}