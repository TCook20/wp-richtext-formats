{"version":3,"names":["isBlobURL","ExternalLink","ResizableBox","Spinner","TextareaControl","TextControl","ToolbarButton","ToolbarGroup","__experimentalToolsPanel","ToolsPanel","__experimentalToolsPanelItem","ToolsPanelItem","__experimentalUseCustomUnits","useCustomUnits","useViewportMatch","usePrevious","useSelect","useDispatch","BlockControls","InspectorControls","RichText","__experimentalImageURLInputUI","ImageURLInputUI","MediaReplaceFlow","store","blockEditorStore","BlockAlignmentControl","__experimentalImageEditor","ImageEditor","__experimentalGetElementClassName","__experimentalUseBorderProps","useBorderProps","privateApis","blockEditorPrivateApis","useEffect","useMemo","useState","useRef","useCallback","__","_x","sprintf","isRTL","getFilename","createBlock","getDefaultBlockName","switchToBlockType","crop","overlayText","upload","caption","captionIcon","noticesStore","coreStore","unlock","createUpgradedEmbedBlock","useClientWidth","isExternalImage","MIN_SIZE","ALLOWED_MEDIA_TYPES","evalAspectRatio","DimensionsTool","ResolutionTool","scaleOptions","value","label","help","Image","temporaryURL","attributes","setAttributes","isSelected","insertBlocksAfter","onReplace","onSelectImage","onSelectURL","onUploadError","containerRef","context","clientId","blockEditingMode","url","alt","align","id","href","rel","linkClass","linkDestination","title","width","height","aspectRatio","scale","linkTarget","sizeSlug","numericWidth","parseInt","undefined","numericHeight","imageRef","prevCaption","showCaption","setShowCaption","allowResize","getBlock","image","multiImageSelection","select","getMedia","getMultiSelectedBlockClientIds","getBlockName","multiSelectedClientIds","length","every","_clientId","canInsertCover","imageEditing","imageSizes","maxWidth","mediaUpload","getBlockRootClientId","getSettings","canInsertBlockType","rootClientId","settings","replaceBlocks","toggleSelection","createErrorNotice","createSuccessNotice","isLargeViewport","isWideAligned","includes","loadedNaturalWidth","loadedNaturalHeight","setLoadedNaturalSize","isEditingImage","setIsEditingImage","externalBlob","setExternalBlob","clientWidth","hasNonContentControls","isResizable","imageSizeOptions","filter","slug","media_details","sizes","source_url","map","name","canUploadMedia","window","fetch","then","response","blob","catch","captionRef","node","focus","naturalWidth","naturalHeight","current","complete","onResizeStart","onResizeStop","onImageError","embedBlock","onSetHref","props","onSetTitle","updateAlt","newAlt","updateImage","newSizeSlug","newUrl","uploadExternal","filesList","onFileChange","img","type","allowedTypes","onError","message","updateAlignment","nextAlign","extraUpdatedAttributes","canEditImage","allowCrop","switchToCover","dimensionsUnitsOptions","availableUnits","controls","createElement","Fragment","group","onChange","onClick","icon","isPressed","onChangeUrl","mediaUrl","mediaLink","link","mediaId","mediaURL","accept","onSelect","resetAll","isShownByDefault","hasValue","onDeselect","__nextHasNoMarginBottom","newWidth","newHeight","newScale","newAspectRatio","defaultScale","defaultAspectRatio","unitsOptions","options","filename","defaultedAlt","borderProps","isRounded","className","src","onLoad","event","target","ref","style","objectFit","fallbackClientWidth","onSaveImage","imageAttributes","onFinishEditing","numericRatio","customRatio","naturalRatio","ratio","currentWidth","currentHeight","minWidth","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","display","size","showHandle","maxHeight","lockAspectRatio","enable","top","right","bottom","left","direction","elt","offsetWidth","String","resizeRatio","isEmpty","identifier","tagName","placeholder","inlineToolbar","__unstableOnSplitAtEnd"],"sources":["@wordpress/block-library/src/image/image.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { isBlobURL } from '@wordpress/blob';\nimport {\n\tExternalLink,\n\tResizableBox,\n\tSpinner,\n\tTextareaControl,\n\tTextControl,\n\tToolbarButton,\n\tToolbarGroup,\n\t__experimentalToolsPanel as ToolsPanel,\n\t__experimentalToolsPanelItem as ToolsPanelItem,\n\t__experimentalUseCustomUnits as useCustomUnits,\n} from '@wordpress/components';\nimport { useViewportMatch, usePrevious } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\t__experimentalImageURLInputUI as ImageURLInputUI,\n\tMediaReplaceFlow,\n\tstore as blockEditorStore,\n\tBlockAlignmentControl,\n\t__experimentalImageEditor as ImageEditor,\n\t__experimentalGetElementClassName,\n\t__experimentalUseBorderProps as useBorderProps,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport {\n\tuseEffect,\n\tuseMemo,\n\tuseState,\n\tuseRef,\n\tuseCallback,\n} from '@wordpress/element';\nimport { __, _x, sprintf, isRTL } from '@wordpress/i18n';\nimport { getFilename } from '@wordpress/url';\nimport {\n\tcreateBlock,\n\tgetDefaultBlockName,\n\tswitchToBlockType,\n} from '@wordpress/blocks';\nimport {\n\tcrop,\n\toverlayText,\n\tupload,\n\tcaption as captionIcon,\n} from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport useClientWidth from './use-client-width';\nimport { isExternalImage } from './edit';\n\n/**\n * Module constants\n */\nimport { MIN_SIZE, ALLOWED_MEDIA_TYPES } from './constants';\nimport { evalAspectRatio } from './utils';\n\nconst { DimensionsTool, ResolutionTool } = unlock( blockEditorPrivateApis );\n\nconst scaleOptions = [\n\t{\n\t\tvalue: 'cover',\n\t\tlabel: _x( 'Cover', 'Scale option for dimensions control' ),\n\t\thelp: __( 'Image covers the space evenly.' ),\n\t},\n\t{\n\t\tvalue: 'contain',\n\t\tlabel: _x( 'Contain', 'Scale option for dimensions control' ),\n\t\thelp: __( 'Image is contained without distortion.' ),\n\t},\n];\n\nexport default function Image( {\n\ttemporaryURL,\n\tattributes,\n\tsetAttributes,\n\tisSelected,\n\tinsertBlocksAfter,\n\tonReplace,\n\tonSelectImage,\n\tonSelectURL,\n\tonUploadError,\n\tcontainerRef,\n\tcontext,\n\tclientId,\n\tblockEditingMode,\n} ) {\n\tconst {\n\t\turl = '',\n\t\talt,\n\t\tcaption,\n\t\talign,\n\t\tid,\n\t\thref,\n\t\trel,\n\t\tlinkClass,\n\t\tlinkDestination,\n\t\ttitle,\n\t\twidth,\n\t\theight,\n\t\taspectRatio,\n\t\tscale,\n\t\tlinkTarget,\n\t\tsizeSlug,\n\t} = attributes;\n\n\t// The only supported unit is px, so we can parseInt to strip the px here.\n\tconst numericWidth = width ? parseInt( width, 10 ) : undefined;\n\tconst numericHeight = height ? parseInt( height, 10 ) : undefined;\n\n\tconst imageRef = useRef();\n\tconst prevCaption = usePrevious( caption );\n\tconst [ showCaption, setShowCaption ] = useState( !! caption );\n\tconst { allowResize = true } = context;\n\tconst { getBlock } = useSelect( blockEditorStore );\n\n\tconst { image, multiImageSelection } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMedia } = select( coreStore );\n\t\t\tconst { getMultiSelectedBlockClientIds, getBlockName } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst multiSelectedClientIds = getMultiSelectedBlockClientIds();\n\t\t\treturn {\n\t\t\t\timage:\n\t\t\t\t\tid && isSelected\n\t\t\t\t\t\t? getMedia( id, { context: 'view' } )\n\t\t\t\t\t\t: null,\n\t\t\t\tmultiImageSelection:\n\t\t\t\t\tmultiSelectedClientIds.length &&\n\t\t\t\t\tmultiSelectedClientIds.every(\n\t\t\t\t\t\t( _clientId ) =>\n\t\t\t\t\t\t\tgetBlockName( _clientId ) === 'core/image'\n\t\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ id, isSelected ]\n\t);\n\tconst { canInsertCover, imageEditing, imageSizes, maxWidth, mediaUpload } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst {\n\t\t\t\t\tgetBlockRootClientId,\n\t\t\t\t\tgetSettings,\n\t\t\t\t\tcanInsertBlockType,\n\t\t\t\t} = select( blockEditorStore );\n\n\t\t\t\tconst rootClientId = getBlockRootClientId( clientId );\n\t\t\t\tconst settings = getSettings();\n\n\t\t\t\treturn {\n\t\t\t\t\timageEditing: settings.imageEditing,\n\t\t\t\t\timageSizes: settings.imageSizes,\n\t\t\t\t\tmaxWidth: settings.maxWidth,\n\t\t\t\t\tmediaUpload: settings.mediaUpload,\n\t\t\t\t\tcanInsertCover: canInsertBlockType(\n\t\t\t\t\t\t'core/cover',\n\t\t\t\t\t\trootClientId\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ clientId ]\n\t\t);\n\tconst { replaceBlocks, toggleSelection } = useDispatch( blockEditorStore );\n\tconst { createErrorNotice, createSuccessNotice } =\n\t\tuseDispatch( noticesStore );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideAligned = [ 'wide', 'full' ].includes( align );\n\tconst [\n\t\t{ loadedNaturalWidth, loadedNaturalHeight },\n\t\tsetLoadedNaturalSize,\n\t] = useState( {} );\n\tconst [ isEditingImage, setIsEditingImage ] = useState( false );\n\tconst [ externalBlob, setExternalBlob ] = useState();\n\tconst clientWidth = useClientWidth( containerRef, [ align ] );\n\tconst hasNonContentControls = blockEditingMode === 'default';\n\tconst isResizable =\n\t\tallowResize &&\n\t\thasNonContentControls &&\n\t\t! ( isWideAligned && isLargeViewport );\n\tconst imageSizeOptions = imageSizes\n\t\t.filter(\n\t\t\t( { slug } ) => image?.media_details?.sizes?.[ slug ]?.source_url\n\t\t)\n\t\t.map( ( { name, slug } ) => ( { value: slug, label: name } ) );\n\tconst canUploadMedia = !! mediaUpload;\n\n\t// If an image is externally hosted, try to fetch the image data. This may\n\t// fail if the image host doesn't allow CORS with the domain. If it works,\n\t// we can enable a button in the toolbar to upload the image.\n\tuseEffect( () => {\n\t\tif (\n\t\t\t! isExternalImage( id, url ) ||\n\t\t\t! isSelected ||\n\t\t\t! canUploadMedia\n\t\t) {\n\t\t\tsetExternalBlob();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( externalBlob ) return;\n\n\t\twindow\n\t\t\t// Avoid cache, which seems to help avoid CORS problems.\n\t\t\t.fetch( url.includes( '?' ) ? url : url + '?' )\n\t\t\t.then( ( response ) => response.blob() )\n\t\t\t.then( ( blob ) => setExternalBlob( blob ) )\n\t\t\t// Do nothing, cannot upload.\n\t\t\t.catch( () => {} );\n\t}, [ id, url, isSelected, externalBlob, canUploadMedia ] );\n\n\t// We need to show the caption when changes come from\n\t// history navigation(undo/redo).\n\tuseEffect( () => {\n\t\tif ( caption && ! prevCaption ) {\n\t\t\tsetShowCaption( true );\n\t\t}\n\t}, [ caption, prevCaption ] );\n\n\t// Focus the caption when we click to add one.\n\tconst captionRef = useCallback(\n\t\t( node ) => {\n\t\t\tif ( node && ! caption ) {\n\t\t\t\tnode.focus();\n\t\t\t}\n\t\t},\n\t\t[ caption ]\n\t);\n\n\t// Get naturalWidth and naturalHeight from image ref, and fall back to loaded natural\n\t// width and height. This resolves an issue in Safari where the loaded natural\n\t// width and height is otherwise lost when switching between alignments.\n\t// See: https://github.com/WordPress/gutenberg/pull/37210.\n\tconst { naturalWidth, naturalHeight } = useMemo( () => {\n\t\treturn {\n\t\t\tnaturalWidth:\n\t\t\t\timageRef.current?.naturalWidth ||\n\t\t\t\tloadedNaturalWidth ||\n\t\t\t\tundefined,\n\t\t\tnaturalHeight:\n\t\t\t\timageRef.current?.naturalHeight ||\n\t\t\t\tloadedNaturalHeight ||\n\t\t\t\tundefined,\n\t\t};\n\t}, [\n\t\tloadedNaturalWidth,\n\t\tloadedNaturalHeight,\n\t\timageRef.current?.complete,\n\t] );\n\n\tfunction onResizeStart() {\n\t\ttoggleSelection( false );\n\t}\n\n\tfunction onResizeStop() {\n\t\ttoggleSelection( true );\n\t}\n\n\tfunction onImageError() {\n\t\t// Check if there's an embed block that handles this URL, e.g., instagram URL.\n\t\t// See: https://github.com/WordPress/gutenberg/pull/11472\n\t\tconst embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\n\n\t\tif ( undefined !== embedBlock ) {\n\t\t\tonReplace( embedBlock );\n\t\t}\n\t}\n\n\tfunction onSetHref( props ) {\n\t\tsetAttributes( props );\n\t}\n\n\tfunction onSetTitle( value ) {\n\t\t// This is the HTML title attribute, separate from the media object\n\t\t// title.\n\t\tsetAttributes( { title: value } );\n\t}\n\n\tfunction updateAlt( newAlt ) {\n\t\tsetAttributes( { alt: newAlt } );\n\t}\n\n\tfunction updateImage( newSizeSlug ) {\n\t\tconst newUrl = image?.media_details?.sizes?.[ newSizeSlug ]?.source_url;\n\t\tif ( ! newUrl ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\turl: newUrl,\n\t\t\tsizeSlug: newSizeSlug,\n\t\t} );\n\t}\n\n\tfunction uploadExternal() {\n\t\tmediaUpload( {\n\t\t\tfilesList: [ externalBlob ],\n\t\t\tonFileChange( [ img ] ) {\n\t\t\t\tonSelectImage( img );\n\n\t\t\t\tif ( isBlobURL( img.url ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetExternalBlob();\n\t\t\t\tcreateSuccessNotice( __( 'Image uploaded.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t},\n\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\tonError( message ) {\n\t\t\t\tcreateErrorNotice( message, { type: 'snackbar' } );\n\t\t\t},\n\t\t} );\n\t}\n\n\tfunction updateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes = [ 'wide', 'full' ].includes( nextAlign )\n\t\t\t? {\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined,\n\t\t\t\t\taspectRatio: undefined,\n\t\t\t\t\tscale: undefined,\n\t\t\t  }\n\t\t\t: {};\n\t\tsetAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetIsEditingImage( false );\n\t\t\tif ( ! caption ) {\n\t\t\t\tsetShowCaption( false );\n\t\t\t}\n\t\t}\n\t}, [ isSelected, caption ] );\n\n\tconst canEditImage = id && naturalWidth && naturalHeight && imageEditing;\n\tconst allowCrop = ! multiImageSelection && canEditImage && ! isEditingImage;\n\n\tfunction switchToCover() {\n\t\treplaceBlocks(\n\t\t\tclientId,\n\t\t\tswitchToBlockType( getBlock( clientId ), 'core/cover' )\n\t\t);\n\t}\n\n\t// TODO: Can allow more units after figuring out how they should interact\n\t// with the ResizableBox and ImageEditor components. Calculations later on\n\t// for those components are currently assuming px units.\n\tconst dimensionsUnitsOptions = useCustomUnits( {\n\t\tavailableUnits: [ 'px' ],\n\t} );\n\n\tconst controls = (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t{ hasNonContentControls && (\n\t\t\t\t\t<BlockAlignmentControl\n\t\t\t\t\t\tvalue={ align }\n\t\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ hasNonContentControls && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tsetShowCaption( ! showCaption );\n\t\t\t\t\t\t\tif ( showCaption && caption ) {\n\t\t\t\t\t\t\t\tsetAttributes( { caption: undefined } );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ticon={ captionIcon }\n\t\t\t\t\t\tisPressed={ showCaption }\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\tshowCaption\n\t\t\t\t\t\t\t\t? __( 'Remove caption' )\n\t\t\t\t\t\t\t\t: __( 'Add caption' )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t\t<ImageURLInputUI\n\t\t\t\t\t\turl={ href || '' }\n\t\t\t\t\t\tonChangeUrl={ onSetHref }\n\t\t\t\t\t\tlinkDestination={ linkDestination }\n\t\t\t\t\t\tmediaUrl={ ( image && image.source_url ) || url }\n\t\t\t\t\t\tmediaLink={ image && image.link }\n\t\t\t\t\t\tlinkTarget={ linkTarget }\n\t\t\t\t\t\tlinkClass={ linkClass }\n\t\t\t\t\t\trel={ rel }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ allowCrop && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tonClick={ () => setIsEditingImage( true ) }\n\t\t\t\t\t\ticon={ crop }\n\t\t\t\t\t\tlabel={ __( 'Crop' ) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ ! multiImageSelection && canInsertCover && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ticon={ overlayText }\n\t\t\t\t\t\tlabel={ __( 'Add text over image' ) }\n\t\t\t\t\t\tonClick={ switchToCover }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t<BlockControls group=\"other\">\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaId={ id }\n\t\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tonSelect={ onSelectImage }\n\t\t\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\t\t\tonError={ onUploadError }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\t\t\t{ ! multiImageSelection && externalBlob && (\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tonClick={ uploadExternal }\n\t\t\t\t\t\t\ticon={ upload }\n\t\t\t\t\t\t\tlabel={ __( 'Upload external image' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\t\t\t<InspectorControls>\n\t\t\t\t<ToolsPanel\n\t\t\t\t\tlabel={ __( 'Settings' ) }\n\t\t\t\t\tresetAll={ () =>\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\twidth: undefined,\n\t\t\t\t\t\t\theight: undefined,\n\t\t\t\t\t\t\tscale: undefined,\n\t\t\t\t\t\t\taspectRatio: undefined,\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{ ! multiImageSelection && (\n\t\t\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t\t\tlabel={ __( 'Alternative text' ) }\n\t\t\t\t\t\t\tisShownByDefault={ true }\n\t\t\t\t\t\t\thasValue={ () => alt !== '' }\n\t\t\t\t\t\t\tonDeselect={ () =>\n\t\t\t\t\t\t\t\tsetAttributes( { alt: undefined } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Alternative text' ) }\n\t\t\t\t\t\t\t\tvalue={ alt }\n\t\t\t\t\t\t\t\tonChange={ updateAlt }\n\t\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the image.'\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t{ __( 'Leave empty if decorative.' ) }\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ToolsPanelItem>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isResizable && (\n\t\t\t\t\t\t<DimensionsTool\n\t\t\t\t\t\t\tvalue={ { width, height, scale, aspectRatio } }\n\t\t\t\t\t\t\tonChange={ ( {\n\t\t\t\t\t\t\t\twidth: newWidth,\n\t\t\t\t\t\t\t\theight: newHeight,\n\t\t\t\t\t\t\t\tscale: newScale,\n\t\t\t\t\t\t\t\taspectRatio: newAspectRatio,\n\t\t\t\t\t\t\t} ) => {\n\t\t\t\t\t\t\t\t// Rebuilding the object forces setting `undefined`\n\t\t\t\t\t\t\t\t// for values that are removed since setAttributes\n\t\t\t\t\t\t\t\t// doesn't do anything with keys that aren't set.\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t// CSS includes `height: auto`, but we need\n\t\t\t\t\t\t\t\t\t// `width: auto` to fix the aspect ratio when\n\t\t\t\t\t\t\t\t\t// only height is set due to the width and\n\t\t\t\t\t\t\t\t\t// height attributes set via the server.\n\t\t\t\t\t\t\t\t\twidth:\n\t\t\t\t\t\t\t\t\t\t! newWidth && newHeight\n\t\t\t\t\t\t\t\t\t\t\t? 'auto'\n\t\t\t\t\t\t\t\t\t\t\t: newWidth,\n\t\t\t\t\t\t\t\t\theight: newHeight,\n\t\t\t\t\t\t\t\t\tscale: newScale,\n\t\t\t\t\t\t\t\t\taspectRatio: newAspectRatio,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdefaultScale=\"cover\"\n\t\t\t\t\t\t\tdefaultAspectRatio=\"auto\"\n\t\t\t\t\t\t\tscaleOptions={ scaleOptions }\n\t\t\t\t\t\t\tunitsOptions={ dimensionsUnitsOptions }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<ResolutionTool\n\t\t\t\t\t\tvalue={ sizeSlug }\n\t\t\t\t\t\tonChange={ updateImage }\n\t\t\t\t\t\toptions={ imageSizeOptions }\n\t\t\t\t\t/>\n\t\t\t\t</ToolsPanel>\n\t\t\t</InspectorControls>\n\t\t\t<InspectorControls group=\"advanced\">\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Title attribute' ) }\n\t\t\t\t\tvalue={ title || '' }\n\t\t\t\t\tonChange={ onSetTitle }\n\t\t\t\t\thelp={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Describe the role of this image on the page.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'(Note: many devices and browsers do not display this text.)'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\t\t</>\n\t);\n\n\tconst filename = getFilename( url );\n\tlet defaultedAlt;\n\n\tif ( alt ) {\n\t\tdefaultedAlt = alt;\n\t} else if ( filename ) {\n\t\tdefaultedAlt = sprintf(\n\t\t\t/* translators: %s: file name */\n\t\t\t__( 'This image has an empty alt attribute; its file name is %s' ),\n\t\t\tfilename\n\t\t);\n\t} else {\n\t\tdefaultedAlt = __( 'This image has an empty alt attribute' );\n\t}\n\n\tconst borderProps = useBorderProps( attributes );\n\tconst isRounded = attributes.className?.includes( 'is-style-rounded' );\n\n\tlet img = (\n\t\t// Disable reason: Image itself is not meant to be interactive, but\n\t\t// should direct focus to block.\n\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t\t<>\n\t\t\t<img\n\t\t\t\tsrc={ temporaryURL || url }\n\t\t\t\talt={ defaultedAlt }\n\t\t\t\tonError={ () => onImageError() }\n\t\t\t\tonLoad={ ( event ) => {\n\t\t\t\t\tsetLoadedNaturalSize( {\n\t\t\t\t\t\tloadedNaturalWidth: event.target?.naturalWidth,\n\t\t\t\t\t\tloadedNaturalHeight: event.target?.naturalHeight,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tref={ imageRef }\n\t\t\t\tclassName={ borderProps.className }\n\t\t\t\tstyle={ {\n\t\t\t\t\twidth:\n\t\t\t\t\t\t( width && height ) || aspectRatio ? '100%' : undefined,\n\t\t\t\t\theight:\n\t\t\t\t\t\t( width && height ) || aspectRatio ? '100%' : undefined,\n\t\t\t\t\tobjectFit: scale,\n\t\t\t\t\t...borderProps.style,\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t{ temporaryURL && <Spinner /> }\n\t\t</>\n\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t);\n\n\t// clientWidth needs to be a number for the image Cropper to work, but sometimes it's 0\n\t// So we try using the imageRef width first and fallback to clientWidth.\n\tconst fallbackClientWidth = imageRef.current?.width || clientWidth;\n\n\tif ( canEditImage && isEditingImage ) {\n\t\timg = (\n\t\t\t<ImageEditor\n\t\t\t\tid={ id }\n\t\t\t\turl={ url }\n\t\t\t\twidth={ numericWidth }\n\t\t\t\theight={ numericHeight }\n\t\t\t\tclientWidth={ fallbackClientWidth }\n\t\t\t\tnaturalHeight={ naturalHeight }\n\t\t\t\tnaturalWidth={ naturalWidth }\n\t\t\t\tonSaveImage={ ( imageAttributes ) =>\n\t\t\t\t\tsetAttributes( imageAttributes )\n\t\t\t\t}\n\t\t\t\tonFinishEditing={ () => {\n\t\t\t\t\tsetIsEditingImage( false );\n\t\t\t\t} }\n\t\t\t\tborderProps={ isRounded ? undefined : borderProps }\n\t\t\t/>\n\t\t);\n\t} else if ( ! isResizable ) {\n\t\timg = <div style={ { width, height, aspectRatio } }>{ img }</div>;\n\t} else {\n\t\tconst numericRatio = aspectRatio && evalAspectRatio( aspectRatio );\n\t\tconst customRatio = numericWidth / numericHeight;\n\t\tconst naturalRatio = naturalWidth / naturalHeight;\n\t\tconst ratio = numericRatio || customRatio || naturalRatio || 1;\n\t\tconst currentWidth =\n\t\t\t! numericWidth && numericHeight\n\t\t\t\t? numericHeight * ratio\n\t\t\t\t: numericWidth;\n\t\tconst currentHeight =\n\t\t\t! numericHeight && numericWidth\n\t\t\t\t? numericWidth / ratio\n\t\t\t\t: numericHeight;\n\n\t\tconst minWidth =\n\t\t\tnaturalWidth < naturalHeight ? MIN_SIZE : MIN_SIZE * ratio;\n\t\tconst minHeight =\n\t\t\tnaturalHeight < naturalWidth ? MIN_SIZE : MIN_SIZE / ratio;\n\n\t\t// With the current implementation of ResizableBox, an image needs an\n\t\t// explicit pixel value for the max-width. In absence of being able to\n\t\t// set the content-width, this max-width is currently dictated by the\n\t\t// vanilla editor style. The following variable adds a buffer to this\n\t\t// vanilla style, so 3rd party themes have some wiggleroom. This does,\n\t\t// in most cases, allow you to scale the image beyond the width of the\n\t\t// main column, though not infinitely.\n\t\t// @todo It would be good to revisit this once a content-width variable\n\t\t// becomes available.\n\t\tconst maxWidthBuffer = maxWidth * 2.5;\n\n\t\tlet showRightHandle = false;\n\t\tlet showLeftHandle = false;\n\n\t\t/* eslint-disable no-lonely-if */\n\t\t// See https://github.com/WordPress/gutenberg/issues/7584.\n\t\tif ( align === 'center' ) {\n\t\t\t// When the image is centered, show both handles.\n\t\t\tshowRightHandle = true;\n\t\t\tshowLeftHandle = true;\n\t\t} else if ( isRTL() ) {\n\t\t\t// In RTL mode the image is on the right by default.\n\t\t\t// Show the right handle and hide the left handle only when it is\n\t\t\t// aligned left. Otherwise always show the left handle.\n\t\t\tif ( align === 'left' ) {\n\t\t\t\tshowRightHandle = true;\n\t\t\t} else {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// Show the left handle and hide the right handle only when the\n\t\t\t// image is aligned right. Otherwise always show the right handle.\n\t\t\tif ( align === 'right' ) {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t} else {\n\t\t\t\tshowRightHandle = true;\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-lonely-if */\n\n\t\timg = (\n\t\t\t<ResizableBox\n\t\t\t\tstyle={ {\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tobjectFit: scale,\n\t\t\t\t\taspectRatio:\n\t\t\t\t\t\t! width && ! height && aspectRatio\n\t\t\t\t\t\t\t? aspectRatio\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t} }\n\t\t\t\tsize={ {\n\t\t\t\t\twidth: currentWidth ?? 'auto',\n\t\t\t\t\theight: currentHeight ?? 'auto',\n\t\t\t\t} }\n\t\t\t\tshowHandle={ isSelected }\n\t\t\t\tminWidth={ minWidth }\n\t\t\t\tmaxWidth={ maxWidthBuffer }\n\t\t\t\tminHeight={ minHeight }\n\t\t\t\tmaxHeight={ maxWidthBuffer / ratio }\n\t\t\t\tlockAspectRatio={ ratio }\n\t\t\t\tenable={ {\n\t\t\t\t\ttop: false,\n\t\t\t\t\tright: showRightHandle,\n\t\t\t\t\tbottom: true,\n\t\t\t\t\tleft: showLeftHandle,\n\t\t\t\t} }\n\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\tonResizeStop={ ( event, direction, elt ) => {\n\t\t\t\t\tonResizeStop();\n\t\t\t\t\t// Since the aspect ratio is locked when resizing, we can\n\t\t\t\t\t// use the width of the resized element to calculate the\n\t\t\t\t\t// height in CSS to prevent stretching when the max-width\n\t\t\t\t\t// is reached.\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\twidth: `${ elt.offsetWidth }px`,\n\t\t\t\t\t\theight: 'auto',\n\t\t\t\t\t\taspectRatio:\n\t\t\t\t\t\t\tratio === naturalRatio\n\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t: String( ratio ),\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tresizeRatio={ align === 'center' ? 2 : 1 }\n\t\t\t>\n\t\t\t\t{ img }\n\t\t\t</ResizableBox>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ /* Hide controls during upload to avoid component remount,\n\t\t\t\twhich causes duplicated image upload. */ }\n\t\t\t{ ! temporaryURL && controls }\n\t\t\t{ img }\n\t\t\t{ showCaption &&\n\t\t\t\t( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tidentifier=\"caption\"\n\t\t\t\t\t\tclassName={ __experimentalGetElementClassName(\n\t\t\t\t\t\t\t'caption'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tref={ captionRef }\n\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\taria-label={ __( 'Image caption text' ) }\n\t\t\t\t\t\tplaceholder={ __( 'Add caption' ) }\n\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\t\tinsertBlocksAfter(\n\t\t\t\t\t\t\t\tcreateBlock( getDefaultBlockName() )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t</>\n\t);\n}\n"],"mappings":"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"}