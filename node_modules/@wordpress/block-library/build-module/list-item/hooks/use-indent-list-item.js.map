{"version":3,"names":["useCallback","useSelect","useDispatch","store","blockEditorStore","createBlock","cloneBlock","useIndentListItem","clientId","canIndent","select","getBlockIndex","replaceBlocks","selectionChange","multiSelect","getBlock","getPreviousBlockClientId","getSelectionStart","getSelectionEnd","hasMultiSelection","getMultiSelectedBlockClientIds","_hasMultiSelection","clientIds","clonedBlocks","map","_clientId","previousSiblingId","newListItem","innerBlocks","length","push","selectionStart","selectionEnd","attributeKey","offset"],"sources":["@wordpress/block-library/src/list-item/hooks/use-indent-list-item.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { createBlock, cloneBlock } from '@wordpress/blocks';\n\nexport default function useIndentListItem( clientId ) {\n\tconst canIndent = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlockIndex( clientId ) > 0,\n\t\t[ clientId ]\n\t);\n\tconst { replaceBlocks, selectionChange, multiSelect } =\n\t\tuseDispatch( blockEditorStore );\n\tconst {\n\t\tgetBlock,\n\t\tgetPreviousBlockClientId,\n\t\tgetSelectionStart,\n\t\tgetSelectionEnd,\n\t\thasMultiSelection,\n\t\tgetMultiSelectedBlockClientIds,\n\t} = useSelect( blockEditorStore );\n\treturn [\n\t\tcanIndent,\n\t\tuseCallback( () => {\n\t\t\tconst _hasMultiSelection = hasMultiSelection();\n\t\t\tconst clientIds = _hasMultiSelection\n\t\t\t\t? getMultiSelectedBlockClientIds()\n\t\t\t\t: [ clientId ];\n\t\t\tconst clonedBlocks = clientIds.map( ( _clientId ) =>\n\t\t\t\tcloneBlock( getBlock( _clientId ) )\n\t\t\t);\n\t\t\tconst previousSiblingId = getPreviousBlockClientId( clientId );\n\t\t\tconst newListItem = cloneBlock( getBlock( previousSiblingId ) );\n\t\t\t// If the sibling has no innerBlocks, create a new `list` block.\n\t\t\tif ( ! newListItem.innerBlocks?.length ) {\n\t\t\t\tnewListItem.innerBlocks = [ createBlock( 'core/list' ) ];\n\t\t\t}\n\t\t\t// A list item usually has one `list`, but it's possible to have\n\t\t\t// more. So we need to preserve the previous `list` blocks and\n\t\t\t// merge the new blocks to the last `list`.\n\t\t\tnewListItem.innerBlocks[\n\t\t\t\tnewListItem.innerBlocks.length - 1\n\t\t\t].innerBlocks.push( ...clonedBlocks );\n\n\t\t\t// We get the selection start/end here, because when\n\t\t\t// we replace blocks, the selection is updated too.\n\t\t\tconst selectionStart = getSelectionStart();\n\t\t\tconst selectionEnd = getSelectionEnd();\n\t\t\t// Replace the previous sibling of the block being indented and the indented blocks,\n\t\t\t// with a new block whose attributes are equal to the ones of the previous sibling and\n\t\t\t// whose descendants are the children of the previous sibling, followed by the indented blocks.\n\t\t\treplaceBlocks(\n\t\t\t\t[ previousSiblingId, ...clientIds ],\n\t\t\t\t[ newListItem ]\n\t\t\t);\n\t\t\tif ( ! _hasMultiSelection ) {\n\t\t\t\tselectionChange(\n\t\t\t\t\tclonedBlocks[ 0 ].clientId,\n\t\t\t\t\tselectionEnd.attributeKey,\n\t\t\t\t\tselectionEnd.clientId === selectionStart.clientId\n\t\t\t\t\t\t? selectionStart.offset\n\t\t\t\t\t\t: selectionEnd.offset,\n\t\t\t\t\tselectionEnd.offset\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmultiSelect(\n\t\t\t\t\tclonedBlocks[ 0 ].clientId,\n\t\t\t\t\tclonedBlocks[ clonedBlocks.length - 1 ].clientId\n\t\t\t\t);\n\t\t\t}\n\t\t}, [ clientId ] ),\n\t];\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,oBAAoB;AAChD,SAASC,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AACxD,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,yBAAyB;AACnE,SAASC,WAAW,EAAEC,UAAU,QAAQ,mBAAmB;AAE3D,eAAe,SAASC,iBAAiBA,CAAEC,QAAQ,EAAG;EACrD,MAAMC,SAAS,GAAGR,SAAS,CACxBS,MAAM,IAAMA,MAAM,CAAEN,gBAAiB,CAAC,CAACO,aAAa,CAAEH,QAAS,CAAC,GAAG,CAAC,EACtE,CAAEA,QAAQ,CACX,CAAC;EACD,MAAM;IAAEI,aAAa;IAAEC,eAAe;IAAEC;EAAY,CAAC,GACpDZ,WAAW,CAAEE,gBAAiB,CAAC;EAChC,MAAM;IACLW,QAAQ;IACRC,wBAAwB;IACxBC,iBAAiB;IACjBC,eAAe;IACfC,iBAAiB;IACjBC;EACD,CAAC,GAAGnB,SAAS,CAAEG,gBAAiB,CAAC;EACjC,OAAO,CACNK,SAAS,EACTT,WAAW,CAAE,MAAM;IAClB,MAAMqB,kBAAkB,GAAGF,iBAAiB,CAAC,CAAC;IAC9C,MAAMG,SAAS,GAAGD,kBAAkB,GACjCD,8BAA8B,CAAC,CAAC,GAChC,CAAEZ,QAAQ,CAAE;IACf,MAAMe,YAAY,GAAGD,SAAS,CAACE,GAAG,CAAIC,SAAS,IAC9CnB,UAAU,CAAES,QAAQ,CAAEU,SAAU,CAAE,CACnC,CAAC;IACD,MAAMC,iBAAiB,GAAGV,wBAAwB,CAAER,QAAS,CAAC;IAC9D,MAAMmB,WAAW,GAAGrB,UAAU,CAAES,QAAQ,CAAEW,iBAAkB,CAAE,CAAC;IAC/D;IACA,IAAK,CAAEC,WAAW,CAACC,WAAW,EAAEC,MAAM,EAAG;MACxCF,WAAW,CAACC,WAAW,GAAG,CAAEvB,WAAW,CAAE,WAAY,CAAC,CAAE;IACzD;IACA;IACA;IACA;IACAsB,WAAW,CAACC,WAAW,CACtBD,WAAW,CAACC,WAAW,CAACC,MAAM,GAAG,CAAC,CAClC,CAACD,WAAW,CAACE,IAAI,CAAE,GAAGP,YAAa,CAAC;;IAErC;IACA;IACA,MAAMQ,cAAc,GAAGd,iBAAiB,CAAC,CAAC;IAC1C,MAAMe,YAAY,GAAGd,eAAe,CAAC,CAAC;IACtC;IACA;IACA;IACAN,aAAa,CACZ,CAAEc,iBAAiB,EAAE,GAAGJ,SAAS,CAAE,EACnC,CAAEK,WAAW,CACd,CAAC;IACD,IAAK,CAAEN,kBAAkB,EAAG;MAC3BR,eAAe,CACdU,YAAY,CAAE,CAAC,CAAE,CAACf,QAAQ,EAC1BwB,YAAY,CAACC,YAAY,EACzBD,YAAY,CAACxB,QAAQ,KAAKuB,cAAc,CAACvB,QAAQ,GAC9CuB,cAAc,CAACG,MAAM,GACrBF,YAAY,CAACE,MAAM,EACtBF,YAAY,CAACE,MACd,CAAC;IACF,CAAC,MAAM;MACNpB,WAAW,CACVS,YAAY,CAAE,CAAC,CAAE,CAACf,QAAQ,EAC1Be,YAAY,CAAEA,YAAY,CAACM,MAAM,GAAG,CAAC,CAAE,CAACrB,QACzC,CAAC;IACF;EACD,CAAC,EAAE,CAAEA,QAAQ,CAAG,CAAC,CACjB;AACF"}