{"version":3,"names":["__","InspectorControls","useBlockProps","useInnerBlocksProps","store","blockEditorStore","Warning","useSelect","PanelBody","CommentsPaginationArrowControls","TEMPLATE","ALLOWED_BLOCKS","QueryPaginationEdit","attributes","paginationArrow","setAttributes","clientId","hasNextPreviousBlocks","select","getBlocks","innerBlocks","find","innerBlock","includes","name","blockProps","innerBlocksProps","template","allowedBlocks","pageComments","getSettings","__experimentalDiscussionSettings","createElement","Fragment","title","value","onChange"],"sources":["@wordpress/block-library/src/comments-pagination/edit.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tInspectorControls,\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tstore as blockEditorStore,\n\tWarning,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { PanelBody } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { CommentsPaginationArrowControls } from './comments-pagination-arrow-controls';\n\nconst TEMPLATE = [\n\t[ 'core/comments-pagination-previous' ],\n\t[ 'core/comments-pagination-numbers' ],\n\t[ 'core/comments-pagination-next' ],\n];\nconst ALLOWED_BLOCKS = [\n\t'core/comments-pagination-previous',\n\t'core/comments-pagination-numbers',\n\t'core/comments-pagination-next',\n];\n\nexport default function QueryPaginationEdit( {\n\tattributes: { paginationArrow },\n\tsetAttributes,\n\tclientId,\n} ) {\n\tconst hasNextPreviousBlocks = useSelect( ( select ) => {\n\t\tconst { getBlocks } = select( blockEditorStore );\n\t\tconst innerBlocks = getBlocks( clientId );\n\t\t/**\n\t\t * Show the `paginationArrow` control only if a\n\t\t * Comments Pagination Next or Comments Pagination Previous\n\t\t * block exists.\n\t\t */\n\t\treturn innerBlocks?.find( ( innerBlock ) => {\n\t\t\treturn [\n\t\t\t\t'core/comments-pagination-previous',\n\t\t\t\t'core/comments-pagination-next',\n\t\t\t].includes( innerBlock.name );\n\t\t} );\n\t}, [] );\n\n\tconst blockProps = useBlockProps();\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\ttemplate: TEMPLATE,\n\t\tallowedBlocks: ALLOWED_BLOCKS,\n\t} );\n\n\t// Get the Discussion settings\n\tconst pageComments = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { __experimentalDiscussionSettings } = getSettings();\n\t\treturn __experimentalDiscussionSettings?.pageComments;\n\t}, [] );\n\n\t// If paging comments is not enabled in the Discussion Settings then hide the pagination\n\t// controls. We don't want to remove them from the template so that when the user enables\n\t// paging comments, the controls will be visible.\n\tif ( ! pageComments ) {\n\t\treturn (\n\t\t\t<Warning>\n\t\t\t\t{ __(\n\t\t\t\t\t'Comments Pagination block: paging comments is disabled in the Discussion Settings'\n\t\t\t\t) }\n\t\t\t</Warning>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ hasNextPreviousBlocks && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t\t\t<CommentsPaginationArrowControls\n\t\t\t\t\t\t\tvalue={ paginationArrow }\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\tsetAttributes( { paginationArrow: value } );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t) }\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SACCC,iBAAiB,EACjBC,aAAa,EACbC,mBAAmB,EACnBC,KAAK,IAAIC,gBAAgB,EACzBC,OAAO,QACD,yBAAyB;AAChC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,uBAAuB;;AAEjD;AACA;AACA;AACA,SAASC,+BAA+B,QAAQ,sCAAsC;AAEtF,MAAMC,QAAQ,GAAG,CAChB,CAAE,mCAAmC,CAAE,EACvC,CAAE,kCAAkC,CAAE,EACtC,CAAE,+BAA+B,CAAE,CACnC;AACD,MAAMC,cAAc,GAAG,CACtB,mCAAmC,EACnC,kCAAkC,EAClC,+BAA+B,CAC/B;AAED,eAAe,SAASC,mBAAmBA,CAAE;EAC5CC,UAAU,EAAE;IAAEC;EAAgB,CAAC;EAC/BC,aAAa;EACbC;AACD,CAAC,EAAG;EACH,MAAMC,qBAAqB,GAAGV,SAAS,CAAIW,MAAM,IAAM;IACtD,MAAM;MAAEC;IAAU,CAAC,GAAGD,MAAM,CAAEb,gBAAiB,CAAC;IAChD,MAAMe,WAAW,GAAGD,SAAS,CAAEH,QAAS,CAAC;IACzC;AACF;AACA;AACA;AACA;IACE,OAAOI,WAAW,EAAEC,IAAI,CAAIC,UAAU,IAAM;MAC3C,OAAO,CACN,mCAAmC,EACnC,+BAA+B,CAC/B,CAACC,QAAQ,CAAED,UAAU,CAACE,IAAK,CAAC;IAC9B,CAAE,CAAC;EACJ,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMC,UAAU,GAAGvB,aAAa,CAAC,CAAC;EAClC,MAAMwB,gBAAgB,GAAGvB,mBAAmB,CAAEsB,UAAU,EAAE;IACzDE,QAAQ,EAAEjB,QAAQ;IAClBkB,aAAa,EAAEjB;EAChB,CAAE,CAAC;;EAEH;EACA,MAAMkB,YAAY,GAAGtB,SAAS,CAAIW,MAAM,IAAM;IAC7C,MAAM;MAAEY;IAAY,CAAC,GAAGZ,MAAM,CAAEb,gBAAiB,CAAC;IAClD,MAAM;MAAE0B;IAAiC,CAAC,GAAGD,WAAW,CAAC,CAAC;IAC1D,OAAOC,gCAAgC,EAAEF,YAAY;EACtD,CAAC,EAAE,EAAG,CAAC;;EAEP;EACA;EACA;EACA,IAAK,CAAEA,YAAY,EAAG;IACrB,OACCG,aAAA,CAAC1B,OAAO,QACLN,EAAE,CACH,mFACD,CACQ,CAAC;EAEZ;EAEA,OACCgC,aAAA,CAAAC,QAAA,QACGhB,qBAAqB,IACtBe,aAAA,CAAC/B,iBAAiB,QACjB+B,aAAA,CAACxB,SAAS;IAAC0B,KAAK,EAAGlC,EAAE,CAAE,UAAW;EAAG,GACpCgC,aAAA,CAACvB,+BAA+B;IAC/B0B,KAAK,EAAGrB,eAAiB;IACzBsB,QAAQ,EAAKD,KAAK,IAAM;MACvBpB,aAAa,CAAE;QAAED,eAAe,EAAEqB;MAAM,CAAE,CAAC;IAC5C;EAAG,CACH,CACS,CACO,CACnB,EACDH,aAAA;IAAA,GAAUN;EAAgB,CAAI,CAC7B,CAAC;AAEL"}