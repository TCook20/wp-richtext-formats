{"version":3,"names":["_element","require","_classnames","_interopRequireDefault","_coreData","_blockEditor","_components","_i18n","_data","_hooks","ELLIPSIS","PostExcerptEditor","attributes","textAlign","moreText","showMoreOnNewLine","excerptLength","setAttributes","isSelected","context","postId","postType","queryId","isDescendentOfQueryLoop","Number","isFinite","userCanEdit","useCanEditEntity","rawExcerpt","setExcerpt","rendered","renderedExcerpt","protected","isProtected","useEntityProp","postTypeSupportsExcerpts","useSelect","select","coreStore","getPostType","supports","excerpt","isEditable","blockProps","useBlockProps","className","classnames","wordCountType","_x","strippedRenderedExcerpt","useMemo","document","window","DOMParser","parseFromString","body","textContent","innerText","createElement","Fragment","BlockControls","AlignmentToolbar","value","onChange","newAlign","__","Warning","readMoreLink","RichText","tagName","placeholder","newMoreText","withoutInteractiveFormatting","excerptClassName","rawOrRenderedExcerpt","trim","trimmedExcerpt","split","join","excerptWithSpaces","numberOfSpaces","length","replaceAll","isTrimmed","excerptContent","InspectorControls","PanelBody","title","ToggleControl","__nextHasNoMarginBottom","label","checked","newShowMoreOnNewLine","RangeControl","min","max"],"sources":["@wordpress/block-library/src/post-excerpt/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityProp, store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl, RangeControl } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { useCanEditEntity } from '../utils/hooks';\n\nconst ELLIPSIS = '…';\n\nexport default function PostExcerptEditor( {\n\tattributes: { textAlign, moreText, showMoreOnNewLine, excerptLength },\n\tsetAttributes,\n\tisSelected,\n\tcontext: { postId, postType, queryId },\n} ) {\n\tconst isDescendentOfQueryLoop = Number.isFinite( queryId );\n\tconst userCanEdit = useCanEditEntity( 'postType', postType, postId );\n\tconst [\n\t\trawExcerpt,\n\t\tsetExcerpt,\n\t\t{ rendered: renderedExcerpt, protected: isProtected } = {},\n\t] = useEntityProp( 'postType', postType, 'excerpt', postId );\n\n\t/**\n\t * Check if the post type supports excerpts.\n\t * Add an exception and return early for the \"page\" post type,\n\t * which is registered without support for the excerpt UI,\n\t * but supports saving the excerpt to the database.\n\t * See: https://core.trac.wordpress.org/browser/branches/6.1/src/wp-includes/post.php#L65\n\t * Without this exception, users that have excerpts saved to the database will\n\t * not be able to edit the excerpts.\n\t */\n\tconst postTypeSupportsExcerpts = useSelect(\n\t\t( select ) => {\n\t\t\tif ( postType === 'page' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !! select( coreStore ).getPostType( postType )?.supports\n\t\t\t\t?.excerpt;\n\t\t},\n\t\t[ postType ]\n\t);\n\n\t/**\n\t * The excerpt is editable if:\n\t * - The user can edit the post\n\t * - It is not a descendent of a Query Loop block\n\t * - The post type supports excerpts\n\t */\n\tconst isEditable =\n\t\tuserCanEdit && ! isDescendentOfQueryLoop && postTypeSupportsExcerpts;\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\t/**\n\t * translators: If your word count is based on single characters (e.g. East Asian characters),\n\t * enter 'characters_excluding_spaces' or 'characters_including_spaces'. Otherwise, enter 'words'.\n\t * Do not translate into your own language.\n\t */\n\tconst wordCountType = _x( 'words', 'Word count type. Do not translate!' );\n\n\t/**\n\t * When excerpt is editable, strip the html tags from\n\t * rendered excerpt. This will be used if the entity's\n\t * excerpt has been produced from the content.\n\t */\n\tconst strippedRenderedExcerpt = useMemo( () => {\n\t\tif ( ! renderedExcerpt ) return '';\n\t\tconst document = new window.DOMParser().parseFromString(\n\t\t\trenderedExcerpt,\n\t\t\t'text/html'\n\t\t);\n\t\treturn document.body.textContent || document.body.innerText || '';\n\t}, [ renderedExcerpt ] );\n\n\tif ( ! postType || ! postId ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\t\t\tsetAttributes( { textAlign: newAlign } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t\t<div { ...blockProps }>\n\t\t\t\t\t<p>{ __( 'This block will display the excerpt.' ) }</p>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\tif ( isProtected && ! userCanEdit ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Warning>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'The content is currently protected and does not have the available excerpt.'\n\t\t\t\t\t) }\n\t\t\t\t</Warning>\n\t\t\t</div>\n\t\t);\n\t}\n\tconst readMoreLink = (\n\t\t<RichText\n\t\t\tclassName=\"wp-block-post-excerpt__more-link\"\n\t\t\ttagName=\"a\"\n\t\t\taria-label={ __( '“Read more” link text' ) }\n\t\t\tplaceholder={ __( 'Add \"read more\" link text' ) }\n\t\t\tvalue={ moreText }\n\t\t\tonChange={ ( newMoreText ) =>\n\t\t\t\tsetAttributes( { moreText: newMoreText } )\n\t\t\t}\n\t\t\twithoutInteractiveFormatting={ true }\n\t\t/>\n\t);\n\tconst excerptClassName = classnames( 'wp-block-post-excerpt__excerpt', {\n\t\t'is-inline': ! showMoreOnNewLine,\n\t} );\n\n\t/**\n\t * The excerpt length setting needs to be applied to both\n\t * the raw and the rendered excerpt depending on which is being used.\n\t */\n\tconst rawOrRenderedExcerpt = (\n\t\trawExcerpt || strippedRenderedExcerpt\n\t).trim();\n\n\tlet trimmedExcerpt = '';\n\tif ( wordCountType === 'words' ) {\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt\n\t\t\t.split( ' ', excerptLength )\n\t\t\t.join( ' ' );\n\t} else if ( wordCountType === 'characters_excluding_spaces' ) {\n\t\t/*\n\t\t * 1. Split the excerpt at the character limit,\n\t\t * then join the substrings back into one string.\n\t\t * 2. Count the number of spaces in the excerpt\n\t\t * by comparing the lengths of the string with and without spaces.\n\t\t * 3. Add the number to the length of the visible excerpt,\n\t\t * so that the spaces are excluded from the word count.\n\t\t */\n\t\tconst excerptWithSpaces = rawOrRenderedExcerpt\n\t\t\t.split( '', excerptLength )\n\t\t\t.join( '' );\n\n\t\tconst numberOfSpaces =\n\t\t\texcerptWithSpaces.length -\n\t\t\texcerptWithSpaces.replaceAll( ' ', '' ).length;\n\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt\n\t\t\t.split( '', excerptLength + numberOfSpaces )\n\t\t\t.join( '' );\n\t} else if ( wordCountType === 'characters_including_spaces' ) {\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt\n\t\t\t.split( '', excerptLength )\n\t\t\t.join( '' );\n\t}\n\n\tconst isTrimmed = trimmedExcerpt !== rawOrRenderedExcerpt;\n\n\tconst excerptContent = isEditable ? (\n\t\t<RichText\n\t\t\tclassName={ excerptClassName }\n\t\t\taria-label={ __( 'Excerpt text' ) }\n\t\t\tvalue={\n\t\t\t\tisSelected\n\t\t\t\t\t? rawOrRenderedExcerpt\n\t\t\t\t\t: ( ! isTrimmed\n\t\t\t\t\t\t\t? rawOrRenderedExcerpt\n\t\t\t\t\t\t\t: trimmedExcerpt + ELLIPSIS ) ||\n\t\t\t\t\t  __( 'No excerpt found' )\n\t\t\t}\n\t\t\tonChange={ setExcerpt }\n\t\t\ttagName=\"p\"\n\t\t/>\n\t) : (\n\t\t<p className={ excerptClassName }>\n\t\t\t{ ! isTrimmed\n\t\t\t\t? rawOrRenderedExcerpt || __( 'No excerpt found' )\n\t\t\t\t: trimmedExcerpt + ELLIPSIS }\n\t\t</p>\n\t);\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\t\tsetAttributes( { textAlign: newAlign } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Show link on new line' ) }\n\t\t\t\t\t\tchecked={ showMoreOnNewLine }\n\t\t\t\t\t\tonChange={ ( newShowMoreOnNewLine ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tshowMoreOnNewLine: newShowMoreOnNewLine,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel={ __( 'Max number of words' ) }\n\t\t\t\t\t\tvalue={ excerptLength }\n\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\tsetAttributes( { excerptLength: value } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tmin=\"10\"\n\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ excerptContent }\n\t\t\t\t{ ! showMoreOnNewLine && ' ' }\n\t\t\t\t{ showMoreOnNewLine ? (\n\t\t\t\t\t<p className=\"wp-block-post-excerpt__more-text\">\n\t\t\t\t\t\t{ readMoreLink }\n\t\t\t\t\t</p>\n\t\t\t\t) : (\n\t\t\t\t\treadMoreLink\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"mappings":"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"}