"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SlotProvider = exports.Slot = exports.Fill = void 0;
var _element = require("@wordpress/element");
var _preact = require("preact");
var _hooks = require("preact/hooks");
var _signals = require("@preact/signals");
/**
 * External dependencies
 */

const slotsContext = (0, _preact.createContext)();
const Fill = ({
  slot,
  children
}) => {
  const slots = (0, _hooks.useContext)(slotsContext);
  (0, _hooks.useEffect)(() => {
    if (slot) {
      slots.value = {
        ...slots.value,
        [slot]: children
      };
      return () => {
        slots.value = {
          ...slots.value,
          [slot]: null
        };
      };
    }
  }, [slots, slot, children]);
  return !!slot ? null : children;
};
exports.Fill = Fill;
const SlotProvider = ({
  children
}) => {
  return (
    // TODO: We can change this to use deepsignal once this PR is merged.
    // https://github.com/luisherranz/deepsignal/pull/38
    (0, _element.createElement)(slotsContext.Provider, {
      value: (0, _signals.signal)({})
    }, children)
  );
};
exports.SlotProvider = SlotProvider;
const Slot = ({
  name,
  children
}) => {
  const slots = (0, _hooks.useContext)(slotsContext);
  return slots.value[name] || children;
};
exports.Slot = Slot;
//# sourceMappingURL=slots.js.map