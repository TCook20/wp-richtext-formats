/**
 * Internal dependencies
 */
import type { State, UndoEdit } from './selectors';
type Optional<T> = T | undefined;
type EntityRecordKey = string | number;
/**
 * Returns the previous edit from the current undo offset
 * for the entity records edits history, if any.
 *
 * @param state State tree.
 *
 * @return The edit.
 */
export declare function getUndoEdits(state: State): Optional<UndoEdit[]>;
/**
 * Returns the next edit from the current undo offset
 * for the entity records edits history, if any.
 *
 * @param state State tree.
 *
 * @return The edit.
 */
export declare function getRedoEdits(state: State): Optional<UndoEdit[]>;
/**
 * Retrieve the fallback Navigation.
 *
 * @param state Data state.
 * @return The ID for the fallback Navigation post.
 */
export declare function getNavigationFallbackId(state: State): EntityRecordKey | undefined;
export {};
//# sourceMappingURL=private-selectors.d.ts.map