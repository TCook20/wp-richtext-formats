{"version":3,"names":["fastDeepEqual","v4","uuid","apiFetch","addQueryArgs","deprecated","receiveItems","removeItems","receiveQueriedItems","getOrLoadEntitiesConfig","DEFAULT_ENTITY_KEY","createBatch","STORE_NAME","getSyncProvider","receiveUserQuery","queryID","users","type","Array","isArray","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","map","record","status","title","action","receiveCurrentTheme","currentTheme","__experimentalReceiveCurrentGlobalStylesId","currentGlobalStylesId","id","__experimentalReceiveThemeBaseGlobalStyles","stylesheet","globalStyles","__experimentalReceiveThemeGlobalStyleVariations","variations","receiveThemeSupports","since","receiveThemeGlobalStyleRevisions","currentId","revisions","receiveEmbedPreview","url","preview","deleteEntityRecord","recordId","__unstableFetch","throwOnError","dispatch","configs","entityConfig","find","config","error","deletedRecord","__experimentalNoFetch","lock","__unstableAcquireStoreLock","exclusive","hasError","path","baseURL","method","_error","__unstableReleaseStoreLock","editEntityRecord","options","select","getEntityConfig","Error","mergedEdits","getRawEntityRecord","editedRecord","getEditedEntityRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","window","__experimentalEnableSync","syncConfig","objectId","getSyncObjectId","update","syncObjectType","meta","undo","undoIgnore","isCached","undoEdit","getUndoEdits","stackedEdits","redo","redoEdit","getRedoEdits","__unstableCreateUndoLevel","saveEntityRecord","isAutosave","resolveSelect","entityIdKey","entries","evaluatedValue","updatedRecord","persistedRecord","getCurrentUser","currentUserId","autosavePost","getAutosave","data","includes","newRecord","receiveAutosaves","__unstablePrePersist","__experimentalBatch","requests","batch","api","add","saveEditedEntityRecord","resultPromises","request","results","Promise","all","run","hasEditsForEntityRecord","getEntityRecordNonTransientEdits","__experimentalSaveSpecifiedEntityEdits","itemsToSave","editsToSave","some","item","receiveUploadPermissions","hasUploadPermissions","alternative","receiveUserPermission","isAllowed","postId","autosaves","receiveNavigationFallbackId","fallbackId"],"sources":["@wordpress/core-data/src/actions.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport fastDeepEqual from 'fast-deep-equal/es6';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getOrLoadEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\nimport { createBatch } from './batch';\nimport { STORE_NAME } from './name';\nimport { getSyncProvider } from './sync';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: Array.isArray( users ) ? users : [ users ],\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity record.\n * @param {string}       name            Name of the received entity record.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = ( Array.isArray( records ) ? records : [ records ] ).map(\n\t\t\t( record ) =>\n\t\t\t\trecord.status === 'auto-draft'\n\t\t\t\t\t? { ...record, title: '' }\n\t\t\t\t\t: record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits );\n\t} else {\n\t\taction = receiveItems( records, edits );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current global styles id has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} currentGlobalStylesId The current global styles id.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveCurrentGlobalStylesId(\n\tcurrentGlobalStylesId\n) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_GLOBAL_STYLES_ID',\n\t\tid: currentGlobalStylesId,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme base global styles have been received\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} stylesheet   The theme's identifier\n * @param {Object} globalStyles The global styles object.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeBaseGlobalStyles(\n\tstylesheet,\n\tglobalStyles\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLES',\n\t\tstylesheet,\n\t\tglobalStyles,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles variations have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} stylesheet The theme's identifier\n * @param {Array}  variations The global styles variations.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeGlobalStyleVariations(\n\tstylesheet,\n\tvariations\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS',\n\t\tstylesheet,\n\t\tvariations,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @deprecated since WP 5.9, this is not useful anymore, use the selector direclty.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports() {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveThemeSupports\", {\n\t\tsince: '5.9',\n\t} );\n\n\treturn {\n\t\ttype: 'DO_NOTHING',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles CPT post revisions have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {number} currentId The post id.\n * @param {Array}  revisions The global styles revisions.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeGlobalStyleRevisions( currentId, revisions ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_REVISIONS',\n\t\tcurrentId,\n\t\trevisions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} url     URL to preview the embed for.\n * @param {*}      preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}   kind                         Kind of the deleted entity.\n * @param {string}   name                         Name of the deleted entity.\n * @param {string}   recordId                     Record ID of the deleted entity.\n * @param {?Object}  query                        Special query parameters for the\n *                                                DELETE API call.\n * @param {Object}   [options]                    Delete options.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const deleteEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tquery,\n\t\t{ __unstableFetch = apiFetch, throwOnError = false } = {}\n\t) =>\n\tasync ( { dispatch } ) => {\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tlet error;\n\t\tlet deletedRecord = false;\n\t\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t} );\n\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tlet path = `${ entityConfig.baseURL }/${ recordId }`;\n\n\t\t\t\tif ( query ) {\n\t\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t\t}\n\n\t\t\t\tdeletedRecord = await __unstableFetch( {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t} );\n\n\t\t\t\tawait dispatch( removeItems( kind, name, recordId, true ) );\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn deletedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string}        kind                 Kind of the edited entity record.\n * @param {string}        name                 Name of the edited entity record.\n * @param {number|string} recordId             Record ID of the edited entity record.\n * @param {Object}        edits                The edits.\n * @param {Object}        options              Options for the edit.\n * @param {boolean}       [options.undoIgnore] Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport const editEntityRecord =\n\t( kind, name, recordId, edits, options = {} ) =>\n\t( { select, dispatch } ) => {\n\t\tconst entityConfig = select.getEntityConfig( kind, name );\n\t\tif ( ! entityConfig ) {\n\t\t\tthrow new Error(\n\t\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t\t);\n\t\t}\n\t\tconst { mergedEdits = {} } = entityConfig;\n\t\tconst record = select.getRawEntityRecord( kind, name, recordId );\n\t\tconst editedRecord = select.getEditedEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tconst edit = {\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t\t// so that the property is not considered dirty.\n\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\tconst recordValue = record[ key ];\n\t\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t\t: edits[ key ];\n\t\t\t\tacc[ key ] = fastDeepEqual( recordValue, value )\n\t\t\t\t\t? undefined\n\t\t\t\t\t: value;\n\t\t\t\treturn acc;\n\t\t\t}, {} ),\n\t\t};\n\t\tif ( window.__experimentalEnableSync && entityConfig.syncConfig ) {\n\t\t\tconst objectId = entityConfig.getSyncObjectId( recordId );\n\t\t\tgetSyncProvider().update(\n\t\t\t\tentityConfig.syncObjectType + '--edit',\n\t\t\t\tobjectId,\n\t\t\t\tedit.edits\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t\t...edit,\n\t\t\t\tmeta: {\n\t\t\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t\t\t...edit,\n\t\t\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t}, {} ),\n\t\t\t\t\t\tisCached: options.isCached,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t};\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport const undo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst undoEdit = select.getUndoEdits();\n\t\tif ( ! undoEdit ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'UNDO',\n\t\t\tstackedEdits: undoEdit,\n\t\t} );\n\t};\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport const redo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst redoEdit = select.getRedoEdits();\n\t\tif ( ! redoEdit ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'REDO',\n\t\t\tstackedEdits: redoEdit,\n\t\t} );\n\t};\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}   kind                         Kind of the received entity.\n * @param {string}   name                         Name of the received entity.\n * @param {Object}   record                       Record to be saved.\n * @param {Object}   options                      Saving options.\n * @param {boolean}  [options.isAutosave=false]   Whether this is an autosave.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const saveEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecord,\n\t\t{\n\t\t\tisAutosave = false,\n\t\t\t__unstableFetch = apiFetch,\n\t\t\tthrowOnError = false,\n\t\t} = {}\n\t) =>\n\tasync ( { select, resolveSelect, dispatch } ) => {\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\t\tconst recordId = record[ entityIdKey ];\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId || uuid() ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\t// Evaluate optimized edits.\n\t\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\t\tselect.getEditedEntityRecord( kind, name, recordId )\n\t\t\t\t\t);\n\t\t\t\t\tdispatch.editEntityRecord(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t\t);\n\t\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\t\t\tlet updatedRecord;\n\t\t\tlet error;\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tconst path = `${ entityConfig.baseURL }${\n\t\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t\t}`;\n\t\t\t\tconst persistedRecord = select.getRawEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t);\n\n\t\t\t\tif ( isAutosave ) {\n\t\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\t\tconst currentUser = select.getCurrentUser();\n\t\t\t\t\tconst currentUserId = currentUser\n\t\t\t\t\t\t? currentUser.id\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst autosavePost = await resolveSelect.getAutosave(\n\t\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\tcurrentUserId\n\t\t\t\t\t);\n\t\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t\t// have a value.\n\t\t\t\t\tlet data = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...autosavePost,\n\t\t\t\t\t\t...record,\n\t\t\t\t\t};\n\t\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'title',\n\t\t\t\t\t\t\t\t\t'excerpt',\n\t\t\t\t\t\t\t\t\t'content',\n\t\t\t\t\t\t\t\t\t'meta',\n\t\t\t\t\t\t\t\t].includes( key )\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tacc[ key ] = data[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t\t: data.status,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tdata,\n\t\t\t\t\t} );\n\n\t\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t\t// draft or auto-draft status.\n\t\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tacc[ key ] = newRecord[ key ];\n\t\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\t\tpersistedRecord.status ===\n\t\t\t\t\t\t\t\t\t\t\t'auto-draft' &&\n\t\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\t\tacc[ key ] = persistedRecord[ key ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch.receiveAutosaves(\n\t\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\t\tupdatedRecord\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet edits = record;\n\t\t\t\t\tif ( entityConfig.__unstablePrePersist ) {\n\t\t\t\t\t\tedits = {\n\t\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t\t...entityConfig.__unstablePrePersist(\n\t\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\t\tdata: edits,\n\t\t\t\t\t} );\n\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tupdatedRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tedits\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn updatedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Runs multiple core-data actions at the same time using one API request.\n *\n * Example:\n *\n * ```\n * const [ savedRecord, updatedRecord, deletedRecord ] =\n *   await dispatch( 'core' ).__experimentalBatch( [\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\n *   ] );\n * ```\n *\n * @param {Array} requests Array of functions which are invoked simultaneously.\n *                         Each function is passed an object containing\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\n *                         `deleteEntityRecord`.\n *\n * @return {(thunkArgs: Object) => Promise} A promise that resolves to an array containing the return\n *                                          values of each function given in `requests`.\n */\nexport const __experimentalBatch =\n\t( requests ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst batch = createBatch();\n\t\tconst api = {\n\t\t\tsaveEntityRecord( kind, name, record, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEntityRecord( kind, name, record, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEditedEntityRecord( kind, name, recordId, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.deleteEntityRecord( kind, name, recordId, query, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t\tconst resultPromises = requests.map( ( request ) => request( api ) );\n\t\tconst [ , ...results ] = await Promise.all( [\n\t\t\tbatch.run(),\n\t\t\t...resultPromises,\n\t\t] );\n\t\treturn results;\n\t};\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport const saveEditedEntityRecord =\n\t( kind, name, recordId, options ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst record = { [ entityIdKey ]: recordId, ...edits };\n\t\treturn await dispatch.saveEntityRecord( kind, name, record, options );\n\t};\n\n/**\n * Action triggered to save only specified properties for the entity.\n *\n * @param {string} kind        Kind of the entity.\n * @param {string} name        Name of the entity.\n * @param {Object} recordId    ID of the record.\n * @param {Array}  itemsToSave List of entity properties to save.\n * @param {Object} options     Saving options.\n */\nexport const __experimentalSaveSpecifiedEntityEdits =\n\t( kind, name, recordId, itemsToSave, options ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst editsToSave = {};\n\t\tfor ( const edit in edits ) {\n\t\t\tif ( itemsToSave.some( ( item ) => item === edit ) ) {\n\t\t\t\teditsToSave[ edit ] = edits[ edit ];\n\t\t\t}\n\t\t}\n\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\n\t\tconst entityIdKey = entityConfig?.key || DEFAULT_ENTITY_KEY;\n\n\t\t// If a record key is provided then update the existing record.\n\t\t// This necessitates providing `recordKey` to saveEntityRecord as part of the\n\t\t// `record` argument (here called `editsToSave`) to stop that action creating\n\t\t// a new record and instead cause it to update the existing record.\n\t\tif ( recordId ) {\n\t\t\teditsToSave[ entityIdKey ] = recordId;\n\t\t}\n\n\t\treturn await dispatch.saveEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\teditsToSave,\n\t\t\toptions\n\t\t);\n\t};\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @deprecated since WP 5.9, use receiveUserPermission instead.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveUploadPermissions\", {\n\t\tsince: '5.9',\n\t\talternative: 'receiveUserPermission',\n\t} );\n\n\treturn receiveUserPermission( 'create/media', hasUploadPermissions );\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: Array.isArray( autosaves ) ? autosaves : [ autosaves ],\n\t};\n}\n\n/**\n * Returns an action object signalling that the fallback Navigation\n * Menu id has been received.\n *\n * @param {integer} fallbackId the id of the fallback Navigation Menu\n * @return {Object} Action object.\n */\nexport function receiveNavigationFallbackId( fallbackId ) {\n\treturn {\n\t\ttype: 'RECEIVE_NAVIGATION_FALLBACK_ID',\n\t\tfallbackId,\n\t};\n}\n"],"mappings":"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"}