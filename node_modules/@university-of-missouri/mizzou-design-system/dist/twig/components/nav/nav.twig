{#
  Base Nav Component
 #}
{% macro Nav(options) %}
  {%- spaceless %}

    {# Imports #}
    {% import "@miz/utilities/twig/utils.twig" as utils %}
    {% from "@miz/components/nav/nav.twig" import NavList as navList %}

    {# Parameters #}
    {% set nav_class = 'miz-nav' %}
    {% set nav_class = options.class ? utils.AppendClasses(nav_class, options.class) : nav_class %}
    {% set nav_attributes = options.attributes ? utils.AddAttributes(options.attributes) %}
    {% set nav_content = options.list %}

  {% endspaceless -%}

  {# Output #}
  <nav class="{{ nav_class }}"{{ nav_attributes }}>
    {{ navList(nav_content) }}
  </nav>

{% endmacro %}

{#
  Nav List
 #}
{% macro NavList(options) %}
  {%- spaceless %}

    {# Imports #}
    {% import "@miz/utilities/twig/utils.twig" as utils %}
    {% from "@miz/components/nav/nav.twig" import NavItem as navItem %}

    {# Parameters #}
    {% set nav_list_class = 'miz-nav__list' %}
    {% set nav_list_class_override = options.classOverride ? true : false %}
    {% if nav_list_class_override %}
      {% set nav_list_class = options.class %}
    {% else %}
      {% set nav_list_class = options.class ? utils.AppendClasses(nav_list_class, options.class) : nav_list_class %}
    {% endif %}

    {% set nav_list_attributes = options.attributes ? utils.AddAttributes(options.attributes) %}
    {% set nav_list_items = options.items is defined and options.items is iterable ? options.items %}

  {% endspaceless -%}

  {# Output #}
  <ul class="{{ nav_list_class }}"{{ nav_list_attributes }}>
    {% for item in nav_list_items %}
      {{ navItem(item) }}
    {% endfor %}
  </ul>
{% endmacro %}

{#

 #}
{% macro NavItem(options) %}
  {%- spaceless %}

    {# Imports #}
    {% import "@miz/utilities/twig/utils.twig" as utils %}
    {% from "@miz/components/nav/nav.twig" import NavLink as navLink %}
    {% from "@miz/components/nav/nav.twig" import NavList as navList %}

    {# Parameters #}
    {% set nav_item_class = "miz-nav__list-item" %}
    {% set nav_item_class = options.class ? utils.AppendClasses(nav_item_class, options.class) : nav_item_class %}
    {% set nav_item_attributes = options.attributes ? utils.AddAttributes(options.attributes) %}

    {% set nav_link_options = options.link ? options.link : "" %}

    {% set nav_item_list = options.list ? options.list : false %}

    {# Variables #}
  {% endspaceless -%}

  {# Output #}
  <li class="{{ nav_item_class }}"{{ nav_item_attributes }}>{{ navLink(nav_link_options) }}
    {% if nav_item_list %}
      {{ navList(nav_item_list) }}
    {% endif -%}
  </li>

{%- endmacro %}

{#
  Nav Link
 #}
{% macro NavLink(options) %}
  {%- spaceless %}

    {# Imports #}
    {% import "@miz/utilities/twig/utils.twig" as utils %}

    {# Parameters #}
    {% set nav_link_class = "miz-nav__link" %}
    {% set nav_link_class = options.class ? utils.AppendClasses(nav_link_class, options.class) : nav_link_class %}
    {% set nav_link_attributes = options.attributes ? utils.AddAttributes(options.attributes) %}
    {% set nav_link_content = options.text ?: "No Content" %}
    {% set nav_link_href = options.href ?: "#" %}

  {% endspaceless -%}

  {# Output #}
  {% if options.dropdown %}
    {% from "@miz/components/dropdown/dropdown.twig" import DropdownButton as dropdownButton %}

    {% set dropdown_button_options = {
      "class": nav_link_class,
      "attributes": options.attributes,
      "text": nav_link_content
    } %}

    {{ dropdownButton(dropdown_button_options) }}
  {% else %}
    <a class="{{ nav_link_class }}" href="{{ nav_link_href }}"{{ nav_link_attributes }}>{{ nav_link_content }}</a>
  {% endif %}

{%- endmacro %}
