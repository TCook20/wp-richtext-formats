"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.pageHeaders = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var PageHeader_1 = __importDefault(require("Components/PageHeader/PageHeader"));
var config_json_1 = require("Components/PageHeader/config.json");
var PageHeader_mdx_1 = __importDefault(require("./PageHeader.mdx"));
var Template = function (args) {
    return (0, jsx_runtime_1.jsx)(PageHeader_1.default, __assign({}, args));
};
exports.default = {
    component: PageHeader_1.default,
    title: 'Design System/Components/Page Headers',
    parameters: {
        docs: {
            description: {
                component: config_json_1.description,
            },
            page: PageHeader_mdx_1.default,
        },
        status: config_json_1.status,
    },
    argTypes: {
        title: {
            table: {
                category: 'Props',
            },
        },
        attributes: {
            table: {
                disable: true,
            },
        },
        branded: {
            table: {
                category: 'Options',
            },
        },
        variant: {
            table: {
                category: 'Options',
            },
            options: ['default', 'dark'],
            control: {
                type: 'radio',
            },
        },
        size: {
            table: {
                category: 'Options',
            },
            options: ['default', 'small', 'large', 'xlarge'],
            control: {
                type: 'select',
            },
        },
    },
};
exports.pageHeaders = Template.bind({});
exports.pageHeaders.args = {
    title: 'Base Page Header',
    branded: false,
    variant: 'default',
    size: 'default',
};
