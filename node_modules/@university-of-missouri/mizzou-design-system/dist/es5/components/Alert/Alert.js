"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var drupal_attribute_1 = __importDefault(require("drupal-attribute"));
var Alert = function (_a) {
    var _b;
    var _c = _a.attributes, attributes = _c === void 0 ? new drupal_attribute_1.default('') : _c, children = _a.children, link = _a.link, _d = _a.variant, variant = _d === void 0 ? 'default' : _d;
    var alertAttributes = {
        className: (0, classnames_1.default)('miz-alert', (_b = {},
            _b["miz-alert--".concat(variant)] = variant !== 'default',
            _b), attributes.get('class')),
    };
    var _e = react_1.default.useState(null), icon = _e[0], setIcon = _e[1];
    react_1.default.useEffect(function () {
        if (variant === 'info') {
            setIcon('info');
        }
        else if (variant === 'clear') {
            setIcon('info');
        }
        else if (variant === 'warning') {
            setIcon('warning');
        }
        else if (variant === 'severe') {
            setIcon('warning');
        }
        else {
            setIcon(null);
        }
    });
    if (link) {
        return ((0, jsx_runtime_1.jsx)("a", __assign({ href: link, className: "miz-linked-alert" }, { children: (0, jsx_runtime_1.jsxs)("div", __assign({}, alertAttributes, { children: [(0, jsx_runtime_1.jsx)("i", __assign({ className: "miz-icon material-icons miz-alert__icon" }, { children: icon })), children] })) })));
    }
    return ((0, jsx_runtime_1.jsxs)("div", __assign({}, alertAttributes, { children: [(0, jsx_runtime_1.jsx)("i", __assign({ className: "miz-icon material-icons miz-alert__icon" }, { children: icon })), children] })));
};
exports.default = Alert;
