"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var drupal_attribute_1 = __importDefault(require("drupal-attribute"));
var classnames_1 = __importDefault(require("classnames"));
var BreadcrumbItem = function (_a) {
    var _b = _a.attributes, attributes = _b === void 0 ? new drupal_attribute_1.default('') : _b, item = _a.item;
    var BreadcrumbItemAttributes = {
        className: (0, classnames_1.default)('miz-breadcrumbs__list-item', attributes.get('class')),
    };
    attributes.forEach(function (value, att) {
        if (att === 'class') {
            BreadcrumbItemAttributes.className = value.join(' ');
        }
        else {
            BreadcrumbItemAttributes[att] = value;
        }
    });
    var itemContent = Object.entries(item).map(function (content, i) {
        switch (content[0]) {
            case 'link':
                return ((0, jsx_runtime_1.jsx)("a", __assign({ className: 'miz-breadcrumbs__link', href: content[1].href }, { children: content[1].text }), i));
            case 'page':
                return ((0, jsx_runtime_1.jsx)("span", __assign({ className: 'miz-breadcrumbs__list-item--current' }, { children: content[1].text }), i));
            default:
                return (0, jsx_runtime_1.jsx)("span", { children: "An unknown" }, i);
        }
    });
    return (0, jsx_runtime_1.jsx)("li", __assign({}, BreadcrumbItemAttributes, { children: itemContent }));
};
var BreadcrumbsList = function (_a) {
    var _b = _a.attributes, attributes = _b === void 0 ? new drupal_attribute_1.default('') : _b, list = _a.list;
    var BreadcrumbsListAttributes = {
        className: (0, classnames_1.default)('miz-breadcrumbs__list', attributes.get('class')),
    };
    attributes.forEach(function (value, att) {
        if (att === 'class') {
            BreadcrumbsListAttributes.className = value.join(' ');
        }
        else {
            BreadcrumbsListAttributes[att] = value;
        }
    });
    return ((0, jsx_runtime_1.jsx)("ol", __assign({}, BreadcrumbsListAttributes, { children: list.items.map(function (item, i) {
            return (0, jsx_runtime_1.jsx)(BreadcrumbItem, { item: item }, i);
        }) })));
};
var Breadcrumbs = function (_a) {
    var _b = _a.attributes, attributes = _b === void 0 ? new drupal_attribute_1.default('') : _b, _c = _a.branded, branded = _c === void 0 ? false : _c, list = __rest(_a, ["attributes", "branded"]);
    var BreadcrumbAttributes = {
        className: (0, classnames_1.default)('miz-breadcrumbs', {
            'miz-breadcrumbs--brand': branded,
        }, attributes.get('class')),
    };
    attributes.setAttribute('aria-label', 'breadcrumbs');
    attributes.forEach(function (value, att) {
        if (att === 'class') {
            BreadcrumbAttributes.className = value.join(' ');
        }
        else {
            BreadcrumbAttributes[att] = value;
        }
    });
    return ((0, jsx_runtime_1.jsx)("nav", __assign({}, BreadcrumbAttributes, { children: (0, jsx_runtime_1.jsx)(BreadcrumbsList, __assign({}, list)) })));
};
exports.default = Breadcrumbs;
