"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var classnames_1 = __importDefault(require("classnames"));
var drupal_attribute_1 = __importDefault(require("drupal-attribute"));
var LinkList = function (_a) {
    var _b = _a.attributes, attributes = _b === void 0 ? new drupal_attribute_1.default('') : _b, _c = _a.layout, layout = _c === void 0 ? 'default' : _c, _d = _a.align, align = _d === void 0 ? 'default' : _d, _e = _a.fill, fill = _e === void 0 ? false : _e, _f = _a.branded, branded = _f === void 0 ? false : _f, list = _a.list;
    var linkList;
    var LinkListAttributes = {
        className: (0, classnames_1.default)('miz-link-list', {
            'miz-link-list--inline': layout === 'inline',
            'miz-link-list--right': align === 'right',
            'miz-link-list--fill': fill,
            'miz-link-list--brand': branded,
        }, attributes.get('class')),
    };
    attributes.forEach(function (value, key) {
        if (key !== 'class') {
            LinkListAttributes[key] = value;
        }
    });
    var listItemStyle = (0, classnames_1.default)('miz-link-list__item"');
    var listItemLinkStyle = (0, classnames_1.default)('miz-link-list__link');
    if (list) {
        linkList = list.map(function (listItem, i) { return ((0, jsx_runtime_1.jsx)("li", __assign({ className: listItemStyle }, { children: (0, jsx_runtime_1.jsxs)("a", __assign({ href: listItem.url, className: listItemLinkStyle }, { children: [listItem.text, ' ', branded && ((0, jsx_runtime_1.jsx)("i", __assign({ className: "miz-icon material-icons miz-text--gold miz-flex-item--push" }, { children: "chevron_right" })))] })) }), i)); });
    }
    return (0, jsx_runtime_1.jsx)("ul", __assign({}, LinkListAttributes, { children: linkList }));
};
exports.default = LinkList;
