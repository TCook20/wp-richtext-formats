"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = __importDefault(require("react"));
var axios_1 = __importDefault(require("axios"));
var classnames_1 = __importDefault(require("classnames"));
var Event_1 = __importDefault(require("Components/Event/Event"));
var Button_1 = require("Components/Button/Button");
var Events = function (_a) {
    var _b = _a.title, title = _b === void 0 ? 'Calendar Events' : _b, _c = _a.kicker, kicker = _c === void 0 ? 'Mizzou' : _c, _d = _a.method, method = _d === void 0 ? 'search' : _d, _e = _a.term, term = _e === void 0 ? 'research' : _e, _f = _a.count, count = _f === void 0 ? 3 : _f, 
    // days = 90,
    buttons = _a.buttons;
    var localistApi = 'https://calendar.missouri.edu/api/2/events/';
    var fullQuery;
    var events;
    var buttonGroup;
    var _g = react_1.default.useState(fullQuery), query = _g[0], setQuery = _g[1];
    var _h = react_1.default.useState(events), eventsCollection = _h[0], setEvents = _h[1];
    var sectionClass = (0, classnames_1.default)('miz-layer', 'miz-layer--brand', 'miz-stack-sandwich--xl', 'miz-main-grid__full');
    react_1.default.useEffect(function () {
        var queryMethod = method === 'search' ? 'search/?search' : "?".concat(method);
        var queryCount = "pp=".concat(count);
        // const queryDays = 'days=' + days
        fullQuery = localistApi + queryMethod;
        if (term !== '') {
            fullQuery = [fullQuery, term].filter(Boolean).join('=');
        }
        fullQuery = [fullQuery, queryCount].filter(Boolean).join('&');
        fullQuery += "&start=".concat(new Date().toJSON().slice(0, 10).replace(/-/g, ''), "&days=90");
        setQuery(fullQuery);
    }, [method, term, count]);
    react_1.default.useEffect(function () {
        axios_1.default
            .get(query)
            .then(function (response) { return setEvents(response.data.events); })
            .catch(function (error) {
            console.log('Error fetching and parsing data', error);
        });
    }, [query]);
    if (eventsCollection && eventsCollection.length > 0) {
        events = eventsCollection.map(function (event, i) { return ((0, jsx_runtime_1.jsx)(Event_1.default, { title: event.event.title, link: event.event.localist_url, startDate: event.event.event_instances[0].event_instance.start, endDate: event.event.event_instances[0].event_instance.end, location: event.event.location }, i)); });
    }
    else {
        events = (0, jsx_runtime_1.jsx)("p", { children: "No events..." });
    }
    if (buttons) {
        buttonGroup = buttons.map(function (button, i) { return ((0, jsx_runtime_1.jsx)(Button_1.AnchorButton, __assign({ branded: true, secondary: true, link: button.link }, { children: button.title }), i)); });
    }
    return ((0, jsx_runtime_1.jsx)("div", __assign({ className: sectionClass }, { children: (0, jsx_runtime_1.jsxs)("div", __assign({ className: "miz-container" }, { children: [(0, jsx_runtime_1.jsxs)("header", __assign({ className: "miz-layer__header miz-layer__header--center" }, { children: [kicker && (0, jsx_runtime_1.jsx)("p", __assign({ className: "miz-layer__kicker" }, { children: kicker })), (0, jsx_runtime_1.jsx)("h2", __assign({ className: "miz-layer__title" }, { children: title }))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "miz-layer__content" }, { children: [(0, jsx_runtime_1.jsx)("div", __assign({ className: "miz-card-deck" }, { children: events })), buttons && (0, jsx_runtime_1.jsx)("div", __assign({ className: "miz-layer__content--center" }, { children: buttonGroup }))] }))] })) })));
};
exports.default = Events;
