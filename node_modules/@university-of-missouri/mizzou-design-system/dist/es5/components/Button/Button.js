"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnchorButton = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var drupal_attribute_1 = __importDefault(require("drupal-attribute"));
var classnames_1 = __importDefault(require("classnames"));
var Button = function (_a) {
    var _b;
    var _c = _a.attributes, attributes = _c === void 0 ? new drupal_attribute_1.default('') : _c, children = _a.children, _d = _a.primary, primary = _d === void 0 ? false : _d, _e = _a.secondary, secondary = _e === void 0 ? false : _e, _f = _a.branded, branded = _f === void 0 ? false : _f, _g = _a.variant, variant = _g === void 0 ? 'default' : _g, _h = _a.size, size = _h === void 0 ? 'default' : _h, props = __rest(_a, ["attributes", "children", "primary", "secondary", "branded", "variant", "size"]);
    var buttonAttributes = {
        className: (0, classnames_1.default)('miz-button', (_b = {
                'miz-button--brand': branded,
                'miz-button--primary': primary && variant !== 'ghost',
                'miz-button--secondary': secondary && !primary && variant !== 'ghost'
            },
            _b["miz-button--".concat(variant)] = variant !== 'default',
            _b['miz-button--ghost-gold'] = primary && variant === 'ghost',
            _b['miz-button--small'] = size === 'small',
            _b['miz-button--lg'] = size === 'large',
            _b), attributes.get('class')),
    };
    attributes.forEach(function (value, key) {
        if (key !== 'class') {
            buttonAttributes[key] = value;
        }
    });
    return ((0, jsx_runtime_1.jsx)("button", __assign({}, buttonAttributes, props, { children: children })));
};
var AnchorButton = function (_a) {
    var _b;
    var _c = _a.attributes, attributes = _c === void 0 ? new drupal_attribute_1.default('') : _c, children = _a.children, _d = _a.primary, primary = _d === void 0 ? false : _d, _e = _a.secondary, secondary = _e === void 0 ? false : _e, _f = _a.branded, branded = _f === void 0 ? false : _f, _g = _a.variant, variant = _g === void 0 ? 'default' : _g, _h = _a.size, size = _h === void 0 ? 'default' : _h, link = _a.link, props = __rest(_a, ["attributes", "children", "primary", "secondary", "branded", "variant", "size", "link"]);
    var buttonAttributes = {
        className: (0, classnames_1.default)('miz-button', (_b = {
                'miz-button--brand': branded,
                'miz-button--primary': primary && variant !== 'ghost',
                'miz-button--secondary': secondary && !primary && variant !== 'ghost'
            },
            _b["miz-button--".concat(variant)] = variant !== 'default',
            _b['miz-button--ghost-gold'] = primary && variant === 'ghost',
            _b['miz-button--small'] = size === 'small',
            _b['miz-button--lg'] = size === 'large',
            _b), attributes.get('class')),
        href: link,
    };
    attributes.forEach(function (value, key) {
        if (key !== 'class') {
            buttonAttributes[key] = value;
        }
    });
    return ((0, jsx_runtime_1.jsx)("a", __assign({}, buttonAttributes, props, { children: children })));
};
exports.AnchorButton = AnchorButton;
exports.default = Button;
