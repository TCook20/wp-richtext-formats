"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var drupal_attribute_1 = __importDefault(require("drupal-attribute"));
var classnames_1 = __importDefault(require("classnames"));
var Button_1 = __importDefault(require("Components/Button/Button"));
var SearchForm = function (_a) {
    var _b = _a.attributes, attributes = _b === void 0 ? new drupal_attribute_1.default('') : _b, _c = _a.formAction, formAction = _c === void 0 ? '/search/' : _c, _d = _a.labelText, labelText = _d === void 0 ? 'Search' : _d, _e = _a.inputId, inputId = _e === void 0 ? 'search-input' : _e, _f = _a.inputName, inputName = _f === void 0 ? 'q' : _f, _g = _a.inputPlaceholder, inputPlaceholder = _g === void 0 ? 'Search this site' : _g;
    var SearchFormAttributes = {
        className: (0, classnames_1.default)('miz-input-group', attributes.get('class')),
    };
    attributes.forEach(function (value, key) {
        if (key !== 'class') {
            SearchFormAttributes[key] = value;
        }
    });
    return ((0, jsx_runtime_1.jsxs)("form", __assign({ action: formAction, method: "get" }, SearchFormAttributes, { children: [(0, jsx_runtime_1.jsx)("label", __assign({ htmlFor: inputId, className: "miz-label--hidden" }, { children: labelText })), (0, jsx_runtime_1.jsx)("input", { type: "text", className: "miz-input", id: inputId, placeholder: inputPlaceholder, name: inputName }), (0, jsx_runtime_1.jsx)(Button_1.default, __assign({ primary: true, size: 'small', attributes: attributes.addClass('miz-button--icon', 'miz-button--square-sm', 'miz-input-group__button') }, { children: (0, jsx_runtime_1.jsx)("i", __assign({ className: "miz-icon material-icons miz-icon--button miz-icon--md" }, { children: "search" })) }))] })));
};
exports.default = SearchForm;
