"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccordionContent = exports.AccordionButton = exports.useToggle = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var React = __importStar(require("react"));
var drupal_attribute_1 = __importDefault(require("drupal-attribute"));
var classnames_1 = __importDefault(require("classnames"));
var Button_1 = __importDefault(require("Components/Button/Button"));
var useToggle = function (initialValue) {
    var _a = React.useState(initialValue), value = _a[0], setValue = _a[1];
    var toggleValue = function () { return setValue(!value); };
    return [value, toggleValue];
};
exports.useToggle = useToggle;
var AccordionButton = function (_a) {
    var _b = _a.attributes, attributes = _b === void 0 ? new drupal_attribute_1.default('') : _b, _c = _a.isVisible, isVisible = _c === void 0 ? false : _c, onClick = _a.onClick, children = _a.children, _d = _a.theme, theme = _d === void 0 ? false : _d, args = __rest(_a, ["attributes", "isVisible", "onClick", "children", "theme"]);
    var atts = __assign({ className: '' }, args);
    attributes.forEach(function (value, key) {
        if (key !== 'class') {
            atts[key] = value;
        }
    });
    return ((0, jsx_runtime_1.jsx)(Button_1.default, __assign({ attributes: attributes
            .addClass('miz-accordion__button')
            .setAttribute('aria-expanded', 'isVisible'), onClick: onClick, secondary: theme }, { children: children })));
};
exports.AccordionButton = AccordionButton;
var AccordionContent = function (_a) {
    var _b = _a.attributes, attributes = _b === void 0 ? new drupal_attribute_1.default('') : _b, _c = _a.isVisible, isVisible = _c === void 0 ? false : _c, children = _a.children;
    var atts = { className: '' };
    var accordionContentClass = (0, classnames_1.default)('miz-accordion__content', {
        show: isVisible,
    });
    attributes.addClass(accordionContentClass);
    attributes.forEach(function (value, att) {
        if (att === 'class') {
            atts.className = value.join(' ');
        }
        else {
            atts[att] = value;
        }
    });
    return (0, jsx_runtime_1.jsx)("div", __assign({}, atts, { children: children }));
};
exports.AccordionContent = AccordionContent;
var Accordion = function (_a) {
    var attributes = _a.attributes, _b = _a.theme, theme = _b === void 0 ? 'default' : _b, children = _a.children, _c = _a.branded, branded = _c === void 0 ? false : _c, _d = _a.button, button = _d === void 0 ? 'Button' : _d, content = _a.content;
    var atts = {
        className: (0, classnames_1.default)('miz-accordion', {
            'miz-accordion--brand': branded,
            'miz-accordion--dark': theme === 'dark',
        }, attributes.get('class')),
        id: '',
    };
    var _e = (0, exports.useToggle)(false), isVisible = _e[0], toggleVisible = _e[1];
    attributes.forEach(function (value, key) {
        if (key !== 'class') {
            atts[key] = value;
        }
    });
    return ((0, jsx_runtime_1.jsxs)("section", __assign({}, atts, { children: [(0, jsx_runtime_1.jsx)(exports.AccordionButton, __assign({ onClick: toggleVisible, isVisible: isVisible, theme: theme === 'dark' }, { children: button })), (0, jsx_runtime_1.jsx)(exports.AccordionContent, __assign({ attributes: new drupal_attribute_1.default(''), isVisible: isVisible }, { children: content })), children] })));
};
exports.default = Accordion;
