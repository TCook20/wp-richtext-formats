import React from 'react';
import { useParameter } from '@storybook/api';
import classNames from 'classnames';
import DrupalAttribute from 'drupal-attribute'
import './_component-status.scss'

export interface StatusTagProps {
  attributes?: DrupalAttribute
  type: string
  status: string
}

export const StatusTag = ({ attributes = new DrupalAttribute(''), type, status }: StatusTagProps): JSX.Element => {
  const StatusTagAttributes = {
    className: classNames('miz-status', {
      [`miz-status--${ status }`]: status
    }, attributes.get('class')),
  }
  
  return (
    <div {...StatusTagAttributes}>
      <span className="miz-status__type">{ type }</span>
      <span className="miz-status__version">{ status }</span>
    </div>
  )
}

export interface StatusGroupProps {
  children?: React.ReactNode
  attributes?: DrupalAttribute
  statuses: any
}

export const StatusGroup = ({ children, attributes = new DrupalAttribute(''), statuses }: StatusGroupProps): JSX.Element => {
  const StatusGroupAttributes = {
    className: classNames('miz-status-container', attributes.get('class')),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      StatusGroupAttributes[key] = value
    }
  })

  let StatusTags

  if (statuses) {
    StatusTags = statuses.map((item, i) => (
      <StatusTag type={item.type} status={item.status} key={i} />
    ))
  }

  return (
    <div {...StatusGroupAttributes}>
      { StatusTags }
      { children }
    </div>
  )
}

const ComponentStatus = (): JSX.Element => {
  const PARAM_KEY = 'status'
  const StatusParam = useParameter('status', null);
  console.log(PARAM_KEY)

  return <StatusGroup statuses={StatusParam} />
};

export default ComponentStatus
