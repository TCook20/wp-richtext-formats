////
/// Buttons
/// Classes and utilities to be used with buttons and
/// anchor elements meant to be used as buttons.
///
/// @author <Jason Rollins rollinsj@missouri.edu>
///
////

@use 'sass:color';
@use 'sass:map';
@use 'mixins/state' as is;
@use 'mixins/text';

// MIZ Tokens
@import 'tokens/tokens';

$font-color: $miz-black !default;
$font-family: $miz-font-family-base !default;
$font-size: $miz-font-size-base !default;
$font-size-sm: $miz-font-size-sm !default;
$font-size-lg: $miz-font-size-lg !default;
$font-weight: $miz-font-weight-normal !default;
$line-height: $miz-line-height-base !default;
$text-transform: none !default;
$background-color: $miz-white !default;
$border-width: 1px !default;
$border-style: solid !default;
$border-color: color.scale($miz-black, $lightness: -10%) !default;
$border-radius: 0 !default;
$transition-property: all !default;
$transition-duration: 0.1s !default;
$transition-timing-function: ease-in-out !default;
$transition-delay: 0 !default;
$transition: $transition-property $transition-duration $transition-timing-function $transition-delay;
$padding-x: $miz-space-default !default;
$padding-y: $miz-space-default !default;

// Button set-scales
@mixin set-scale($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

@mixin focused(
  $transition: outline 0s,
  $outline: 4px solid $miz-focus-indicator-color-light,
  $outline-offset: $miz-space-xs,
  $background-color: auto,
) {
  @include is.focused {
    transition: $transition;
    outline: $outline;
    outline-offset: $outline-offset;
    background-color: $background-color;
  }
}

@mixin hovering($background-color) {
  @include is.hovering {
    background-color: $background-color;
  }
}

@mixin active($outline: auto, $background-color, $border-color, $box-shadow) {
  @include is.active {
    outline: $outline;
    background-color: $background-color;
    border-color: $border-color;
    box-shadow: $box-shadow;
  }
}

@mixin make-button(
  $display: inline-block,
  $transition: $transition,
  $border-width: $border-width,
  $border-style: $border-style,
  $border-color: $border-color,
  $color: $font-color,
  $font-family: $font-family,
  $font-weight: $font-weight,
  $text-decoration: none,
  $text-transform: $text-transform,
  $text-align: center,
  $vertical-align: middle,
  $background-color: transparent,
) {
  display: $display;
  transition: $transition;
  border-width: $border-width;
  border-style: $border-style;
  border-color: $border-color;
  background-color: $background-color;
  vertical-align: $vertical-align;
  text-align: $text-align;
  text-transform: $text-transform;
  font-family: $font-family;
  font-weight: $font-weight;
  color: $color;

  &,
  &:any-link {
    text-decoration: $text-decoration;
  }
}

/// Base button style
.miz-button {
  @include make-button;
  @include text.text-crop--open-sans;
  @include set-scale(
    $padding-y,
    $padding-x,
    $font-size,
    $line-height,
    $border-radius
  );
  @include focused;
}

/// Button Modifiers

/// Primary Button style
.miz-button--primary,
.miz-button--primary:any-link {
  $theme-color: map.get($miz-theme-colors, 'primary');
  $border-color: color.scale($theme-color, $lightness: -17.8%);

  background-color: $theme-color;
  border-color: $border-color;
  color: $miz-black;

  @include focused;
  @include hovering(color.adjust($theme-color, $lightness: 20%));
  @include active(
    $outline: 0,
    $background-color: color.adjust($theme-color, $lightness: 30%),
    $border-color: color.adjust($theme-color, $lightness: 30%),
    $box-shadow: 0 0 0 $miz-space-xxs color.adjust($theme-color, $lightness: 50%)
  );

  &.miz-button--light {
    background-color: $miz-gold-300;

    @include focused($background-color: color.adjust($miz-gold-300, $lightness: -10%));
    @include hovering($background-color: color.adjust($miz-gold-300, $lightness: -20%));
    @include active(
      $outline: 0,
      $background-color: color.adjust($miz-gold-300, $lightness: -30%),
      $border-color: color.adjust($miz-gold-300, $lightness: -30%),
      $box-shadow: 0 0 0 $miz-space-xxs color.adjust($miz-gold-300, $lightness: -30%)
    );
  }
}

// Secondary Button style
.miz-button--secondary,
.miz-button--secondary:any-link {
  $theme-color: map.get($miz-theme-colors, 'secondary');
  $border-color: color.scale($theme-color, $lightness: -10%);

  border-color: $border-color;
  background-color: $theme-color;
  color: $miz-white;

  @include focused;
  @include hovering($background-color: color.adjust($theme-color, $lightness: 20%));

  &:hover {
    color: $miz-white;
  }

  @include active(
    $outline: 0,
    $background-color: color.adjust($theme-color, $lightness: 30%),
    $border-color: color.adjust($theme-color, $lightness: 30%),
    $box-shadow: 0 0 0 $miz-space-xxs color.adjust($theme-color, $lightness: 50%)
  );

  &.miz-button--light {
    background-color: $miz-black-400;

    @include focused(
      $background-color: color.adjust($miz-black-400, $lightness: -10%),
    );
    @include hovering($background-color: color.adjust($miz-black-400, $lightness: -20%));
    @include active(
      $outline: 0,
      $background-color: color.adjust($miz-black-400, $lightness: -30%),
      $border-color: color.adjust($miz-black-400, $lightness: -30%),
      $box-shadow: 0 0 0 $miz-space-xxs color.adjust($miz-black-400, $lightness: -30%)
    );
  }
}

// Ghost Button style
.miz-button--ghost,
.miz-button--ghost:any-link {
  $color: $miz-black-100;
  $background-color: $miz-black-100;

  border-color: $color;
  background-color: rgba($background-color, 0);
  color: $color;

  @include focused(
    $background-color: rgba($background-color, 0.1),
  );
  @include hovering($background-color: rgba($background-color, 0.2));

  &:hover {
    color: $color;
  }

  @include active(
    $outline: 0,
    $background-color: rgba($background-color, 0.3),
    $border-color: rgba($color, 0),
    $box-shadow: 0 0 0 $miz-space-xxs rgba($color, 0.3),
  );
}

// Ghost Gold Button style
.miz-button--ghost-gold,
.miz-button--ghost-gold:any-link {
  $color: $miz-gold;
  $background-color: $miz-gold;

  border-color: $color;
  background-color: rgba($background-color, 0);
  color: $color;

  @include focused(
    $background-color: rgba($color, 0.1),
  );
  @include hovering($background-color: rgba($background-color, 0.2));

  &:hover {
    color: $color;
  }

  @include active(
    $outline: 0,
    $background-color: rgba($background-color, 0.3),
    $border-color: rgba($color, 0),
    $box-shadow: 0 0 0 $miz-space-xxs rgba($color, 0.3),
  );
}

// Button with Icon
.miz-button--icon {
  // @include text-crop;
}

// Small Button style
.miz-button--small {
  @include set-scale(
    $miz-space-s,
    $miz-space-s,
    $font-size-sm,
    1.5,
    $border-radius
  );
}

// Large Button style
.miz-button--lg {
  @include set-scale(
    $miz-space-l * 0.75,
    $miz-space-l,
    $font-size-lg,
    1.5,
    $border-radius
  );
}

// Square Button
// Most Button spacing is "squished" (smaller on top and bottom than
// on the sides). This makes a square button.
.miz-button--square-sm {
  &::before,
  &::after {
    display: none;
  }
}
