import React from 'react'
import DrupalAttribute from 'drupal-attribute'
import classNames from 'classnames'

import { NavList } from 'Components/Nav/Nav'
import Button from 'Components/Button/Button'
import Menu from 'Components/Menu/Menu'

/**
 * Props for a NavLink
 *
 * @interface
 */
interface NavLinkProps {
  attributes?: DrupalAttribute
  key: number
  href: string
  children: string
}

/**
 * Link for use within a NavItem
 *
 * @param attributes {DrupalAttribute} Drupal-type Attributes object
 * @param key
 * @example
 * <NavLink key={key}></NavLink>
 *
 * @returns JSX.Element
 */
const NavLink = ({
  attributes = new DrupalAttribute(''),
  key,
  href,
  children = '',
}: NavLinkProps): JSX.Element => {
  const navLinkAttributes: Record<string, unknown> = {
    className: classNames('miz-nav__link', attributes.get('class')),
  }

  attributes.forEach((value, att) => {
    if (att === 'class') {
      navLinkAttributes.className = value.join(' ')
    } else {
      navLinkAttributes[att] = value
    }
  })

  return (
    <a href={href} key={key} {...navLinkAttributes}>
      {children}
    </a>
  )
}

interface NavButtonProps {
  attributes?: DrupalAttribute
  children: string
}

const NavButton = ({
  attributes = new DrupalAttribute(''),
  children,
}: NavButtonProps): JSX.Element => {
  const iClicked = () => {
    return console.log('clicked')
  }

  return (
    <Button
      attributes={attributes.addClass('miz-nav__button', 'miz-dropdown__button')}
      onClick={iClicked}
    >
      {children}
      <i className="miz-icon material-icons miz-icon--md" aria-hidden="true">
        arrow_drop_down
      </i>
    </Button>
  )
}

interface NavContentProps {
  attributes?: DrupalAttribute
  content: Record<string, unknown>
}
const NavContent = ({
  attributes = new DrupalAttribute(''),
  content,
}: NavContentProps): JSX.Element => {
  const listItems = Object.entries(content).map((item: any, i): JSX.Element => {
    switch (item[0]) {
      case 'link':
        return (
          <NavLink key={i} attributes={attributes} href={item[1].href}>
            {item[1].text}
          </NavLink>
        )
      case 'button':
        return (
          <NavButton key={i} attributes={new DrupalAttribute('').addClass('miz-nav__link')}>
            {item[1].content}
          </NavButton>
        )
      case 'list':
        return (
          <NavList
            list={item[1]}
            attributes={new DrupalAttribute('').addClass('miz-nav__sub-list')}
          />
        )
      case 'menu':
        return (
          <Menu></Menu>
          // <NavList
          //   list={item[1]}
          //   attributes={new DrupalAttribute('').addClass('miz-nav__sub-list')}
          // />
        )
      default:
        return <li key={i}>An unknown</li>
    }
  })

  return <>{listItems}</>
}

export default NavContent
