import React from 'react'
import DrupalAttribute from 'drupal-attribute'
import classNames from 'classnames'
import Card, {
  CardBody,
  CardSubtitle,
  CardTitle,
  CardText,
  CardLinks,
  CardImage,
  CardProps,
  CardTitleProps,
  CardImageProps,
  CardTextProps,
} from 'Components/Card/Card'

export const NewsImage = ({
  attributes = new DrupalAttribute(''),
  src,
  alt,
}: CardImageProps): JSX.Element => {
  const NewsImageAttributes = {
    className: classNames('miz-news-card__thumb-container', attributes.get('class')),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      NewsImageAttributes[key] = value
    }
  })

  return (
    <div {...NewsImageAttributes}>
      <CardImage src={src} alt={alt} attributes={attributes.addClass('miz-news-card__thumb')} />
    </div>
  )
}

export interface NewsTitleProps extends CardTitleProps {
  branded?: boolean
}

export const NewsTitle = ({
  attributes = new DrupalAttribute(''),
  children,
  branded = false,
}: NewsTitleProps): JSX.Element => {
  const NewsTitleAttributes = {
    className: classNames(
      {
        'miz-card__title--news': branded,
        'miz-card__title--mark': branded,
        'miz-graphik': branded,
      },
      attributes.get('class'),
    ),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      NewsTitleAttributes[key] = value
    }
  })

  return (
    <CardTitle attributes={attributes.addClass(NewsTitleAttributes.className)}>
      {children}
    </CardTitle>
  )
}

export const NewsTopic = ({
  attributes = new DrupalAttribute(''),
  children,
}: CardTextProps): JSX.Element => {
  const NewsTopicAttributes = {
    className: classNames(
      'miz-card__text',
      'miz-clarendon',
      'miz-news-card__topic',
      attributes.get('class'),
    ),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      NewsTopicAttributes[key] = value
    }
  })

  return (
    <CardText attributes={attributes.addClass(NewsTopicAttributes.className)}>{children}</CardText>
  )
}

export interface NewsCardProps extends CardProps {
  topic?: string
  title?: string
  subtitle?: string
  image?: string
  links?: any
}

const NewsCard = ({
  attributes = new DrupalAttribute(''),
  title = 'Card Title',
  subtitle,
  topic,
  children,
  links,
  image,
  branded = false,
  theme = 'default',
}: NewsCardProps): JSX.Element => {
  const NewsCardAttributes = {
    className: classNames(
      'miz-news-card',
      {
        'miz-card--dark': theme === 'dark',
        'miz-card--brand': branded,
      },
      attributes.get('class'),
    ),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      NewsCardAttributes[key] = value
    }
  })

  return (
    <Card attributes={attributes.addClass(NewsCardAttributes.className)}>
      {topic && <NewsTopic>{topic}</NewsTopic>}

      {image && <NewsImage src={image} alt={''} />}

      <CardBody>
        {title && <NewsTitle branded={branded}>{title}</NewsTitle>}
        {subtitle && <CardSubtitle>{subtitle}</CardSubtitle>}
        <CardText>{children}</CardText>
        {links && <CardLinks links={links} />}
      </CardBody>
    </Card>
  )
}

export default NewsCard
