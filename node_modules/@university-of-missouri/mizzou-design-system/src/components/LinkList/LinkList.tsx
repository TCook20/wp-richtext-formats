import React from 'react'
import classNames from 'classnames'
import DrupalAttribute from 'drupal-attribute'

export interface LinkListProps {
  attributes?: DrupalAttribute
  layout?: 'default' | 'inline'
  align?: 'default' | 'right'
  fill?: boolean
  branded?: boolean
  list?: any
}

const LinkList = ({
  attributes = new DrupalAttribute(''),
  layout = 'default',
  align = 'default',
  fill = false,
  branded = false,
  list,
}: LinkListProps): JSX.Element => {
  let linkList

  const LinkListAttributes = {
    className: classNames(
      'miz-link-list',
      {
        'miz-link-list--inline': layout === 'inline',
        'miz-link-list--right': align === 'right',
        'miz-link-list--fill': fill,
        'miz-link-list--brand': branded,
      },
      attributes.get('class'),
    ),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      LinkListAttributes[key] = value
    }
  })

  const listItemStyle = classNames('miz-link-list__item"')
  const listItemLinkStyle = classNames('miz-link-list__link')

  if (list) {
    linkList = list.map((listItem, i) => (
      <li className={listItemStyle} key={i}>
        <a href={listItem.url} className={listItemLinkStyle}>
          {listItem.text}{' '}
          {branded && (
            <i className="miz-icon material-icons miz-text--gold miz-flex-item--push">
              chevron_right
            </i>
          )}
        </a>
      </li>
    ))
  }

  return <ul {...LinkListAttributes}>{linkList}</ul>
}

export default LinkList
