import React from 'react'
import DrupalAttribute from 'drupal-attribute'
import classNames from 'classnames'
import { ElementAttributes } from 'Components/Base/BaseElement'
import Card, { CardBody, CardSubtitle, CardTitle, CardText } from 'Components/Card/Card'

export interface ContactCardProps extends ElementAttributes {
  children?: React.ReactNode
  title: string | React.ReactNode
  subtitle?: string | React.ReactNode
  address?: any | object
  email?: string | React.ReactNode
  phoneNumber?: string | React.ReactNode
  faxNumber?: string | React.ReactNode
  branded?: boolean
  theme?: 'default' | 'dark'
}

const ContactCard = ({
  attributes = new DrupalAttribute(''),
  title = 'Contact Us',
  subtitle = 'Department Name',
  address = {
    street: '123 Building',
    locality: 'Columbia',
    region: 'MO',
    postalCode: '65211',
  },
  email = 'email@email.com',
  phoneNumber = '(123) 456-7890',
  faxNumber = '(123) 456-7890',
  theme = 'default',
  branded = false,
  children,
}: ContactCardProps): JSX.Element => {
  let departmentAddress

  const ContactCardAttributes = {
    className: classNames(
      'miz-contact-card',
      {
        'miz-contact-card--brand': branded,
      },
      attributes.get('class'),
    ),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      ContactCardAttributes[key] = value
    }
  })

  if (address) {
    departmentAddress = (
      <address
        className="miz-card__address"
        itemProp="address"
        itemScope
        itemType="http://schema.org/PostalAddress"
      >
        <p itemProp="streetAddress">{address.street}</p>
        <p>
          <span itemProp="addressLocality">{address.locality}</span>,{' '}
          <span itemProp="addressRegion">{address.region}</span>{' '}
          <span itemProp="postalCode">{address.postalCode}</span>
        </p>
      </address>
    )
  }

  return (
    <Card theme={theme} attributes={attributes.addClass(ContactCardAttributes.className)}>
      <CardBody>
        <CardTitle>{title}</CardTitle>
        {subtitle && <CardSubtitle>{subtitle}</CardSubtitle>}
        {address && departmentAddress}
        {email && (
          <CardText>
            <a href={`mailto:${email}`}>{email}</a>
          </CardText>
        )}
        {phoneNumber && (
          <CardText>
            <strong>Phone:</strong> {phoneNumber}
          </CardText>
        )}
        {faxNumber && (
          <CardText>
            <strong>Fax:</strong> {faxNumber}
          </CardText>
        )}
        {children}
      </CardBody>
    </Card>
  )
}

export default ContactCard
