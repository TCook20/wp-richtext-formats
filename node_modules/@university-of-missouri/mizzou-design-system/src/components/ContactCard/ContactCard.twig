{#
/**
 * @macro
 * Contact Cards
 * Contact Card component. Builds a standard Mizzou Contact Card, based off the Base Card.
 *
 * @uses   AppendClasses, AddAttributes from @miz/utilities/twig/utils.twig
 * @uses   Card from @miz/components/Card/Card.twig
 * @uses   SocialSVG from @miz/components/SocialMedia/SocialMedia.twig
 *
 * Parameters:
 * @param  array params: Alert parameters
 *    params
 *    ├─ 'class'        => string
 *    ├─ 'attributes'   => array
 *    ├─ 'contents'     => string   Include HTML as string to output.
 *    ├─ 'schema'       =>
 *    └─ 'social'       => array  Array of social media SVG icons
 */
#}
{% macro ContactCard(options) %}
{% spaceless %}
  {# Imports #}
    {% import "@miz/utilities/twig/utils.twig" as utils %}
    {% from "@miz/components/SocialMedia/SocialMedia.twig" import SocialSVG as socialSVG %}
    {% from "@miz/components/Card/Card.twig" import Card as card %}

  {# Parameters #}
    {% set contact_card_class = 'miz-contact-card' %}
    {% set contact_card_class = options.class ? utils.AppendClasses(contact_card_class, options.class) : contact_card_class %}
    {% set contact_card_attributes = options.attributes is defined ? options.attributes : {} %}
    {% set contact_card_contents = options.contents %}
    {% set contact_card_schema = options.schema is defined ? true : false %}

  {# Variables #}

    {# Schema handling #}
    {% if contact_card_schema %}
      {% set contact_card_schema_type = {"itemprop": "department", "itemscope itemtype": "http://schema.org/" ~ options.schema['@type']} %}
      {% set contact_card_attributes = contact_card_schema_type|merge(contact_card_schema_type, contact_card_attributes) %}
    {% endif %}

    {# Content #}
    {% set card_contents = [] %}

    {% for content in contact_card_contents %}

      {# Contact Name #}
      {% if content.type == 'name' -%}
        {% set merge_content = content %}
        {% set merge_content = merge_content|merge({"type": "text"}) %}

        {# Handle Schema #}
        {% if contact_card_schema %}
          {% set contact_card_schema_name = {"itemprop": "name"} %}
          {% set merge_content_attributes = merge_content.attributes is defined ? merge_content.attributes : {} %}
          {% set merge_content_attributes = contact_card_schema_name|merge(contact_card_schema_name, merge_content_attributes) %}
          {% set merge_content = merge_content|merge(merge_content, {"attributes": merge_content_attributes}) %}
        {% endif %}

        {% set card_contents = card_contents|merge([merge_content]) %}

      {# Contact Address #}
      {% elseif content.type == 'address' %}
        {% set merge_content = content %}

        {% set merge_content -%}
          <address class="miz-card__address" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
            <p itemprop="streetAddress">{{ content.street }}</p>
            <p><span itemprop="addressLocality">{{ content.locality }}</span>, <span itemprop="addressRegion">{{ content.region }}</span> <span itemprop="postalCode">{{ content['postal-code'] }}</span></p>
          </address>
        {%- endset %}

        {% set card_contents = card_contents|merge([merge_content]) %}

      {# Contact Email #}
      {%- elseif content.type == 'email' %}

        {# Handles an email content hash in the form of a Link or as a simple email string #}
        {% if content.content is iterable %}
          {% set email_content_href = content.content.href %}
          {% set email_content_text = content.content.text %}
        {% else %}
          {% set email_content_href = content.content %}
          {% set email_content_text = content.content %}
        {% endif %}

        {% set email_content %}
            <a href="mailto:{{ email_content_href }}">{{ email_content_text }}</a>
        {% endset %}

        {% set merge_content = {
          "type": "text",
          "attributes": {"itemprop": "email"},
          "content": email_content
        } %}

        {% set card_contents = card_contents|merge([merge_content]) %}

      {# Contact Phone #}
      {% elseif content.type == 'telephone' %}

        {% set phone_content %}
            <strong>Phone:</strong> {{ content.content }}
        {% endset %}

        {% set merge_content = {
          "type": "text",
          "attributes": {"itemprop": "telephone"},
          "content": phone_content
        } %}

        {% set card_contents = card_contents|merge([merge_content]) %}

      {# Contact Fax #}
      {% elseif content.type == 'faxNumber' %}

        {% set fax_content %}
            <strong>Fax:</strong> {{ content.content }}
        {% endset %}

        {% set merge_content = {
          "type": "text",
          "attributes": {"itemprop": "faxNumber"},
          "content": fax_content
        } %}

        {% set card_contents = card_contents|merge([merge_content]) %}

      {# Social Media Icons #}
      {% elseif content.type == 'social' %}
        {% set contact_card_social_icon_list_content = content.content is defined and content.content is not empty ? content.content : false %}

        {# If there is content for icons, then we continue #}
        {% if contact_card_social_icon_list_content %}
          {% set contact_card_social_icon_list_class = 'miz-icon-list' %}
          {% set contact_card_social_icon_list_class = content.content.class ? utils.AppendClasses(contact_card_social_icon_list_class, content.content.class) : contact_card_social_icon_list_class %}

          {% set merge_content %}

            <div class="{{ contact_card_social_icon_list_class }}">

              {% for icon in content.content.icons %}
                {{ socialSVG(icon) }}
              {% endfor %}

            </div>
          {% endset %}

          {% set card_contents = card_contents|merge([merge_content]) %}
        {% endif %}
      {# Everything else #}
      {% else %}
        {% set card_contents = card_contents|merge([content]) %}
      {% endif %}

    {% endfor %}

    {% set card_options = {
      "class": contact_card_class,
      "attributes": contact_card_attributes,
      "contents": card_contents
    } %}

{% endspaceless %}

  {{ card(card_options) }}

{% endmacro %}
