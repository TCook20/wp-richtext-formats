import React from 'react'
import classNames from 'classnames'
import DrupalAttribute from 'drupal-attribute'
import { ElementAttributes } from 'Components/Base/BaseElement'

export interface IconProps extends ElementAttributes {
  name: string
  size?: 'sm' | 'md' | 'lg' | 'xl'
  color?: string
}

const Icon = ({
  attributes = new DrupalAttribute(''),
  name,
  size = 'md',
  color = 'black',
}: IconProps): JSX.Element => {
  const IconAttributes = {
    className: classNames(
      'miz-icon',
      'material-icons',
      {
        [`miz-icon--${size}`]: size,
        [`miz-text--${color}`]: color !== 'black',
      },
      attributes.get('class'),
    ),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      IconAttributes[key] = value
    }
  })

  return <i {...IconAttributes}>{name}</i>
}

export default Icon

export interface IconSvgProps extends IconProps {
  xlink: string
}

export const IconSvg = ({
  attributes = new DrupalAttribute(''),
  name,
  xlink = '/images/icons/svg/sprite.symbol.svg',
  size = 'md',
  color = 'black',
}: IconSvgProps): JSX.Element => {
  const IconSvgAttributes = {
    className: classNames(
      'miz-icon',
      'miz-icon__svg',
      {
        [`miz-icon--${size}`]: size,
        [`miz-svg--${color}`]: color !== 'black',
      },
      attributes.get('class'),
    ),
    'aria-hidden': true,
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      IconSvgAttributes[key] = value
    }
  })

  return (
    <svg {...IconSvgAttributes}>
      <use xlinkHref={`${xlink}#${name}`}></use>
    </svg>
  )
}
