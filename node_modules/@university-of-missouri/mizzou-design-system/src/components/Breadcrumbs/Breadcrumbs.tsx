import * as React from 'react'
import DrupalAttribute from 'drupal-attribute'
import classNames from 'classnames'

export interface BreadcrumbItemProps {
  attributes?: DrupalAttribute
  children?: React.ReactNode
  link?: string
  item: any
}

const BreadcrumbItem = ({
  attributes = new DrupalAttribute(''),
  item,
}: BreadcrumbItemProps): JSX.Element => {
  const BreadcrumbItemAttributes: Record<string, unknown> = {
    className: classNames('miz-breadcrumbs__list-item', attributes.get('class')),
  }

  attributes.forEach((value, att) => {
    if (att === 'class') {
      BreadcrumbItemAttributes.className = value.join(' ')
    } else {
      BreadcrumbItemAttributes[att] = value
    }
  })

  const itemContent = Object.entries(item).map((content: any, i): JSX.Element => {
    switch (content[0]) {
      case 'link':
        return (
          <a key={i} className={'miz-breadcrumbs__link'} href={content[1].href}>
            {content[1].text}
          </a>
        )
      case 'page':
        return (
          <span key={i} className={'miz-breadcrumbs__list-item--current'}>
            {content[1].text}
          </span>
        )
      default:
        return <span key={i}>An unknown</span>
    }
  })

  return <li {...BreadcrumbItemAttributes}>{itemContent}</li>
}

export interface BreadcrumbsListProps {
  attributes?: DrupalAttribute
  list: any
}

const BreadcrumbsList = ({
  attributes = new DrupalAttribute(''),
  list,
}: BreadcrumbsListProps): JSX.Element => {
  const BreadcrumbsListAttributes: Record<string, unknown> = {
    className: classNames('miz-breadcrumbs__list', attributes.get('class')),
  }

  attributes.forEach((value, att) => {
    if (att === 'class') {
      BreadcrumbsListAttributes.className = value.join(' ')
    } else {
      BreadcrumbsListAttributes[att] = value
    }
  })

  return (
    <ol {...BreadcrumbsListAttributes}>
      {list.items.map((item: BreadcrumbItemProps, i: number) => {
        return <BreadcrumbItem key={i} item={item} />
      })}
    </ol>
  )
}

export interface BreadcrumbsProps {
  attributes: DrupalAttribute
  branded?: boolean
  list: any
}

const Breadcrumbs = ({
  attributes = new DrupalAttribute(''),
  branded = false,
  ...list
}: BreadcrumbsProps): JSX.Element => {
  const BreadcrumbAttributes: Record<string, unknown> = {
    className: classNames(
      'miz-breadcrumbs',
      {
        'miz-breadcrumbs--brand': branded,
      },
      attributes.get('class'),
    ),
  }

  attributes.setAttribute('aria-label', 'breadcrumbs')

  attributes.forEach((value, att) => {
    if (att === 'class') {
      BreadcrumbAttributes.className = value.join(' ')
    } else {
      BreadcrumbAttributes[att] = value
    }
  })

  return (
    <nav {...BreadcrumbAttributes}>
      <BreadcrumbsList {...list} />
    </nav>
  )
}

export default Breadcrumbs
