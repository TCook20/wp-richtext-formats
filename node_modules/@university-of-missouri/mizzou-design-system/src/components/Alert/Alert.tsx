import React from 'react'
import classNames from 'classnames'
import DrupalAttribute from 'drupal-attribute'
import { ElementAttributes } from 'Components/Base/BaseElement'

export interface AlertProps extends ElementAttributes {
  children: React.ReactNode
  variant?: 'default' | 'info' | 'clear' | 'warning' | 'severe'
  link?: string
}

const Alert = ({
  attributes = new DrupalAttribute(''),
  children,
  link,
  variant = 'default',
}: AlertProps): JSX.Element => {
  const alertAttributes: Record<string, unknown> = {
    className: classNames(
      'miz-alert',
      {
        [`miz-alert--${variant}`]: variant !== 'default',
      },
      attributes.get('class'),
    ),
  }

  const [icon, setIcon] = React.useState(null)

  React.useEffect(() => {
    if (variant === 'info') {
      setIcon('info')
    } else if (variant === 'clear') {
      setIcon('info')
    } else if (variant === 'warning') {
      setIcon('warning')
    } else if (variant === 'severe') {
      setIcon('warning')
    } else {
      setIcon(null)
    }
  })

  if (link) {
    return (
      <a href={link} className="miz-linked-alert">
        <div {...alertAttributes}>
          <i className="miz-icon material-icons miz-alert__icon">{icon}</i>
          {children}
        </div>
      </a>
    )
  }
  return (
    <div {...alertAttributes}>
      <i className="miz-icon material-icons miz-alert__icon">{icon}</i>
      {children}
    </div>
  )
}

export default Alert
