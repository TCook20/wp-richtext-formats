{%- spaceless %}

  {# Imports #}
  {% import "@miz/utilities/twig/utils.twig" as utils %}
  {% from "@miz/components/Button/Button.twig" import AnchorButton as anchorButton %}

  {# Parameters #}
    {% set options = _context
      ? _context
      : {} %}

    {% set heroClass            = "miz-hero" %}
    {% set heroAddClass         = options.class ?: false %}
    {% set heroId               = options.id ?: "miz-hero" %}
    {% set heroAttributes       = options.attributes ? utils.AddAttributes( options.attributes ) %}
    {% set heroBgImage          = options["background-image"] ?: false %}
    {# Content #}
    {% set heroContent          = options["content"] ?: false %}
    {% set heroContentClass     = "miz-hero__content" %}
    {% set heroContentAddClass  = heroContent["class"] ?: false %}
    {% set heroContentAlign     = heroContent["align"] ? heroContent["align"] : false %}
    {% set heroTitle            = heroContent["title"] ? heroContent["title"] : false %}
    {% set heroOverline         = heroContent["overline"] ? heroContent["overline"] : false %}
    {% set heroButtonGroup      = heroContent["button-group"] %}

  {# Variables #}
    {% set heroClass            = heroSize ? utils.AppendClasses( heroClass, "miz-hero--" ~ heroSize ) : heroClass %}
    {% set heroClass            = heroAddClass
      ? utils.AppendClasses(heroClass, heroAddClass)
      : heroClass %}
    {% set heroBgStyle          = heroBgImage ? ' style="background-image: url(' ~ heroBgImage.url ~ ');"' %}

    {% set heroContentClass     = heroContentAlign ? utils.AppendClasses( heroContentClass, "miz-hero__content--" ~ heroContentAlign ) : heroContentClass %}
    {% set heroContentClass     = heroContentAddClass
      ? utils.AppendClasses(heroContentClass, heroContentAddClass)
      : heroContentClass %}

{% endspaceless -%}

{# Output #}
<div id="{{ heroId }}" class="{{ heroClass }}"{{ heroBgStyle }}{{ heroAttributes }}>

  {% block hero_content %}
    <div class="{{ heroContentClass }}">

      <p class="miz-hero__overline">{{ heroOverline }}</p>

      <h2 class="miz-hero__title">{{ heroTitle }}</h2>

      {% if heroButtonGroup is defined and heroButtonGroup is not empty -%}

        <div class="miz-hero__button-group">
          {% for button in heroButtonGroup %}
            {{ anchorButton( button.button ) -}}
          {% endfor %}
        </div>

      {%- endif %}
    </div>
  {% endblock %}

</div>



