import React from 'react'
import DrupalAttribute from 'drupal-attribute'
import classNames from 'classnames'
import { ElementAttributes } from 'Components/Base/BaseElement'
import Button from 'Components/Button/Button'
import DecorationTear from 'Components/Decoration/Decoration'

export interface HeroProps extends ElementAttributes {
  title: string
  overline?: string
  image?: string
  buttons?: any
  brand?: boolean
  align: 'center' | 'right' | 'left'
}

const Hero = ({
  attributes = new DrupalAttribute(''),
  title = 'Hero Title',
  overline,
  buttons,
  image,
  brand = false,
  align = 'center',
}: HeroProps): JSX.Element => {
  let buttonGroup

  const HeroAttributes = {
    id: 'miz-hero',
    className: classNames(
      'miz-hero',
      {
        'miz-hero--brand miz-decoration__tear miz-background-gel--dark': brand,
      },
      attributes.get('class'),
    ),
    style: {
      backgroundImage: `url(${image})`,
    },
  }

  const HeroContentClass = classNames('miz-hero__content', {
    [`miz-hero__content--${align}`]: align !== 'left',
  })

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      HeroAttributes[key] = value
    }
  })

  if (buttons) {
    buttonGroup = buttons.map((button, i) => (
      <Button branded={true} primary={true} key={i}>
        {button.title}
      </Button>
    ))
  }

  return (
    <div {...HeroAttributes}>
      <div className={HeroContentClass}>
        {overline && <p className="miz-hero__overline">{overline}</p>}
        <h2 className="miz-hero__title">{title}</h2>

        {buttons && <div className="miz-hero__button-group">{buttonGroup}</div>}
      </div>
      {brand && <DecorationTear />}
    </div>
  )
}

export default Hero
