import React from 'react'
import classNames from 'classnames'
import { AnchorButton } from 'Components/Button/Button'

export interface CallToActionProps {
  variant?: 'black' | 'gold' | 'image'
  image?: string
  title: string | React.ReactNode
  children: React.ReactNode
  buttons?: any
}

const CallToAction = ({
  variant = 'black',
  title = 'Call to Action',
  children,
  buttons,
  image = 'https://missouri.edu/sites/default/files/2020-07/CampusBeautyAerialOnJesse.jpg',
}: CallToActionProps): JSX.Element => {
  let buttonGroup
  let imageStyle

  if (variant === 'image') {
    imageStyle = {
      backgroundColor: '#F1B82D',
      backgroundImage: `url(${image})`,
      backgroundPosition: 'center',
      backgroundSize: 'cover',
    }
  }

  const sectionClass = classNames('miz-layer miz-layer--brand miz-cta-layer miz-main-grid__full', {
    'miz-fill--black miz-decoration miz-decoration__plus miz-decoration__plus--top-right':
      variant === 'black',
    'miz-background-gel--gold': variant === 'gold',
  })

  const frameClass = classNames('miz-cta-frame', {
    'miz-fill--white miz-text--black': variant === 'black',
    'miz-fill--black miz-text--gold': variant === 'gold',
    'miz-fill--white': variant === 'image',
  })

  if (buttons) {
    if (variant === 'gold') {
      buttonGroup = buttons.map((button, i) => (
        <AnchorButton branded={true} variant="ghost" primary={true} link={button.link} key={i}>
          {button.title}
        </AnchorButton>
      ))
    } else {
      buttonGroup = buttons.map((button, i) => (
        <AnchorButton branded={true} link={button.link} key={i}>
          {button.title}
        </AnchorButton>
      ))
    }
  }

  return (
    <section className={sectionClass} style={imageStyle}>
      <div className="miz-container">
        <div className={frameClass}>
          <header className="miz-layer__header">
            <h2 className="miz-cta-title">{title}</h2>
          </header>
          <div className="miz-layer__content miz-cta-content">
            <div className="miz-cta-content__body">{children}</div>
            {buttons && (
              <div className="miz-cta-content__action">
                <div className="miz-cta-button-group">{buttonGroup}</div>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  )
}

export default CallToAction
