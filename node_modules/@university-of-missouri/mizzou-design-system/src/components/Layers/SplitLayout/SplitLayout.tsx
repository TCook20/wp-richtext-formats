/**
 * @format
 */
import React from 'react'
import classNames from 'classnames'
import { AnchorButton } from 'Components/Button/Button'

export interface SplitLayoutProps {
  variant?: 'black' | 'offset' | 'image'
  align: 'left' | 'right'
  image?: string
  backgroundImage?: string
  title: string | React.ReactNode
  kicker?: string | React.ReactNode
  children: React.ReactNode
  buttons?: any
}

const SplitLayout = ({
  variant,
  align = 'left',
  title = 'Split Layer',
  kicker,
  children,
  buttons,
  backgroundImage = 'https://missouri.edu/sites/default/files/2019-05/tree-background_0.jpg',
  image = 'https://missouri.edu/sites/default/files/2020-07/CampusBeautyAerialOnJesse.jpg',
}: SplitLayoutProps): JSX.Element => {
  let buttonGroup
  let imageStyle

  if (variant === 'image') {
    imageStyle = {
      backgroundColor: '#000000',
      backgroundImage: `url(${backgroundImage})`,
      backgroundPosition: 'center',
      backgroundSize: 'cover',
    }
  }

  const sectionClass = classNames('miz-layer miz-layer--brand miz-main-grid__full', {
    'miz-fill--black': variant === 'black',
  })

  const KickerClass = classNames('miz-layer__kicker', {
    'miz-text--white': variant !== 'offset',
  })

  const TitleClass = classNames('miz-layer__title', {
    'miz-text--gold': variant !== 'offset',
  })

  const alignClass = classNames('miz-split-layout', {
    'miz-split-layout--flip': align === 'right',
    'miz-split-layout--no-gap': variant === 'offset',
  })

  const headerContainerClass = classNames('miz-split-layout__header', {
    'miz-split-layout__header-content miz-split-layout__offset': variant === 'offset',
    'miz-fill--black-100 miz-text--black': variant === 'offset',
  })

  const contentContainerClass = classNames('miz-layer__content miz-split-layout__content', {
    'miz-text--white': variant === 'image',
  })

  const imageFigureClass = classNames('miz-split-layout__figure', {
    'miz-split-layout__offset': variant === 'offset',
  })

  if (buttons) {
    buttonGroup = buttons.map((button, i) => (
      <AnchorButton
        branded={true}
        primary={true}
        link={button.link}
        key={i}
      >
        {button.title}
      </AnchorButton>
    ))
  }

  return (
    <section
      className={sectionClass}
      style={imageStyle}
    >
      <div className={alignClass}>
        <div className={headerContainerClass}>
          <header className='miz-layer__header miz-split-layout__header'>
            {kicker && <h2 className={KickerClass}>{kicker}</h2>}
            <h2 className={TitleClass}>{title}</h2>
          </header>
          <div className={contentContainerClass}>
            <div>{children}</div>

            {buttons && buttonGroup}
          </div>
        </div>
        {image && (
          <figure className={imageFigureClass}>
            <img
              src={image}
              alt='Image alt'
              className='miz-split-layout__image'
            />
          </figure>
        )}
      </div>
    </section>
  )
}

export default SplitLayout
