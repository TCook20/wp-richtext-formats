import React from 'react'
import classNames from 'classnames'
import { AnchorButton } from 'Components/Button/Button'

export interface QuoteProps {
  image?: string
  title: string | React.ReactNode
  kicker?: string | React.ReactNode
  attribution: string | React.ReactNode
  degree?: string | React.ReactNode
  children: React.ReactNode
  buttons?: any
}

const Quote = ({
  title = 'Quote',
  kicker,
  attribution,
  degree,
  children,
  buttons,
  image,
}: QuoteProps): JSX.Element => {
  let buttonGroup

  const contentBodyClass = classNames('miz-quote-content__body miz-background-gel--gold')
  const contentBodyStyle = {
    backgroundImage: `url('//missouri.edu/images/backgrounds/campus-beauty-web.jpg')`,
  }

  if (buttons) {
    buttonGroup = buttons.map((button, i) => (
      <AnchorButton branded={true} secondary={true} link={button.link} key={i}>
        {button.title}
      </AnchorButton>
    ))
  }

  return (
    <section className="miz-layer miz-layer--brand miz-main-grid__full">
      <div className="miz-container">
        <header className="miz-layer__header miz-layer__header--center">
          {kicker && <p className="miz-layer__kicker">{kicker}</p>}
          <h2 className="miz-layer__title">{title}</h2>
        </header>

        <div className="miz-layer__content miz-quote-content">
          <div className={contentBodyClass} style={contentBodyStyle}>
            <blockquote className="miz-quote">
              <footer className="miz-quote__footer">
                {attribution && <cite className="miz-quote__name">{attribution}</cite>}
                {degree && <p className="miz-quote__degree">{degree}</p>}
              </footer>

              <div className="miz-quote__quote">{children}</div>
            </blockquote>
            {buttons && buttonGroup}
          </div>
          {image && (
            <div className="miz-quote-content__image-container">
              <img src={image} alt="Image alt text" />
            </div>
          )}
        </div>
      </div>
    </section>
  )
}

export default Quote
