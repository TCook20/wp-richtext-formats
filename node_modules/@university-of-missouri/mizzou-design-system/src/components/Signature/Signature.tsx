import React from 'react'
import classNames from 'classnames'
import DrupalAttribute from 'drupal-attribute'
import { ElementAttributes } from 'Components/Base/BaseElement'

export interface SignatureProps extends ElementAttributes {
  size?: 'small' | 'medium' | 'large'
  reverse?: boolean
  center?: boolean
  children: React.ReactNode
}

const Signature = ({
  attributes = new DrupalAttribute(''),
  size = 'small',
  reverse = false,
  center = false,
  children,
}: SignatureProps): JSX.Element => {
  const SignatureAttributes = {
    className: classNames(
      {
        'mu-sig-24': size === 'small',
        'mu-sig-32': size === 'medium',
        'mu-sig-48': size === 'large',
        center,
        reverse,
      },
      attributes.get('class'),
    ),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      SignatureAttributes[key] = value
    }
  })

  return <div {...SignatureAttributes}>{children}</div>
}

export default Signature

export interface LogoProps extends ElementAttributes {
  text?: string
  link?: string
}

export const Logo = ({
  attributes = new DrupalAttribute(''),
  text = 'MU Logo',
  link = 'https://missouri.edu',
}: LogoProps): JSX.Element => {
  const LogoAttributes = {
    className: classNames('logo', attributes.get('class')),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      LogoAttributes[key] = value
    }
  })

  return (
    <p {...LogoAttributes}>
      <a href={link}>{text}</a>
    </p>
  )
}

export interface WordmarkProps extends ElementAttributes {
  text?: string
  link?: string
}

export const Wordmark = ({
  attributes = new DrupalAttribute(''),
  text = 'University of Missouri',
  link = 'https://missouri.edu',
}: WordmarkProps): JSX.Element => {
  const WordmarkAttributes = {
    className: classNames('wordmark', attributes.get('class')),
  }

  attributes.forEach((value, key) => {
    if (key !== 'class') {
      WordmarkAttributes[key] = value
    }
  })

  return (
    <h1 {...WordmarkAttributes}>
      <a href={link}>{text}</a>
    </h1>
  )
}
