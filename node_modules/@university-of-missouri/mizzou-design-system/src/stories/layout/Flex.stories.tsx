/**
 * @format
 */
import React from 'react'
import { ComponentMeta, ComponentStory } from '@storybook/react'
import classNames from 'classnames'

import { ComponentWithLayout, addLayout } from 'Layout/Layout'
import { FlexLayout } from 'Layout/Flex/Flex'

const TestComponent = ({ className }) => {
  const testComponentClass = classNames(className)

  return (
    <div className={testComponentClass}>
      <div
        className='miz-fill--black-100'
        style={{ padding: '1rem', borderRadius: '8px' }}
      >
        Panel 1
      </div>
      <div
        className='miz-fill--black-100'
        style={{ padding: '1rem', borderRadius: '8px' }}
      >
        Panel 2
      </div>
    </div>
  )
}

const Template: ComponentStory<any> = addLayout<ComponentWithLayout<FlexLayout>>(({ ...args }) => (
  <TestComponent {...args} />
))

export default {
  title: 'Design System/Layout',
  component: TestComponent,
  args: {
    allowLayout: true,
    advanced: false,
  },
  argTypes: {
    allowLayout: {
      name: 'Allow layouts',
      table: {
        category: 'Layout',
        disable: true,
      },
    },
    layout: {
      name: 'Layout',
      table: {
        category: 'Layout',
      },
    },
    advanced: {
      name: 'Toggle advanced options',
      control: 'boolean',
      table: {
        category: 'Advanced',
      },
    },
    className: {
      name: 'Add CSS',
      type: 'string',
      table: {
        category: 'Advanced',
      },
      if: {
        arg: 'advanced',
      },
    },
  },
  decorators: [
    (Story) => (
      <div className='miz-container'>
        <Story />
      </div>
    ),
  ],
} as ComponentMeta<typeof TestComponent>

export const Flex = Template.bind({})
Flex.args = {
  allowLayout: true,
  layout: { type: 'flex', direction: 'row', gap: true },
} as ComponentWithLayout<FlexLayout>
