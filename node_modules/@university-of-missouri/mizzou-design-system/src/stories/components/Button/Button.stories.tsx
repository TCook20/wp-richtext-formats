import React from 'react'
import { Story } from '@storybook/react'
import DrupalAttribute from 'drupal-attribute'

import Button, { ButtonProps } from 'Components/Button/Button'
import { description, status } from 'Components/Button/config.json'
import mdx from './Button.mdx'
import KitchenSinkMDX from './KitchenSink.mdx'

interface ButtonStoryTemplateProps extends ButtonProps {
  state: string | boolean
  styleContext?: string
}

const ButtonStoryTemplate: Story = ({
  state = false,
  styleContext = '',
  ...args
}: ButtonStoryTemplateProps) => {
  const props = args
  const stateStyling = new DrupalAttribute('')

  if (state) {
    stateStyling.addClass(state as string).setAttribute('tabIndex', '1')
  }

  if (typeof styleContext === 'string') {
    stateStyling.addClass(styleContext)
  }

  return <Button {...props} attributes={stateStyling} />
}

export default {
  component: Button,
  title: 'Design System/Components/Buttons',
  parameters: {
    docs: {
      description: {
        component: description,
      },
      page: mdx,
    },
    status,
  },
  argTypes: {
    children: {
      table: {
        category: 'Props',
      },
    },
    attributes: {
      table: {
        disable: true,
      },
    },
    onClick: {
      table: {
        disable: true,
      },
    },
    primary: {
      table: {
        category: 'Options',
      },
    },
    secondary: {
      table: {
        category: 'Options',
      },
    },
    branded: {
      table: {
        category: 'Options',
      },
    },
    variant: {
      table: {
        category: 'Options',
      },
    },
    size: {
      table: {
        category: 'Options',
      },
    },
  },
}
export const Buttons = ButtonStoryTemplate.bind({})
Buttons.args = {
  children: 'Mizzou Button',
  primary: false,
  secondary: false,
  branded: false,
  size: 'default',
  variant: 'default',
}

export const KitchenSink = ButtonStoryTemplate.bind({})
KitchenSink.storyName = 'Sink'
KitchenSink.parameters = {
  docs: {
    page: KitchenSinkMDX,
    previewTabs: {
      canvas: { hidden: true },
    },
  },
}
