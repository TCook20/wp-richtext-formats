import { detect } from './utils'
import { show, hide } from './toggle'

// CSS for dropdowns
const dropdownCSS = {
  container: 'miz-dropdown',
  show_content: 'show',
}

// Button data attribute
const dropdownButtonAttribute = 'data-miz-toggle-controls'

export default () => {
  // Locate all the dropdown containers in the document and store in a collection
  const dropdownCollection = document.getElementsByClassName(dropdownCSS.container)

  for (let i = 0; i < dropdownCollection.length; i += 1) {
    const dropdown = dropdownCollection[i]
    const dropdownController = dropdown.querySelector(`[${dropdownButtonAttribute}]`)
    if (dropdownController !== null) {
      const dropdownContent = document.getElementById(dropdownController.dataset.mizToggleControls)
      const hideThis = () => {
        dropdownController.classList.remove('active')
        dropdownContent.hidden = true
        return hide(dropdownController, dropdownContent, dropdownCSS.show_content)
      }

      dropdown.addEventListener('click', (e) => {
        if (dropdownController.contains(e.target)) {
          if (dropdownContent.classList.contains(dropdownCSS.show_content)) {
            dropdownContent.style.maxHeight = dropdownContent.offsetHeight
            hideThis()
          } else {
            show(dropdownController, dropdownContent, dropdownCSS.show_content)
            dropdownContent.hidden = false
            detect(dropdown, dropdownController, hideThis)
            dropdownController.classList.add('active')
          }
        }
      })
    }
  }
}
