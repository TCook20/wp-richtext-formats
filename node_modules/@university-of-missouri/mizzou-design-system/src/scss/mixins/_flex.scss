@use 'sass:math';

@mixin miz-make-flex-container($flex-direction: row, $flex-wrap: wrap) {
  /* stylelint-disable-next-line */
  display: flex;
  flex-flow: $flex-direction $flex-wrap;
}

@mixin miz-make-flex-items($flex-grow: 1, $flex-shrink: 1, $flex-basis: auto) {
  & > * {
    flex: $flex-grow $flex-shrink $flex-basis;
  }
}

@mixin miz-make-flex-row(
  $flex-direction: row,
  $flex-wrap: nowrap,
  $flex-grow: 1,
  $flex-shrink: 1,
  $flex-basis: auto
) {
  @include miz-make-flex-container($flex-direction, $flex-wrap);
  @include miz-make-flex-items($flex-grow, $flex-shrink, $flex-basis);
}

@mixin miz-make-flex-col-ready($gutter: $miz-grid-gutter-width) {
  position: relative;

  /* Prevent columns from becoming too narrow when at smaller grid tiers by
     always setting `width: 100%;`. This works because we use `flex` values
     later on to override this initial width. */
  width: 100%;
  padding-right: math.div($gutter, 2);
  padding-left: math.div($gutter, 2);
}

@mixin miz-make-flex-column(
  $flex-direction: column,
  $flex-wrap: wrap,
  $flex-grow: 1,
  $flex-shrink: 1,
  $flex-basis: auto
) {
  @include miz-make-flex-container($flex-direction, $flex-wrap);
  @include miz-make-flex-items($flex-grow, $flex-shrink, $flex-basis);
}
