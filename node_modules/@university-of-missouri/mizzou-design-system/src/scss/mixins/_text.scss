@use 'sass:math';

// Text presets
@mixin miz-text-heading-level-7 {
  font-size: $miz-font-size-level-7;
  font-style: normal;
  font-weight: $miz-font-weight-semi-bold;
}

@mixin miz-text-heading-level-6 {
  font-size: $miz-font-size-level-6;
  font-style: normal;
  font-weight: $miz-font-weight-semi-bold;
}

@mixin miz-text-heading-level-5 {
  font-size: $miz-font-size-level-5;
  font-style: normal;
  font-weight: $miz-font-weight-semi-bold;
}

@mixin miz-text-heading-level-4 {
  font-size: $miz-font-size-level-4;
  font-style: normal;
  font-weight: $miz-font-weight-semi-bold;
}

@mixin miz-text-heading-level-3 {
  font-size: $miz-font-size-level-3;
  font-style: normal;
  font-weight: $miz-font-weight-semi-bold;
}

@mixin miz-text-heading-level-2 {
  font-size: $miz-font-size-level-2;
  font-style: normal;
  font-weight: $miz-font-weight-semi-bold;
}

// Text Underline
@mixin miz-text-add-underscore(
  $padding: $miz-space-xxs,
  $underscore-thickness: $miz-size-s,
  $underscore-style: solid,
  $underscore-color: $miz-gold
) {
  display: table;
  padding-bottom: $padding;
  border-bottom: $underscore-thickness $underscore-style $underscore-color;
}

// Text Crop Mixins
// These mixins help fix issues introduced by line-height.
// They are currently only to be used in components.

// Open Sans
// stylelint-disable
@mixin text-crop--open-sans($line-height: 1.3, $top-adjustment: 0px, $bottom-adjustment: 0px) {
  @include text-crop($line-height, $top-adjustment, $bottom-adjustment);
}

@mixin text-crop--open-sans-level-7 {
  @include text-crop;
}

@mixin miz-text-crop--graphik($line-height: 1.3, $top-adjustment: 0px, $bottom-adjustment: 0px) {
  // Configured in Step 1
  $top-crop: 12;
  $bottom-crop: 11;
  $crop-font-size: 32;
  $crop-line-height: 1.5;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop: math.div(max(
      ($top-crop + ($line-height - $crop-line-height) * (math.div($crop-font-size, 2))),
      0
    ), $crop-font-size);
  $dynamic-bottom-crop: math.div(max(
      ($bottom-crop + ($line-height - $crop-line-height) * (math.div($crop-font-size, 2))),
      0
    ), $crop-font-size);

  // Mixin output
  line-height: $line-height;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 0;
    width: 0;
  }

  &::before {
    margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
  }

  &::after {
    margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
  }
}

// Mixin generated at: http://text-crop.eightshapes.com/
@mixin text-crop($line-height: 1.3, $top-adjustment: 0px, $bottom-adjustment: 0px) {
  // Configured in Step 1
  $top-crop: 13;
  $bottom-crop: 12;
  $crop-font-size: 32;
  $crop-line-height: 1.5;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop: math.div(max(
      ($top-crop + ($line-height - $crop-line-height) * (math.div($crop-font-size, 2))),
      0
    ), $crop-font-size);
  $dynamic-bottom-crop: math.div(max(
      ($bottom-crop + ($line-height - $crop-line-height) * (math.div($crop-font-size, 2))),
      0
    ), $crop-font-size);

  // Mixin output
  line-height: $line-height;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 0;
    width: 0;
  }

  &::before {
    margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
  }

  &::after {
    margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
  }
}
// Mixin generated at: http://text-crop.eightshapes.com/?typeface-selection=google-font&typeface=Open%20Sans&custom-typeface-name=Helvetica&custom-typeface-url=&custom-typeface-weight=400&custom-typeface-style=normal&weight-and-style=regular&size=32&line-height=1.5&top-crop=13&bottom-crop=12
// stylelint-enable
